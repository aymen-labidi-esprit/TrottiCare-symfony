# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    twilio.sid: '%env(TWILIO_SID)%'
    twilio.auth_token: '%env(TWILIO_AUTH_TOKEN)%'
    twilio.from_number: '%env(TWILIO_FROM_NUMBER)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    App\Service\SmsService:
        arguments:
            $twilioSid: '%twilio.sid%'
            $twilioAuthToken: '%twilio.auth_token%'
            $twilioFromNumber: '%twilio.from_number%'
            $logger: '@logger'
    # Explicitly configure repositories
    App\Repository\TrottinetteRepository:
        public: true
        tags: ['doctrine.repository_service']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # configure services manually (example for FacialRecognitionService)
    App\Service\FacialRecognitionService:
        arguments:
            $httpClient: '@http_client' # Inject the default http client service
            $faceApiEndpoint: '%env(resolve:FACE_RECOGNITION_API_ENDPOINT)%'

    # configure EmailVerifier (if not already auto-configured)
    App\Security\EmailVerifier:
        arguments:
            $verifyEmailHelper: '@symfonycasts.verify_email.helper'
            $mailer: '@mailer.mailer'
            $entityManager: '@doctrine.orm.entity_manager'

    # Ensure user checker is tagged correctly (autoconfigure usually handles this)
    App\Security\FacialUserChecker:
        tags: ['security.user_checker']
