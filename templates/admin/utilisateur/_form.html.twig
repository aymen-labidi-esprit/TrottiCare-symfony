{# templates/admin/utilisateur/_form_tailwind.html.twig #}
{# Expects 'form' and optionally 'button_label' variables #}

{% block stylesheets %}
    {# Include styles here ONLY if this partial is used standalone OR #}
    {# if base.html.twig doesn't already have these styles defined globally #}
    <style>
        /* Reusable form input/select/checkbox/textarea styles */
        .form-input, .form-select, .form-textarea {
            appearance: none; display: block; width: 100%;
            padding: 0.5rem 0.75rem; font-size: 0.875rem; line-height: 1.5;
            color: #1f2937; background-color: #fff; background-clip: padding-box;
            border: 1px solid #d1d5db; border-radius: 0.375rem;
            transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        }
        .form-textarea { min-height: 80px; }
        .form-select {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
            background-position: right 0.5rem center; background-repeat: no-repeat;
            background-size: 1.5em 1.5em; padding-right: 2.5rem;
        }
        /* Specific style for checkbox/switch - adjust size/color as needed */
        .form-checkbox, .form-switch {
            padding: 0; height: 1rem; width: 1rem; /* Size */
            color: #3b82f6; /* blue-600 */
            border: 1px solid #9ca3af; /* gray-400 */
            border-radius: 0.25rem; /* rounded */
            vertical-align: middle;
            margin-top: 0.125em; /* Align with label text */
            flex-shrink: 0;
            cursor: pointer;
        }
        .form-switch {
            width: 2rem; height: 1.125rem; /* Slightly different size for switch */
            border-radius: 9999px; /* rounded-full */
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23fff'/%3e%3c/svg%3e");
            background-position: left center;
            background-repeat: no-repeat;
            background-size: contain;
            border-color: rgba(0,0,0,.25);
            transition: background-position .15s ease-in-out;
        }
        .form-checkbox:checked, .form-switch:checked {
            border-color: #2563eb; /* blue-600 */
            background-color: #2563eb;
        }
        .form-checkbox:checked {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='white'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e");
        }
        .form-switch:checked {
            background-position: right center;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23fff'/%3e%3c/svg%3e");
        }

        .form-input:focus, .form-select:focus, .form-textarea:focus, .form-checkbox:focus, .form-switch:focus {
            outline: none; border-color: #3b82f6;
            box-shadow: 0 0 0 1px #3b82f6; /* ring-1 ring-blue-500 */
        }
        /* Error state styling */
        .border-error { border-color: #ef4444 !important; }
        .ring-error { box-shadow: 0 0 0 1px #ef4444 !important; }
        .form-error-message {
            display: block; margin-top: 0.25rem; font-size: 0.75rem; color: #dc2626;
        }

        /* Reusable Button Styles */
        .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.625rem 1.25rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; white-space: nowrap; }
        .button-success { background-color: #10b981; color: white; border-color: #10b981; } .button-success:hover { background-color: #059669; border-color: #047857; }

        /* FontAwesome Icons */
        .fas { display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; -webkit-font-smoothing: antialiased; font-family: "Font Awesome 6 Free"; font-weight: 900; }
        .fa-save:before { content: "\f0c7"; }
        .mr-2 { margin-right: 0.5rem; }
    </style>
{% endblock %}

{# --- FORM START --- #}
{{ form_start(form, {'attr': {'novalidate': 'novalidate'}}) }}

    {# Render form fields with Tailwind classes #}
<div class="space-y-5"> {# Vertical spacing #}

    {# Loop through standard text/email/tel fields #}
    {% for field_name in ['nom', 'prenom', 'email', 'telephone'] %}
        {% set field = attribute(form, field_name) %}
        <div>
            {{ form_label(field, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
            {% set widget_attrs = {'class': 'form-input' } %}
            {% if form.vars.submitted and not field.vars.valid %}
                {% set widget_attrs = widget_attrs|merge({'class': 'form-input border-error focus:ring-error focus:border-error'}) %}
            {% endif %}
            {{ form_widget(field, {'attr': widget_attrs}) }}
            {% if form.vars.submitted and not field.vars.valid %}
                <p class="form-error-message">{{ form_errors(field) }}</p>
            {% endif %}
        </div>
    {% endfor %}

    {# Role Select #}
    <div>
        {{ form_label(form.roleInterne, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
        {% set widget_attrs = {'class': 'form-select' } %}
        {% if form.vars.submitted and not form.roleInterne.vars.valid %}
            {% set widget_attrs = widget_attrs|merge({'class': 'form-select border-error focus:ring-error focus:border-error'}) %}
        {% endif %}
        {{ form_widget(form.roleInterne, {'attr': widget_attrs}) }}
        {% if form.vars.submitted and not form.roleInterne.vars.valid %}
            <p class="form-error-message">{{ form_errors(form.roleInterne) }}</p>
        {% endif %}
    </div>

    {# Verified Checkbox #}
    <div class="relative flex items-start">
        <div class="flex items-center h-5">
            {% set widget_attrs = {'class': 'form-checkbox' } %}
            {% if form.vars.submitted and not form.isVerified.vars.valid %}
                {% set widget_attrs = widget_attrs|merge({'class': 'form-checkbox border-error focus:ring-error'}) %}
            {% endif %}
            {{ form_widget(form.isVerified, {'attr': widget_attrs}) }}
        </div>
        <div class="ml-3 text-sm">
            {{ form_label(form.isVerified, null, {'label_attr': {'class': 'font-medium text-gray-700'}}) }}
            {# <p class="text-gray-500">Help text if needed.</p> #}
        </div>
        {% if form.vars.submitted and not form.isVerified.vars.valid %}
            {# Error shown below checkbox block #}
            <p class="form-error-message absolute -bottom-4 left-0 w-full">{{ form_errors(form.isVerified) }}</p>
        {% endif %}
    </div>

    {# Active Switch #}
    <div class="flex items-center justify-between">
        {# Label on the left #}
        <span class="flex-grow flex flex-col mr-4">
                {{ form_label(form.isActive, null, {'label_attr': {'class': 'text-sm font-medium text-gray-700'}}) }}
            {% if form.isActive.vars.help is defined and form.isActive.vars.help %}
                <span class="text-xs text-gray-500">{{ form.isActive.vars.help }}</span>
            {% endif %}
             </span>
        {# Switch on the right #}
        {% set widget_attrs = {'class': 'form-switch' } %}
        {% if form.vars.submitted and not form.isActive.vars.valid %}
            {% set widget_attrs = widget_attrs|merge({'class': 'form-switch border-error focus:ring-error'}) %}
        {% endif %}
        {{ form_widget(form.isActive, {'attr': widget_attrs}) }}
    </div>
    {# Error message for Active Switch (if needed, typically below) #}
    {% if form.vars.submitted and not form.isActive.vars.valid %}
        <p class="form-error-message">{{ form_errors(form.isActive) }}</p>
    {% endif %}


    {# Password Fields #}
    {% if form.plainPassword is defined %}
        {# Removed the info alert about leaving fields blank - not applicable for 'new' #}
        {# Add specific help text if needed #}
        <div>
            {{ form_label(form.plainPassword.first, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
            {% set widget_attrs = {'class': 'form-input' } %}
            {% if form.vars.submitted and not form.plainPassword.first.vars.valid %}
                {% set widget_attrs = widget_attrs|merge({'class': 'form-input border-error focus:ring-error focus:border-error'}) %}
            {% endif %}
            {{ form_widget(form.plainPassword.first, {'attr': widget_attrs}) }}
            {% if form.vars.submitted and not form.plainPassword.first.vars.valid %}
                <p class="form-error-message">{{ form_errors(form.plainPassword.first) }}</p>
            {% endif %}
            {% if form.plainPassword.first.vars.help is defined and form.plainPassword.first.vars.help %}
                <p class="mt-1 text-xs text-gray-500">{{ form.plainPassword.first.vars.help }}</p>
            {% endif %}
        </div>
        <div>
            {{ form_label(form.plainPassword.second, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
            {% set widget_attrs = {'class': 'form-input' } %}
            {% if form.vars.submitted and not form.plainPassword.second.vars.valid %}
                {# Check overall plainPassword validity for second field error #}
                {% set widget_attrs = widget_attrs|merge({'class': 'form-input border-error focus:ring-error focus:border-error'}) %}
            {% endif %}
            {{ form_widget(form.plainPassword.second, {'attr': widget_attrs}) }}
            {% if form.vars.submitted and not form.plainPassword.second.vars.valid %}
                <p class="form-error-message">{{ form_errors(form.plainPassword.second) }}</p>
            {% endif %}
            {# Display the parent repeated field error (like 'passwords must match') #}
            {% if form.vars.submitted and form.plainPassword.vars.errors|length > 0 %}
                <p class="form-error-message">{{ form_errors(form.plainPassword) }}</p>
            {% endif %}
        </div>
    {% endif %}

</div> {# End space-y container #}

    {# Submit Button #}
<div class="mt-8 pt-5 border-t border-gray-200 text-right">
    <button type="submit" class="button button-success">
        <i class="fas fa-save mr-2"></i>{{ button_label|default('Enregistrer') }}
    </button>
</div>

{{ form_end(form) }}
{# --- FORM END --- #}