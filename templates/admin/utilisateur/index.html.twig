{# templates/admin/utilisateur/index.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Gestion des Utilisateurs{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# Ensure Tailwind base styles are loaded via base.html.twig #}
    <style>
        /* Basic form input/select styles (reuse/adapt) */
        .form-input, .form-select {
            appearance: none; display: block; width: 100%;
            padding: 0.5rem 0.75rem; font-size: 0.875rem; line-height: 1.5;
            color: #1f2937; background-color: #fff; background-clip: padding-box;
            border: 1px solid #d1d5db; border-radius: 0.375rem;
            transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        }
        .form-select {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
            background-position: right 0.5rem center; background-repeat: no-repeat;
            background-size: 1.5em 1.5em; padding-right: 2.5rem;
        }
        .form-input:focus, .form-select:focus {
            outline: none; border-color: #3b82f6;
            box-shadow: 0 0 0 1px #3b82f6; /* ring-1 ring-blue-500 */
        }
        /* Add specific height for form elements in filter bar if needed */
        .filter-form .form-input, .filter-form .form-select { height: 2.25rem; /* h-9 */ }

        /* Reusable Button Styles (reuse/adapt) */
        .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.5rem 1rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; white-space: nowrap; }
        .button-sm { padding: 0.375rem 0.75rem; font-size: 0.75rem; } /* Smaller button */
        .button-primary { background-color: #3b82f6; color: white; border-color: #3b82f6; } .button-primary:hover { background-color: #2563eb; border-color: #1d4ed8;}
        .button-secondary { background-color: #e5e7eb; color: #374151; border-color: #d1d5db; } .button-secondary:hover { background-color: #d1d5db; border-color: #9ca3af;}
        .button-info { background-color: #0ea5e9; color: white; border-color: #0ea5e9; } .button-info:hover { background-color: #0284c7; border-color: #0369a1; }
        .button-warning { background-color: #f59e0b; color: white; border-color: #f59e0b; } .button-warning:hover { background-color: #d97706; border-color: #b45309; }
        .button-danger { background-color: #ef4444; color: white; border-color: #ef4444; } .button-danger:hover { background-color: #dc2626; border-color: #b91c1c; }
        .button-outline-danger { color: #dc2626; border-color: #ef4444; background-color: transparent;} .button-outline-danger:hover { background-color: #fee2e2; }
        .button:disabled { opacity: 0.6; cursor: not-allowed; }

        /* Reusable Status Badge Styles */
        .status-badge {
            padding: 0.25em 0.6em; border-radius: 9999px; /* pill */
            font-size: 0.7rem; /* text-xs */ font-weight: 500; /* font-medium */
            text-transform: uppercase; letter-spacing: 0.05em;
            white-space: nowrap; line-height: 1;
        }
        .badge-green { background-color: #dcfce7; color: #166534; } /* green */
        .badge-red { background-color: #fee2e2; color: #991b1b; } /* red */
        .badge-yellow { background-color: #fef9c3; color: #854d0e; } /* yellow */
        .badge-gray { background-color: #f3f4f6; color: #374151; } /* gray */
        .badge-blue { background-color: #dbeafe; color: #1e40af; } /* blue */
        .badge-indigo { background-color: #e0e7ff; color: #3730a3; } /* indigo */
        .badge-purple { background-color: #f3e8ff; color: #581c87; } /* purple */


        /* FontAwesome Icons */
        .fas { display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; -webkit-font-smoothing: antialiased; font-family: "Font Awesome 6 Free"; font-weight: 900; }
        .fa-users:before { content: "\f0c0"; }
        .fa-plus:before { content: "\2b"; }
        .fa-eye:before { content: "\f06e"; }
        .fa-edit:before { content: "\f044"; }
        .fa-trash:before { content: "\f1f8"; }
        .fa-filter:before { content: "\f0b0"; }
        .fa-sync-alt:before { content: "\f2f1"; } /* Reset icon */
        .mr-1 { margin-right: 0.25rem; }
        .mr-1\.5 { margin-right: 0.375rem; }
        .mr-2 { margin-right: 0.5rem; }

    </style>
{% endblock %}

{% block body %}
    <div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
        <div class="container mx-auto max-w-7xl">

            {# 1. Header Section #}
            <div class="flex flex-col sm:flex-row justify-between items-center mb-6 gap-4">
                <h1 class="text-2xl lg:text-3xl font-bold text-gray-900">
                    <i class="fas fa-users mr-2 text-blue-600"></i>Gestion des Utilisateurs
                </h1>
                <a href="{{ path('admin_utilisateur_new') }}" class="button button-primary">
                    <i class="fas fa-plus mr-1.5"></i> Créer un Utilisateur
                </a>
            </div>

            {# 2. Flash Messages #}
            {% include 'partials/_flash_messages.html.twig' ignore missing %}

            {# 3. Filter Form - Tailwind styled #}
            <div class="bg-white rounded-lg shadow p-4 mb-6">
                {{ form_start(filterForm, {'attr': {'class': 'grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4 items-end filter-form'}}) }}
                <div class="sm:col-span-2 md:col-span-2">
                    {# Use form_label for accessibility, visually hidden if needed #}
                    <label for="{{ filterForm.search.vars.id }}" class="sr-only">Rechercher</label>
                    {{ form_widget(filterForm.search, {'attr': {'placeholder': 'Rechercher (Nom, Email)...', 'class': 'form-input'}}) }}
                </div>
                <div>
                    <label for="{{ filterForm.role.vars.id }}" class="sr-only">Rôle</label>
                    {{ form_widget(filterForm.role, {'attr': {'class': 'form-select'}}) }}
                </div>
                <div class="flex gap-2">
                    <button type="submit" class="button button-primary button-sm flex-grow">
                        <i class="fas fa-filter mr-1"></i>Filtrer
                    </button>
                    <a href="{{ path('admin_utilisateur_index') }}" class="button button-secondary button-sm flex-grow" title="Réinitialiser">
                        <i class="fas fa-sync-alt mr-1"></i>Réinitialiser
                    </a>
                </div>
                {{ form_end(filterForm) }}
            </div>


            {# 4. Table Section #}
            <div class="bg-white rounded-lg shadow overflow-hidden">
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                        <tr>
                            {# Add KNP Sortable links if using pagination bundle #}
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nom</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Prénom</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Téléphone</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Rôle</th>
                            <th class="px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">Statut</th>
                            <th class="px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">Vérifié</th>
                            <th class="px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                        </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                        {# Ensure 'pagination' variable is passed from controller if using KnpPaginator #}
                        {% set users = pagination|default([]) %} {# Use default empty array if pagination not set #}
                        {% for utilisateur in users %}
                            <tr class="hover:bg-gray-50">
                                <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-500">{{ utilisateur.id }}</td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900">{{ utilisateur.nom }}</td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-800">{{ utilisateur.prenom }}</td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-600">{{ utilisateur.email }}</td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-600">{{ utilisateur.telephone | default('N/A') }}</td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm">
                                    {# Role Badge - Choose colors #}
                                    {% set role_badge_class = 'badge-gray' %}
                                    {% if utilisateur.roleInterne == 'admin' %}
                                        {% set role_badge_class = 'badge-purple' %}
                                    {% elseif utilisateur.roleInterne == 'partenaire' %}
                                        {% set role_badge_class = 'badge-blue' %}
                                    {% endif %}
                                    <span class="status-badge {{ role_badge_class }}">{{ utilisateur.roleInterne | capitalize }}</span>
                                </td>
                                <td class="px-4 py-3 whitespace-nowrap text-center text-sm">
                                    {# Active Status Badge #}
                                    <span class="status-badge {{ utilisateur.isActive ? 'badge-green' : 'badge-red' }}">
                                    {{ utilisateur.isActive ? 'Actif' : 'Inactif' }}
                                </span>
                                </td>
                                <td class="px-4 py-3 whitespace-nowrap text-center text-sm">
                                    {# Verified Status Badge #}
                                    <span class="status-badge {{ utilisateur.isVerified ? 'badge-green' : 'badge-yellow' }}">
                                    {{ utilisateur.isVerified ? 'Oui' : 'Non' }}
                                </span>
                                </td>
                                <td class="px-4 py-3 whitespace-nowrap text-right text-sm font-medium space-x-1">
                                    <a href="{{ path('admin_utilisateur_show', {'id': utilisateur.id}) }}" class="button button-sm button-info text-white" title="Voir">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <a href="{{ path('admin_utilisateur_edit', {'id': utilisateur.id}) }}" class="button button-sm button-warning text-white" title="Modifier">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    {# Include delete form partial #}
                                    {# Ensure the path and variable name are correct #}
                                    {% include 'admin/utilisateur/_delete_form.html.twig' with {'utilisateur': utilisateur} %}
                                </td>
                            </tr>
                        {% else %}
                            <tr>
                                <td colspan="9" class="text-center py-12 px-6 text-gray-500"> {# Increased colspan #}
                                    <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z" />
                                    </svg>
                                    <h3 class="mt-2 text-sm font-medium text-gray-900">Aucun utilisateur trouvé</h3>
                                    <p class="mt-1 text-sm text-gray-500">Essayez de modifier vos filtres ou créez un nouvel utilisateur.</p>
                                    {% if app.request.query.get('search') or app.request.query.get('role') %}
                                        <div class="mt-6">
                                            <a href="{{ path('admin_utilisateur_index') }}" class="button button-sm button-secondary">
                                                Réinitialiser les filtres
                                            </a>
                                        </div>
                                    {% endif %}
                                </td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>

            {# 5. Pagination Controls #}
{#            {% if pagination is defined and pagination.getTotalItemCount > pagination.getItemNumberPerPage() %}#}
{#                <div class="pagination-controls text-center mt-6">#}
{#                    {{ knp_pagination_render(pagination) }}#}
{#                    <div class="text-sm text-gray-600 mt-2">#}
{#                        {% set firstItem = (pagination.getCurrentPageNumber() - 1) * pagination.getItemNumberPerPage() + 1 %}#}
{#                        {% set lastItem = firstItem + pagination.count - 1 %}#}
{#                        Affichage de {{ firstItem }} à {{ lastItem }} sur {{ pagination.getTotalItemCount }} utilisateur{{ pagination.getTotalItemCount > 1 ? 's' : '' }}.#}
{#                    </div>#}
{#                </div>#}
{#            {% elseif pagination is defined and pagination.getTotalItemCount > 0 %}#}
{#                <div class="text-sm text-gray-600 mt-4 text-center">#}
{#                    Total : {{ pagination.getTotalItemCount }} utilisateur{{ pagination.getTotalItemCount > 1 ? 's' : '' }}.#}
{#                </div>#}
{#            {% endif %}#}


        </div> {# End Container #}
    </div> {# End Page Wrapper #}
{% endblock %}