{# templates/admin/trottinette/index.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Gestion des Trottinettes - Admin{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# Ensure Tailwind base styles are loaded via base.html.twig #}
    <style>
        /* --- COPY/ADAPT Styles from maintenance/index.html.twig --- */
        /* Status Badge Styles */
        .status-badge { padding: 0.25em 0.6em; border-radius: 9999px; font-size: 0.7rem; font-weight: 500; text-transform: uppercase; letter-spacing: 0.05em; white-space: nowrap; line-height: 1; display: inline-block;}
        .status-disponible { background-color: #dcfce7; color: #166534; } /* green */
        .status-en_location { background-color: #fef9c3; color: #854d0e; } /* yellow */
        .status-en_maintenance { background-color: #fee2e2; color: #991b1b; } /* red */

        /* Basic form input/select styles */
        .form-input, .form-select { appearance: none; display: block; width: 100%; padding: 0.5rem 0.75rem; font-size: 0.875rem; line-height: 1.5; color: #1f2937; background-color: #fff; background-clip: padding-box; border: 1px solid #d1d5db; border-radius: 0.375rem; transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out; }
        .form-select { background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e"); background-position: right 0.5rem center; background-repeat: no-repeat; background-size: 1.5em 1.5em; padding-right: 2.5rem; }
        .form-input:focus, .form-select:focus { outline: none; border-color: #3b82f6; box-shadow: 0 0 0 1px #3b82f6; }
        .filter-form .form-input, .filter-form .form-select { height: 2.25rem; }

        /* Basic Button Styles */
        .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.5rem 1rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; white-space: nowrap; }
        .button-sm { padding: 0.375rem 0.75rem; font-size: 0.75rem; }
        .button-primary { background-color: #3b82f6; color: white; border-color: #3b82f6; } .button-primary:hover { background-color: #2563eb; border-color: #1d4ed8;}
        .button-secondary { background-color: #e5e7eb; color: #374151; border-color: #d1d5db; } .button-secondary:hover { background-color: #d1d5db; border-color: #9ca3af;}
        .button-info { background-color: #0ea5e9; color: white; border-color: #0ea5e9; } .button-info:hover { background-color: #0284c7; border-color: #0369a1; }
        .button-warning { background-color: #f59e0b; color: white; border-color: #f59e0b; } .button-warning:hover { background-color: #d97706; border-color: #b45309; }
        .button-outline-danger { color: #dc2626; border-color: #ef4444; background-color: transparent;} .button-outline-danger:hover { background-color: #fee2e2; }
        .button:disabled { opacity: 0.6; cursor: not-allowed; }

        /* FontAwesome Icons */
        .fas { display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; -webkit-font-smoothing: antialiased; font-family: "Font Awesome 6 Free"; font-weight: 900; }
        .fa-motorcycle:before { content: "\f21c"; }
        .fa-plus:before { content: "\2b"; }
        .fa-filter:before { content: "\f0b0"; }
        .fa-sync-alt:before { content: "\f2f1"; }
        .fa-eye:before { content: "\f06e"; }
        .fa-edit:before { content: "\f044"; }
        .fa-trash:before { content: "\f1f8"; }
        .mr-1 { margin-right: 0.25rem; }
        .mr-1\.5 { margin-right: 0.375rem; }
        .mr-2 { margin-right: 0.5rem; }

        /* Pagination Container Styles */
        .pagination-container { display: flex; flex-wrap: wrap; justify-content: space-between; align-items: center; margin-top: 1.5rem; padding-top: 1rem; border-top: 1px solid #e5e7eb; }
        .pagination-controls { display: flex; align-items: center; gap: 0.75rem; font-size: 0.875rem; color: #4b5563; margin-top: 0.5rem; }
        .pagination-controls label { margin-bottom: 0; white-space: nowrap; margin-right: 0.25rem; }
        .limit-select { padding: 0.25rem 1.75rem 0.25rem 0.5rem; font-size: 0.875rem; line-height: 1.25; height: auto; min-width: 4.5rem; background-size: 1.2em 1.2em; background-position: right 0.3rem center; border-radius: 0.375rem; border: 1px solid #d1d5db; }
        /* --- END COPY/ADAPT --- */
    </style>
{% endblock %}

{% block body %}
    <div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
        <div class="container mx-auto max-w-7xl">

            {# 1. Header Section #}
            <div class="flex flex-col sm:flex-row justify-between items-center mb-8 gap-4">
                <h1 class="text-2xl lg:text-3xl font-bold text-gray-900">
                    <i class="fas fa-motorcycle mr-2 text-blue-600"></i>Gestion des Trottinettes
                </h1>
                <a href="{{ path('admin_trottinette_new') }}" class="button button-primary">
                    <i class="fas fa-plus mr-1.5"></i> Nouvelle trottinette
                </a>
            </div>

            {# 2. Status Cards #}
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
                <div class="bg-white rounded-lg shadow-md border border-gray-200 p-6 flex items-center gap-4">
                    <div class="flex-shrink-0 rounded-full p-3 bg-green-100 text-green-600"> <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M5 13l4 4L19 7" /></svg> </div>
                    <div>
                        <div class="text-sm text-gray-500 uppercase tracking-wider">Disponibles</div>
                        <div class="text-2xl font-bold text-gray-900">{{ countDisponible|default(0) }}</div>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow-md border border-gray-200 p-6 flex items-center gap-4">
                    <div class="flex-shrink-0 rounded-full p-3 bg-yellow-100 text-yellow-600"> <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" /></svg> </div>
                    <div>
                        <div class="text-sm text-gray-500 uppercase tracking-wider">En location</div>
                        <div class="text-2xl font-bold text-gray-900">{{ countEnLocation|default(0) }}</div>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow-md border border-gray-200 p-6 flex items-center gap-4">
                    <div class="flex-shrink-0 rounded-full p-3 bg-red-100 text-red-600"> <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4" /></svg> </div>
                    <div>
                        <div class="text-sm text-gray-500 uppercase tracking-wider">En maintenance</div>
                        <div class="text-2xl font-bold text-gray-900">{{ countEnMaintenance|default(0) }}</div>
                    </div>
                </div>
            </div>

            {# 3. Flash Messages #}
            {% include 'partials/_flash_messages.html.twig' ignore missing %}

            {# 4. Filter Form #}
            <div class="bg-white rounded-lg shadow p-4 mb-6">
                {{ form_start(filterForm, {'attr': {'class': 'grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 items-end filter-form'}}) }}
                {# Search Input (spanning more columns) #}
                <div class="sm:col-span-2 md:col-span-2 lg:col-span-2">
                    <label for="{{ filterForm.search.vars.id }}" class="sr-only">Rechercher</label>
                    {{ form_widget(filterForm.search) }} {# Attributes set in FormType #}
                    {{ form_errors(filterForm.search) }}
                </div>
                {# Status Filter #}
                <div>
                    <label for="{{ filterForm.etat.vars.id }}" class="sr-only">État</label> {# Use 'etat' from FormType #}
                    {{ form_widget(filterForm.etat) }} {# Attributes set in FormType #}
                    {{ form_errors(filterForm.etat) }}
                </div>
                {# Buttons #}
                <div class="flex gap-2">
                    <button type="submit" class="button button-primary button-sm flex-grow">
                        <i class="fas fa-filter mr-1"></i>Filtrer
                    </button>
                    <a href="{{ path('admin_trottinette_index') }}" class="button button-secondary button-sm flex-grow" title="Réinitialiser">
                        <i class="fas fa-sync-alt mr-1"></i>Réinitialiser
                    </a>
                </div>
                {{ form_end(filterForm) }}
            </div>


            {# 5. Table Section #}
            <div class="bg-white rounded-lg shadow overflow-hidden">
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                        <tr>
                            {# Adjust Headers based on Trottinette entity #}
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Modèle</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">N° Série</th>
                            {# Optional columns: <th...>Utilisateur</th> <th...>Pt Relais</th> #}
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">État</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Batterie</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Localisation</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Autonomie</th>
                            <th class="px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                        </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                        {# Iterate over the pagination object #}
                        {% for trottinette in pagination %}
                            <tr class="hover:bg-gray-50">
                                <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-500">{{ trottinette.id }}</td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900">{{ trottinette.modele }}</td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-600">{{ trottinette.numeroSerie }}</td>
                                {# Optional columns #}
                                {# <td...>{{ trottinette.utilisateur ? trottinette.utilisateur.fullName : 'N/A' }}</td> #}
                                {# <td...>{{ trottinette.pointRelais ? trottinette.pointRelais.nom : 'N/A' }}</td> #}
                                <td class="px-4 py-3 whitespace-nowrap text-sm">
                                <span class="status-badge status-{{ trottinette.etat.value|lower }}">
                                    {{ trottinette.etat.value|replace({'_': ' '})|capitalize }}
                                </span>
                                </td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-600">{{ trottinette.batterie }}%</td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-600">{{ trottinette.localisation|default('N/A') }}</td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-600">{{ trottinette.autonomie|default('N/A') }}</td>
                                <td class="px-4 py-3 whitespace-nowrap text-right text-sm font-medium space-x-1">
                                    <a href="{{ path('admin_trottinette_show', {'id': trottinette.id}) }}" class="button button-sm button-info text-white" title="Voir"> <i class="fas fa-eye"></i> </a>
                                    <a href="{{ path('admin_trottinette_edit', {'id': trottinette.id}) }}" class="button button-sm button-warning text-white" title="Modifier"> <i class="fas fa-edit"></i> </a>
                                    <form method="post" action="{{ path('admin_trottinette_delete', {'id': trottinette.id}) }}" onsubmit="return confirm('Supprimer la trottinette #{{ trottinette.id }} ?');" class="inline-block">
                                        <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ trottinette.id) }}">
                                        <button type="submit" class="button button-sm button-outline-danger" title="Supprimer"> <i class="fas fa-trash"></i> </button>
                                    </form>
                                </td>
                            </tr>
                        {% else %}
                            <tr>
                                {# Adjust colspan based on visible columns #}
                                <td colspan="8" class="text-center py-12 px-6 text-gray-500">
                                    <svg class="mx-auto h-12 w-12 text-gray-400" ...> ... </svg>
                                    <h3 class="mt-2 text-sm font-medium text-gray-900">Aucune trottinette trouvée</h3>
                                    <p class="mt-1 text-sm text-gray-500">Essayez de modifier vos filtres ou ajoutez une nouvelle trottinette.</p>
                                    {% if filterForm.vars.value.search is not empty or filterForm.vars.value.etat is not empty %}
                                        <div class="mt-6">
                                            <a href="{{ path('admin_trottinette_index') }}" class="button button-sm button-secondary"> Réinitialiser les filtres </a>
                                        </div>
                                    {% endif %}
                                </td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div> {# End Table Section #}

            {# 6. Pagination Container #}
            {% if pagination is defined and pagination.getTotalItemCount > 0 %}
                <div class="pagination-container">
                    <div> {# Links #}
                        {% if pagination.pageCount > 1 %}
                            {{ knp_pagination_render(pagination) }} {# Uses Tailwind template #}
                        {% endif %}
                    </div>
                    <div class="pagination-controls"> {# Summary & Limit #}
                        <span> {# Item count #}
                            {% set firstItem = pagination.firstItemNumber|default(0) %}
                            {% set lastItem = pagination.lastItemNumber|default(0) %}
                            {% set totalItems = pagination.getTotalItemCount|default(0) %}
                            Affichage de {{ firstItem }}-{{ lastItem }} sur {{ totalItems }}
                        </span>
                        <div class="inline-flex items-center"> {# Limit Selector #}
                            <label for="itemsPerPageSelect" class="whitespace-nowrap">par page:</label>
                            <select id="itemsPerPageSelect" class="form-select limit-select">
                                {% for limitOption in allowedLimits %}
                                    <option value="{{ limitOption }}" {{ limitOption == currentLimit ? 'selected' : '' }}>
                                        {{ limitOption }}
                                    </option>
                                {% endfor %}
                            </select>
                        </div>
                    </div>
                </div>
            {% endif %} {# End Pagination Section #}

        </div> {# End Container #}
    </div> {# End Page Wrapper #}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    {# --- JavaScript for Limit Selector --- #}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const selectElement = document.getElementById('itemsPerPageSelect');
            if (selectElement) {
                selectElement.addEventListener('change', function() {
                    const newLimit = this.value;
                    const currentUrl = new URL(window.location.href);
                    const params = currentUrl.searchParams;
                    params.set('limit', newLimit);
                    params.set('page', '1'); // Reset page on limit change
                    currentUrl.search = params.toString();
                    window.location.href = currentUrl.toString();
                });
            }
        });
    </script>
{% endblock %}