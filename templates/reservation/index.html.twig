{% extends 'base.html.twig' %}

{% block title %}Liste des Réservations{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .status-badge {
            padding: 0.25em 0.6em;
            border-radius: 9999px;
            font-size: 0.7rem;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.05em;
            white-space: nowrap;
            line-height: 1;
        }
        .status-confirmed { background-color: #dcfce7; color: #166534; }
        .status-pending { background-color: #fef9c3; color: #854d0e; }
        .status-cancelled { background-color: #fee2e2; color: #991b1b; }
        .form-input, .form-select {
            appearance: none; width: 100%; padding: 0.5rem 0.75rem;
            font-size: 0.875rem; line-height: 1.5; color: #1f2937;
            background-color: #fff; border: 1px solid #d1d5db;
            border-radius: 0.375rem; transition: border-color .15s ease-in-out;
        }
        .form-input:focus, .form-select:focus {
            outline: none; border-color: #3b82f6; box-shadow: 0 0 0 1px #3b82f6;
        }
        .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.5rem 1rem; border-radius: 0.375rem; font-weight: 500; cursor: pointer; transition: all 0.2s; border: 1px solid transparent; }
        .button-primary { background-color: #3b82f6; color: white; }
        .button-primary:hover { background-color: #2563eb; }
        .button-outline-secondary { background-color: transparent; color: #6b7280; border: 1px solid #d1d5db; }
        .button-outline-secondary:hover { background-color: #f3f4f6; }
        .button-outline-danger { background-color: transparent; color: #dc2626; border: 1px solid #ef4444; }
        .button-outline-danger:hover { background-color: #fee2e2; }
        .button-sm { padding: 0.25rem 0.5rem; font-size: 0.75rem; }
    </style>
{% endblock %}

{% block body %}
<div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
    <div class="container mx-auto max-w-7xl">

        {# Header #}
        <div class="flex flex-col sm:flex-row justify-between items-center mb-8 gap-4">
            <h1 class="text-2xl lg:text-3xl font-bold text-gray-900">
                <i class="fas fa-calendar-alt mr-2 text-blue-600"></i>Liste des Réservations
            </h1>
            <div class="flex gap-2">
                <a href="{{ path('reservation_new') }}" class="button button-primary">
                    <i class="fas fa-plus mr-1.5"></i> Nouvelle réservation
                </a>
                <button id="openStatsBtn" class="button button-outline-secondary">
                    <i class="fas fa-chart-pie mr-1.5"></i> Statistiques
                </button>
            </div>
        </div>

        {# Flash Messages #}
        {% include 'partials/_flash_messages.html.twig' ignore missing %}

        {# Search Form #}
        <form method="get" action="{{ path('reservation_index') }}" class="bg-white rounded-lg shadow p-4 mb-6">
            <div class="grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-4 items-end">
                <div>{{ form_row(searchForm.dateDebut, { attr: { class: 'form-input' } }) }}</div>
                <div>{{ form_row(searchForm.dateFin, { attr: { class: 'form-input' } }) }}</div>
                <div>{{ form_row(searchForm.status, { attr: { class: 'form-select' } }) }}</div>
                <div>
                    <button type="submit" class="button button-primary w-full">
                        <i class="fas fa-filter mr-1.5"></i> Filtrer
                    </button>
                </div>
            </div>
        </form>

        {# Table #}
        <div class="bg-white rounded-lg shadow overflow-hidden">
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">ID</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Début</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Fin</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Montant</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Statut</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Paiement</th>
                            <th class="px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        {% for reservation in pagination %}
                        <tr>
                            <td class="px-4 py-3">{{ reservation.id }}</td>
                            <td class="px-4 py-3">{{ reservation.dateDebut ? reservation.dateDebut|date('Y-m-d') : '' }}</td>
                            <td class="px-4 py-3">{{ reservation.dateFin ? reservation.dateFin|date('Y-m-d') : '' }}</td>
                            <td class="px-4 py-3">{{ reservation.montant }}</td>
                            <td class="px-4 py-3">
                                <span class="status-badge status-{{ reservation.status.value|lower }}">
                                    {{ reservation.status.label() }}
                                </span>
                            </td>
                            <td class="px-4 py-3">{{ reservation.paiement.label() }}</td>
                            <td class="px-4 py-3 text-right space-x-1">
                                <a href="{{ path('reservation_show', {id: reservation.id}) }}" class="button button-sm button-outline-secondary" title="Voir">
                                    <i class="fas fa-eye"></i>
                                </a>
                                <a href="{{ path('reservation_edit', {id: reservation.id}) }}" class="button button-sm button-outline-secondary" title="Modifier">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <button type="button" 
                                    class="button button-sm button-outline-danger openDeleteModalBtn"
                                    data-action="{{ path('reservation_delete', {id: reservation.id}) }}"
                                    data-token="{{ csrf_token('delete' ~ reservation.id) }}"
                                    title="Supprimer">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </td>
                        </tr>
                        {% else %}
                        <tr>
                            <td colspan="7" class="text-center py-12 text-gray-500">
                                Aucune réservation trouvée.
                            </td>
                        </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>

        {# Pagination #}
        <div class="mt-6">
            {{ knp_pagination_render(pagination) }}
        </div>

        {# Chart Modal #}
        <div id="statsModal" class="fixed inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center hidden z-50">
            <div class="bg-white p-6 rounded-lg shadow-lg w-full max-w-md">
                <canvas id="statsChart" width="400" height="400"></canvas>
                <button id="closeStatsBtn" class="button button-outline-secondary mt-4 w-full">Fermer</button>
            </div>
        </div>

        {# Delete Modal #}
        <div id="deleteModal" class="fixed inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center hidden z-50">
            <div class="bg-white p-6 rounded-lg shadow-lg w-full max-w-sm">
                <h2 class="text-lg font-semibold mb-4 text-gray-800">Confirmer la suppression</h2>
                <p class="text-sm text-gray-600 mb-6">Êtes-vous sûr de vouloir supprimer cette réservation ?</p>

                <form method="post" id="deleteForm">
                    <input type="hidden" name="_token" id="deleteToken">
                    <div class="flex justify-end gap-2">
                        <button type="button" id="cancelDeleteBtn" class="button button-outline-secondary">Annuler</button>
                        <button type="submit" class="button button-outline-danger">Supprimer</button>
                    </div>
                </form>
            </div>
        </div>

    </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
// Chart Modal Logic
const openStatsBtn = document.getElementById('openStatsBtn');
const closeStatsBtn = document.getElementById('closeStatsBtn');
const statsModal = document.getElementById('statsModal');
let statsChart = null;

openStatsBtn.addEventListener('click', async () => {
    statsModal.classList.remove('hidden');
    const ctx = document.getElementById('statsChart').getContext('2d');

    if (statsChart) statsChart.destroy();

    try {
        const response = await fetch("{{ path('reservation_stats') }}");
        const data = await response.json();

        statsChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: Object.keys(data),
                datasets: [{
                    data: Object.values(data),
                    backgroundColor: [
                        'rgba(75, 192, 192, 0.7)',
                        'rgba(255, 99, 132, 0.7)',
                        'rgba(255, 206, 86, 0.7)'
                    ]
                }]
            }
        });
    } catch (e) {
        console.error(e);
    }
});

closeStatsBtn.addEventListener('click', () => {
    statsModal.classList.add('hidden');
});

// Delete Modal Logic
const deleteModal = document.getElementById('deleteModal');
const deleteForm = document.getElementById('deleteForm');
const deleteTokenInput = document.getElementById('deleteToken');
const cancelDeleteBtn = document.getElementById('cancelDeleteBtn');

document.querySelectorAll('.openDeleteModalBtn').forEach(button => {
    button.addEventListener('click', () => {
        const action = button.getAttribute('data-action');
        const token = button.getAttribute('data-token');

        deleteForm.setAttribute('action', action);
        deleteTokenInput.value = token;

        deleteModal.classList.remove('hidden');
    });
});

cancelDeleteBtn.addEventListener('click', () => {
    deleteModal.classList.add('hidden');
});
</script>
{% endblock %}
