
----- /Users/mac/Downloads/my_project_troti-vf/templates/home/index.html.twig -----
{# templates/home/index.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Accueil - TrottiCare Location{% endblock %}

{% block body %}
    {# Hero Section (Same as before) #}
<section class="hero-section bg-gradient-to-r from-green-50 to-blue-50 py-16 lg:py-24">
    <div class="container">
        <div class="hero-text-wrapper max-w-3xl mx-auto text-center">
            <h1 class="hero-h1 text-4xl md:text-5xl lg:text-6xl font-bold text-gray-900 mb-6">
                {{ heroTitle|default('Location de Trottinettes Électriques') }}
            </h1>
            <p class="hero-p text-lg md:text-xl text-gray-600 mb-8">
                {{ heroSubtitle|default('Découvrez un moyen écologique et pratique de vous déplacer.') }}
            </p>
            {# Button linking to the scooter list page #}
            <a href="{{ path('public_trottinette_index') }}" class="button button-hero inline-block">Voir les trottinettes</a>
        </div>
    </div>
</section>

{# Main Content Area #}
<main class="container main-content-area py-16 lg:py-24">

    {# --- MAP SECTION RE-ADDED --- #}
    <section id="map-section" class="mb-16 lg:mb-24">
        <h2 class="section-title text-center">Carte des Zones Desservies</h2> {# Changed title slightly #}
        {# Container for the map - Apply styles from main.css or inline #}
        <div id="map-container" class="map-container rounded-lg shadow-lg overflow-hidden">
            {# Loading indicator or placeholder (will be replaced by map) #}
            <div style="display: flex; align-items: center; justify-content: center; height: 100%; background-color: #f3f4f6; color: #6b7280;">
                Chargement de la carte...
            </div>
        </div>
    </section>
    {# --- END MAP SECTION --- #}

    {# --- Nearby Scooters Section --- #}
    <section id="scooters-nearby" class="mb-16 lg:mb-24">
        <div class="events-header flex justify-between items-center mb-8">
            <h2 class="section-title-inline mb-0">Quelques Trottinettes Disponibles</h2> {# Changed title #}
            <a href="{{ path('public_trottinette_index') }}">
                <button class="button button-secondary">Voir toutes les trottinettes</button>
            </a>
        </div>
        <div class="scooter-grid grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 lg:gap-8">
            {% for scooter_loop_item in scooters %} {# Use scooters passed from controller #}
                {% include 'scooter/_scooter_card.html.twig' with {
                    'scooter_data': scooter_loop_item,
                    'loop': loop
                } %}
            {% else %}
                <p class="text-center text-gray-600 col-span-full">Aucune trottinette disponible affichée pour le moment.</p>
            {% endfor %}
        </div>
    </section>

    {# --- Upcoming Events Section --- #}
    <section id="upcoming-events">
        <div class="events-header flex justify-between items-center mb-8">
            <h2 class="section-title-inline mb-0">Événements à venir</h2>
            <a href="{{ path('public_event_index') }}"> {# Ensure this route exists #}
                <button class="button button-secondary">Voir tous les événements</button>
            </a>
        </div>
        <div class="events-grid grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 lg:gap-8">
            {# Adjusted path #}
            {% for event_loop_item in upcoming_events %}
            {% include 'public/event/_event_card.html.twig' with {
            'event_data': event_loop_item
            } %}
            {% else %}
            <p class="text-center text-gray-600 col-span-full">Aucun événement à venir programmé.</p>
            {% endfor %}
        </div>
    </section>

</main> {# End Main Content Area #}
{% endblock %}

{# --- JAVASCRIPT BLOCK FOR MAP INITIALIZATION --- #}
{% block javascripts %}

    <script>

        document.addEventListener('DOMContentLoaded', function () {
            const mapElement = document.getElementById('map-container');

            // Check if Leaflet (L) is loaded (linked in base.html.twig)
            if (mapElement && typeof L !== 'undefined') {
                try {
                    // --- Initialize Map ---
                    const mapCenterLat = 36.8065; // Tunis Latitude
                    const mapCenterLng = 10.1815; // Tunis Longitude
                    const mapZoom = 13;           // Zoom level for Tunis

                    mapElement.innerHTML = ''; // Clear the loading message

                    const map = L.map(mapElement).setView([mapCenterLat, mapCenterLng], mapZoom);

                    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                        attribution: '© <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
                        maxZoom: 18, // Standard max zoom for OSM
                    }).addTo(map);

                    console.log('Empty Leaflet map initialized and centered on Tunis.');

                    // --- NO MARKERS ADDED HERE ---
                    // The markersJson variable is not used in this version.

                } catch (error) {
                    console.error("Failed to initialize Leaflet map:", error);
                    if (mapElement) {
                        mapElement.innerHTML = "<p style='padding: 20px; text-align: center; color: red;'>Impossible de charger la carte.</p>";
                    }
                }
            } else {
                if (!mapElement) console.warn("Map container '#map-container' not found.");
                if (typeof L === 'undefined') console.error("Leaflet library (L) not loaded. Check <script> tag in base.html.twig.");
                if(mapElement) mapElement.innerHTML = "<p style='padding: 20px; text-align: center; color: orange;'>Carte interactive indisponible.</p>";
            }
        });
    </script>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/_footer.html.twig -----
{# templates/_footer.html.twig #}
<footer class="footer"> {# Ensure .footer styles are in app.css #}
    <div class="container"> {# Ensure .container styles... #}
        <div class="footer-content"> {# Ensure .footer-content styles... #}
            <p class="copyright">© {{ "now"|date("Y") }} TrottiCare. Tous droits réservés.</p> {# Ensure .copyright styles... #}
            <div class="footer-links"> {# Ensure .footer-links styles... #}
                {# Add actual routes or static links #}
                <a href="#" class="footer-link">Mentions légales</a> {# Ensure .footer-link styles... #}
                <a href="#" class="footer-link">CGU</a>
                <a href="#" class="footer-link">Confidentialité</a>
            </div>
        </div>
    </div>
</footer>



----- /Users/mac/Downloads/my_project_troti-vf/templates/pagination/tailwindcss_pagination.html.twig -----
{# templates/pagination/tailwindcss_pagination.html.twig #}
{% if pageCount > 1 %}
    <nav class="flex items-center justify-between border-t border-gray-200 px-4 sm:px-0">
        {# Previous Page Link #}
        <div class="-mt-px flex w-0 flex-1">
            {% if previous is defined %}
                <a href="{{ path(route, query|merge({(pageParameterName): previous})) }}"
                   class="inline-flex items-center border-t-2 border-transparent pr-1 pt-4 text-sm font-medium text-gray-500 hover:border-gray-300 hover:text-gray-700">
                    <svg class="mr-3 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M18 10a.75.75 0 01-.75.75H4.66l2.1 1.95a.75.75 0 11-1.02 1.1l-3.5-3.25a.75.75 0 010-1.1l3.5-3.25a.75.75 0 111.02 1.1l-2.1 1.95h12.59A.75.75 0 0118 10z" clip-rule="evenodd" />
                    </svg>
                    Précédent
                </a>
            {% else %}
                <span class="inline-flex items-center border-t-2 border-transparent pr-1 pt-4 text-sm font-medium text-gray-400 cursor-not-allowed">
                     <svg class="mr-3 h-5 w-5 text-gray-300" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M18 10a.75.75 0 01-.75.75H4.66l2.1 1.95a.75.75 0 11-1.02 1.1l-3.5-3.25a.75.75 0 010-1.1l3.5-3.25a.75.75 0 111.02 1.1l-2.1 1.95h12.59A.75.75 0 0118 10z" clip-rule="evenodd" />
                    </svg>
                    Précédent
                </span>
            {% endif %}
        </div>

        {# Page Number Links #}
        <div class="hidden md:-mt-px md:flex">
            {% for page in pagesInRange %}
                {% if page != current %}
                    <a href="{{ path(route, query|merge({(pageParameterName): page})) }}"
                       class="inline-flex items-center border-t-2 border-transparent px-4 pt-4 text-sm font-medium text-gray-500 hover:border-gray-300 hover:text-gray-700">
                        {{ page }}
                    </a>
                {% else %}
                    <span class="inline-flex items-center border-t-2 border-indigo-500 px-4 pt-4 text-sm font-medium text-indigo-600" aria-current="page">
                        {{ page }}
                    </span>
                {% endif %}
            {% endfor %}
        </div>

        {# Next Page Link #}
        <div class="-mt-px flex w-0 flex-1 justify-end">
            {% if next is defined %}
                <a href="{{ path(route, query|merge({(pageParameterName): next})) }}"
                   class="inline-flex items-center border-t-2 border-transparent pl-1 pt-4 text-sm font-medium text-gray-500 hover:border-gray-300 hover:text-gray-700">
                    Suivant
                    <svg class="ml-3 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M2 10a.75.75 0 01.75-.75h12.59l-2.1-1.95a.75.75 0 111.02-1.1l3.5 3.25a.75.75 0 010 1.1l-3.5 3.25a.75.75 0 11-1.02-1.1l2.1-1.95H2.75A.75.75 0 012 10z" clip-rule="evenodd" />
                    </svg>
                </a>
            {% else %}
                <span class="inline-flex items-center border-t-2 border-transparent pl-1 pt-4 text-sm font-medium text-gray-400 cursor-not-allowed">
                    Suivant
                    <svg class="ml-3 h-5 w-5 text-gray-300" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M2 10a.75.75 0 01.75-.75h12.59l-2.1-1.95a.75.75 0 111.02-1.1l3.5 3.25a.75.75 0 010 1.1l-3.5 3.25a.75.75 0 11-1.02-1.1l2.1-1.95H2.75A.75.75 0 012 10z" clip-rule="evenodd" />
                    </svg>
                </span>
            {% endif %}
        </div>
    </nav>
{% endif %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/registration/register.html.twig -----
{# templates/registration/register.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Inscription - TrottiCare{% endblock %}

{% block body %}
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-8 col-lg-7">
                <div class="card shadow-lg">
                    <div class="card-body p-4 p-md-5">
                        <h1 class="h3 mb-4 fw-bold text-center">Créer votre compte TrottiCare</h1>

                        {# Display flash messages if any #}
                        {% include 'partials/_flash_messages.html.twig' %}

                        {# Display general form errors #}
                        {{ form_errors(registrationForm) }}

                        {# Start the form #}
                        {{ form_start(registrationForm, {'attr': {'id': 'registration-form'}}) }}

                        <div class="row g-3">
                            <div class="col-md-6">
                                {{ form_row(registrationForm.nom) }}
                            </div>
                            <div class="col-md-6">
                                {{ form_row(registrationForm.prenom) }}
                            </div>
                            <div class="col-12">
                                {{ form_row(registrationForm.email) }}
                            </div>
                            <div class="col-12">
                                {{ form_row(registrationForm.telephone) }}
                            </div>
                            <div class="col-md-6">
                                {{ form_row(registrationForm.plainPassword.first) }}
                            </div>
                            <div class="col-md-6">
                                {{ form_row(registrationForm.plainPassword.second) }}
                            </div>
                        </div>

                        {# --- REMOVED: Facial Recognition Section --- #}
                        {# <hr class="my-4"> ... entire face setup UI ... #}

                        {# --- ADDED: Terms agreement --- #}
                        <div class="mt-3">
                            {{ form_row(registrationForm.agreeTerms) }}
                            {# Note: form_row includes label, widget, errors, help #}
                            {# Manual rendering if more control needed:
                             <div class="form-check">
                                 {{ form_widget(registrationForm.agreeTerms) }}
                                 {{ form_label(registrationForm.agreeTerms) }}
                                 {{ form_errors(registrationForm.agreeTerms) }}
                             </div>
                            #}
                        </div>

                        {# CSRF Token (rendered by form_end) #}
                        {# Submit Button - Now enabled by default #}
                        <button type="submit" id="submitButton" class="btn btn-primary w-100 mt-4">
                            Créer mon compte
                        </button>
                        <p class="mt-3 text-center small">
                            En créant un compte, vous acceptez nos <a href="#">Conditions d'utilisation</a>.
                        </p>

                        {{ form_end(registrationForm) }}

                        <p class="mt-4 text-center">
                            Déjà un compte ? <a href="{{ path('app_login_page') }}">Connectez-vous</a> {# Point to login page route #}
                        </p>
                    </div> {# End card-body #}
                </div> {# End card #}
            </div> {# End col #}
        </div> {# End row #}
    </div> {# End container #}
{% endblock %}

{% block javascripts %}
    {{ parent() }} {# Includes base JS, NO face-api needed here anymore #}

    {# --- REMOVED: JavaScript for face capture on registration --- #}
    <script>
        // Optional: Add loading state to submit button on standard form submit
        document.addEventListener('DOMContentLoaded', () => {
            const form = document.getElementById('registration-form');
            const submitButton = document.getElementById('submitButton');
            if(form && submitButton) {
                form.addEventListener('submit', () => {
                    // Add a slight delay to show loading state before navigation
                    setTimeout(() => {
                        submitButton.disabled = true;
                        submitButton.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Création...';
                    }, 50); // Small delay
                });
            }
        });
    </script>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/registration/confirmation_email.html.twig -----
{# templates/registration/confirmation_email.html.twig #}
<h1>Confirmez votre adresse e-mail !</h1>

<p>
    Bonjour {{ user.prenom ?? 'Utilisateur' }} ! Veuillez confirmer votre adresse e-mail pour votre compte TrottiCare en cliquant sur le lien suivant : <br><br>
    <a href="{{ signedUrl|raw }}">Confirmer mon E-mail</a>.
    <br><br>
    Ce lien expirera dans {{ expiresAtMessageKey|trans(expiresAtMessageData, 'VerifyEmailBundle') }}.
</p>

<p>
    Si vous n'avez pas créé de compte, veuillez ignorer cet e-mail.
</p>

<p>
    Merci ! <br>
    L'équipe TrottiCare
</p>


----- /Users/mac/Downloads/my_project_troti-vf/templates/point_relais/edit.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Modifier le Point Relais{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <style>
        .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.5rem 1rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: all 0.2s; border: 1px solid transparent; font-size: 0.875rem; white-space: nowrap; }
        .button-primary { background-color: #3b82f6; color: white; }
        .button-primary:hover { background-color: #2563eb; }
        .button-secondary { background-color: #e5e7eb; color: #374151; }
        .button-secondary:hover { background-color: #d1d5db; }
        .form-input {
            width: 100%; padding: 0.5rem 0.75rem; border: 1px solid #d1d5db; border-radius: 0.375rem;
            font-size: 0.875rem; color: #1f2937; background-color: #fff; transition: border-color .15s ease-in-out;
        }
        .form-input:focus {
            outline: none; border-color: #3b82f6; box-shadow: 0 0 0 1px #3b82f6;
        }
    </style>
{% endblock %}

{% block body %}
<div class="min-h-screen bg-gray-100 p-4 md:p-6">
    <div class="container mx-auto max-w-3xl">
        <div class="bg-white rounded-lg shadow-md p-6">

            <h1 class="text-2xl font-bold text-gray-900 mb-6 flex items-center">
                <i class="fas fa-edit text-yellow-500 mr-2"></i> Modifier le Point Relais
            </h1>

            {# ✅ Flash messages #}
            {% for label, messages in app.flashes %}
                {% for message in messages %}
                    <div class="alert alert-{{ label }} alert-dismissible fade show mb-4" role="alert">
                        {{ message }}
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Fermer"></button>
                    </div>
                {% endfor %}
            {% endfor %}

            {{ form_start(form, { attr: { novalidate: 'novalidate', 'data-turbo': 'false' } }) }}

            {% if form.vars.errors|length > 0 %}
                <div class="alert alert-danger mb-4">
                    {{ form_errors(form) }}
                </div>
            {% endif %}

            <div class="mb-4">
                {{ form_label(form.nom, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
                {{ form_widget(form.nom, { attr: { class: 'form-input' } }) }}
                {{ form_errors(form.nom) }}
            </div>

            <div class="mb-4">
                {{ form_label(form.addresse, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
                {{ form_widget(form.addresse, { attr: { class: 'form-input', id: 'addressInput' } }) }}
                {{ form_errors(form.addresse) }}
            </div>

            <div class="mb-6">
                <h5 class="text-lg font-semibold mb-2 text-gray-800">Emplacement sur la carte :</h5>
                <div id="map" style="height: 400px; border-radius: 10px; border: 1px solid #ccc;"></div>
            </div>

            <div class="mb-6">
                {{ form_label(form.HoraireOuverture, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
                {{ form_widget(form.HoraireOuverture, { attr: { class: 'form-input' } }) }}
                {{ form_errors(form.HoraireOuverture) }}
            </div>

            <div class="flex justify-between items-center mt-6">
                <a href="{{ path('point_relais_index') }}" class="button button-secondary">
                    <i class="fas fa-arrow-left mr-1"></i> Retour
                </a>
                <button type="submit" class="button button-primary">
                    <i class="fas fa-save mr-1"></i> Enregistrer
                </button>
            </div>

            {{ form_end(form) }}

        </div>
    </div>
</div>

{# 🧠 Export coordinates to JS safely #}
{% set coords = form.vars.data.addresse is not empty ? form.vars.data.addresse|split(',') : [36.8065, 10.1815] %}
<div id="map-coords" data-lat="{{ coords[0] }}" data-lng="{{ coords[1] }}"></div>

{% endblock %}

{% block javascripts %}
{{ parent() }}
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

<script>
document.addEventListener('DOMContentLoaded', function () {
    const coordsDiv = document.getElementById('map-coords');
    const lat = parseFloat(coordsDiv.dataset.lat);
    const lng = parseFloat(coordsDiv.dataset.lng);

    const map = L.map('map').setView([lat, lng], 15);

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; OpenStreetMap contributors'
    }).addTo(map);

    let marker = L.marker([lat, lng], { draggable: true }).addTo(map);

    // Update address field on marker move
    marker.on('moveend', function (e) {
        const { lat, lng } = e.target.getLatLng();
        document.getElementById('addressInput').value = lat + ',' + lng;
    });

    // Click on map to place new marker
    map.on('click', function (e) {
        if (marker) {
            map.removeLayer(marker);
        }
        marker = L.marker([e.latlng.lat, e.latlng.lng], { draggable: true }).addTo(map);
        document.getElementById('addressInput').value = e.latlng.lat + ',' + e.latlng.lng;

        marker.on('moveend', function (e) {
            const { lat, lng } = e.target.getLatLng();
            document.getElementById('addressInput').value = lat + ',' + lng;
        });
    });
});
</script>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/point_relais/new.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Nouveau Point Relais{% endblock %}

{% block stylesheets %}
{{ parent() }}
<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<style>
    .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.5rem 1rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: all 0.2s; border: 1px solid transparent; font-size: 0.875rem; white-space: nowrap; }
    .button-primary { background-color: #10b981; color: white; }
    .button-primary:hover { background-color: #059669; }
    .button-secondary { background-color: #e5e7eb; color: #374151; }
    .button-secondary:hover { background-color: #d1d5db; }
    .form-input {
        width: 100%; padding: 0.5rem 0.75rem; border: 1px solid #d1d5db; border-radius: 0.375rem;
        font-size: 0.875rem; color: #1f2937; background-color: #fff; transition: border-color .15s ease-in-out;
    }
    .form-input:focus {
        outline: none; border-color: #3b82f6; box-shadow: 0 0 0 1px #3b82f6;
    }
</style>
{% endblock %}

{% block body %}
<div class="min-h-screen bg-gray-100 p-4 md:p-6">
  <div class="container mx-auto max-w-3xl">
    <div class="bg-white rounded-lg shadow-md p-6">

      <h1 class="text-2xl font-bold text-gray-900 mb-6 flex items-center">
        <i class="fas fa-plus-circle text-blue-600 mr-2"></i> Nouveau Point Relais
      </h1>

      {# ✅ Flash messages #}
      {% for label, messages in app.flashes %}
        {% for message in messages %}
          <div class="alert alert-{{ label }} alert-dismissible fade show mb-4" role="alert">
            {{ message }}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Fermer"></button>
          </div>
        {% endfor %}
      {% endfor %}

      {{ form_start(form, { attr: { novalidate: 'novalidate', 'data-turbo': 'false' } }) }}

      {% if form.vars.errors|length > 0 %}
        <div class="alert alert-danger mb-4">
          {{ form_errors(form) }}
        </div>
      {% endif %}

      <div class="mb-4">
        {{ form_label(form.nom, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
        {{ form_widget(form.nom, { attr: { class: 'form-input' } }) }}
        {{ form_errors(form.nom) }}
      </div>

      <div class="mb-6">
        <label for="map" class="font-medium text-gray-700 mb-2 block">Sélectionner l'emplacement :</label>
        <div id="map" style="height: 400px; border-radius: 10px; border: 1px solid #ccc;"></div>
      </div>

      <div class="mb-4 hidden">
        {{ form_widget(form.addresse, { attr: { id: 'addressInput' } }) }}
      </div>

      <div class="mb-4">
        {{ form_label(form.HoraireOuverture, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
        {{ form_widget(form.HoraireOuverture, { attr: { class: 'form-input' } }) }}
        {{ form_errors(form.HoraireOuverture) }}
      </div>

      <div class="flex justify-between items-center mt-6">
        <a href="{{ path('point_relais_index') }}" class="button button-secondary">
          <i class="fas fa-arrow-left mr-1"></i> Retour
        </a>
        <button type="submit" class="button button-primary">
          <i class="fas fa-check mr-1"></i> Enregistrer
        </button>
      </div>

      {{ form_end(form) }}

    </div>
  </div>
</div>

{% endblock %}

{% block javascripts %}
{{ parent() }}
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

<script>
document.addEventListener('DOMContentLoaded', function () {
    const map = L.map('map').setView([36.8065, 10.1815], 13); // Default: Tunis center

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; OpenStreetMap contributors'
    }).addTo(map);

    let marker;

    map.on('click', function(e) {
        const { lat, lng } = e.latlng;

        if (marker) {
            marker.setLatLng([lat, lng]);
        } else {
            marker = L.marker([lat, lng], { draggable: true }).addTo(map);
        }

        document.getElementById('addressInput').value = lat + ',' + lng;

        marker.on('moveend', function (e) {
            const { lat, lng } = e.target.getLatLng();
            document.getElementById('addressInput').value = lat + ',' + lng;
        });
    });
});
</script>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/point_relais/index.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Gestion des Points Relais{% endblock %}

{% block body %}
<div class="min-h-screen bg-gray-100 p-4 md:p-6">
    <div class="container mx-auto">

        {# Page Header & New Button #}
        <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6 gap-3">
            <h1 class="text-2xl md:text-3xl font-bold text-gray-800">
                Gestion des Points Relais
            </h1>
            <a href="{{ path('point_relais_new') }}" class="button button-success inline-flex items-center whitespace-nowrap">
                <i class="fas fa-plus mr-2"></i> Nouveau Point Relais
            </a>
        </div>

        {# Flash Messages #}
        {% for label, messages in app.flashes %}
            {% for message in messages %}
                <div class="alert alert-{{ label }} alert-dismissible fade show" role="alert">
                    {{ message }}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Fermer"></button>
                </div>
            {% endfor %}
        {% endfor %}

        {# Table #}
        <div class="bg-white shadow-md overflow-x-auto sm:rounded-lg">
            {% if point_relais is empty %}
                <div class="px-6 py-12 text-center text-sm text-gray-500">
                    Aucun point relais trouvé.
                </div>
            {% else %}
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nom</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Adresse</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Horaire d'ouverture</th>
                            <th class="px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        {% for relais in point_relais %}
                            <tr class="hover:bg-gray-50">
                                <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900">{{ relais.id }}</td>
                                <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900">{{ relais.nom }}</td>
                                <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900">{{ relais.addresse }}</td>
                                <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900">
                                    {{ relais.horaireOuverture ? relais.horaireOuverture|date('H:i \\l\\e d/m/Y') : '-' }}
                                </td>
                                <td class="px-4 py-4 whitespace-nowrap text-right text-sm font-medium space-x-1">
                                    <a href="{{ path('point_relais_show', {id: relais.id}) }}" class="button button-small button-info" title="Voir">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <a href="{{ path('point_relais_edit', {id: relais.id}) }}" class="button button-small button-warning" title="Modifier">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <button
                                        type="button"
                                        class="button button-small button-danger openDeleteModalBtn"
                                        data-action="{{ path('point_relais_delete', {id: relais.id}) }}"
                                        data-token="{{ csrf_token('delete' ~ relais.id) }}"
                                        title="Supprimer"
                                    >
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        {% endfor %}
                    </tbody>
                </table>
            {% endif %}
        </div>

    </div>
</div>

{# Delete Confirmation Modal #}
<div id="deleteModal" class="fixed inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center hidden z-50">
    <div class="bg-white p-6 rounded-lg shadow-lg w-full max-w-sm">
        <h2 class="text-lg font-semibold mb-4 text-gray-800">Confirmer la suppression</h2>
        <p class="text-sm text-gray-600 mb-6">Êtes-vous sûr de vouloir supprimer ce point relais ?</p>

        <form method="post" id="deleteForm">
            <input type="hidden" name="_token" id="deleteToken">
            <div class="flex justify-end gap-2">
                <button type="button" id="cancelDeleteBtn" class="button button-secondary">Annuler</button>
                <button type="submit" class="button button-danger">Supprimer</button>
            </div>
        </form>
    </div>
</div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Delete Modal Logic
            const deleteModal = document.getElementById('deleteModal');
            const deleteForm = document.getElementById('deleteForm');
            const deleteTokenInput = document.getElementById('deleteToken');
            const cancelDeleteBtn = document.getElementById('cancelDeleteBtn');

            document.querySelectorAll('.openDeleteModalBtn').forEach(button => {
                button.addEventListener('click', () => {
                    const action = button.getAttribute('data-action');
                    const token = button.getAttribute('data-token');

                    deleteForm.setAttribute('action', action);
                    deleteTokenInput.value = token;

                    deleteModal.classList.remove('hidden');
                });
            });

            cancelDeleteBtn.addEventListener('click', () => {
                deleteModal.classList.add('hidden');
            });
        });
    </script>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/point_relais/show.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Détails du Point Relais{% endblock %}

{% block stylesheets %}
{{ parent() }}
<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<style>
    .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.5rem 1rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: all 0.2s; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; white-space: nowrap; }
    .button-primary { background-color: #3b82f6; color: white; }
    .button-primary:hover { background-color: #2563eb; }
    .button-secondary { background-color: #e5e7eb; color: #374151; }
    .button-secondary:hover { background-color: #d1d5db; }
    .button-danger { background-color: #ef4444; color: white; }
    .button-danger:hover { background-color: #dc2626; }
</style>
{% endblock %}

{% block body %}
<div class="min-h-screen bg-gray-100 p-4 md:p-6">
    <div class="container mx-auto max-w-3xl">
        <div class="bg-white rounded-lg shadow-md p-6">
            <h1 class="text-2xl font-bold text-gray-900 mb-6 flex items-center">
                <i class="fas fa-store-alt text-blue-600 mr-2"></i> Détails du Point Relais
            </h1>

            <ul class="divide-y divide-gray-200 mb-6">
                <li class="py-4 flex justify-between"><span class="font-medium text-gray-700">ID</span><span>{{ point_relais.id }}</span></li>
                <li class="py-4 flex justify-between"><span class="font-medium text-gray-700">Nom</span><span>{{ point_relais.nom }}</span></li>
                <li class="py-4 flex justify-between"><span class="font-medium text-gray-700">Adresse</span><span>{{ point_relais.addresse }}</span></li>
                <li class="py-4 flex justify-between"><span class="font-medium text-gray-700">Horaire d'ouverture</span><span>{{ point_relais.HoraireOuverture ? point_relais.HoraireOuverture|date('H:i \\l\\e d/m/Y') : '' }}</span></li>
            </ul>

            <div class="mt-4">
                <h5 class="text-lg font-semibold mb-2 text-gray-800">Emplacement sur la carte :</h5>
                <div id="map" style="height: 400px; border-radius: 10px; border: 1px solid #ccc;"></div>
            </div>

            <div class="flex flex-col md:flex-row justify-between items-center gap-4 mt-6">
                <div class="flex gap-2">
                    <a href="{{ path('point_relais_edit', {id: point_relais.id}) }}" class="button button-primary">
                        <i class="fas fa-edit mr-1"></i> Modifier
                    </a>
                    <button type="button"
                        class="button button-danger openDeleteModalBtn"
                        data-action="{{ path('point_relais_delete', {id: point_relais.id}) }}"
                        data-token="{{ csrf_token('delete' ~ point_relais.id) }}">
                        <i class="fas fa-trash-alt mr-1"></i> Supprimer
                    </button>
                </div>
                <a href="{{ path('point_relais_index') }}" class="button button-secondary">
                    <i class="fas fa-arrow-left mr-1"></i> Retour à la liste
                </a>
            </div>
        </div>
    </div>
</div>

{# 🧠 Export lat/lng inside a hidden div #}
{% set coords = point_relais.addresse is not empty ? point_relais.addresse|split(',') : [null, null] %}
<div id="map-coords" data-lat="{{ coords[0]|default(null) }}" data-lng="{{ coords[1]|default(null) }}"></div>

{# Delete Confirmation Modal (fixed Tailwind version) #}
<div id="deleteModal" class="fixed inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center hidden z-50">
    <div class="bg-white p-6 rounded-lg shadow-lg w-full max-w-sm">
        <h2 class="text-lg font-semibold mb-4 text-gray-800">Confirmer la suppression</h2>
        <p class="text-sm text-gray-600 mb-6">Êtes-vous sûr de vouloir supprimer ce point relais ?</p>

        <form method="post" id="deleteForm">
            <input type="hidden" name="_token" id="deleteToken">
            <div class="flex justify-end gap-2">
                <button type="button" id="cancelDeleteBtn" class="button button-secondary">Annuler</button>
                <button type="submit" class="button button-danger">Supprimer</button>
            </div>
        </form>
    </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

<script>
document.addEventListener('DOMContentLoaded', function () {
    // Map logic
    const map = L.map('map').setView([36.8065, 10.1815], 5); // Default Tunisia

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; OpenStreetMap contributors'
    }).addTo(map);

    const coordsDiv = document.getElementById('map-coords');
    const lat = parseFloat(coordsDiv.dataset.lat);
    const lng = parseFloat(coordsDiv.dataset.lng);

    if (!isNaN(lat) && !isNaN(lng)) {
        const marker = L.marker([lat, lng]).addTo(map);
        map.setView([lat, lng], 15);
    }

    // Delete modal logic
    const deleteModal = document.getElementById('deleteModal');
    const deleteForm = document.getElementById('deleteForm');
    const deleteTokenInput = document.getElementById('deleteToken');
    const cancelDeleteBtn = document.getElementById('cancelDeleteBtn');

    document.querySelectorAll('.openDeleteModalBtn').forEach(button => {
        button.addEventListener('click', () => {
            const action = button.getAttribute('data-action');
            const token = button.getAttribute('data-token');

            deleteForm.setAttribute('action', action);
            deleteTokenInput.value = token;

            deleteModal.classList.remove('hidden');
        });
    });

    cancelDeleteBtn.addEventListener('click', () => {
        deleteModal.classList.add('hidden');
    });
});
</script>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/base.html.twig -----
{# templates/base.html.twig #}
<!DOCTYPE html>
<html lang="{{ app.request.locale|split('_')[0]|default('en') }}">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css">


    {# === Tailwind Play CDN === #}
    {# IMPORTANT: This script enables Tailwind classes but is not for production #}
    <script src="https://cdn.tailwindcss.com"></script>
    {# ----------------------- #}

    {# Optional: Link to a *small* custom CSS file AFTER Tailwind CDN if needed #}
    {# <link rel="stylesheet" href="{{ asset('css/custom-overrides.css') }}"> #}

    {# Optional: FontAwesome CDN Example #}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />

    <link rel="icon" href="{{ asset('favicon.ico') }}"> {# Ensure favicon is in public/ #}
    <script src="{{ asset('js/face-api.min.js') }}"></script>


    {# Add basic styles needed *before* Tailwind JS runs, e.g., to prevent FOUC #}
    <style>
        body { font-family: system-ui, sans-serif; }
        /* Hide elements meant to be shown by Tailwind initially to reduce FOUC */
        /* Example: .hidden { display: none !important; } */
        /* You might need more aggressive hiding depending on complexity */
    </style>

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}TrottiCare{% endblock %}</title>

    {# === Direct CSS Links === #}
    <link rel="stylesheet" href="{{ asset('css/main.css') }}">

    {# --- LEAFLET CSS LINK --- #}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
          integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
          crossorigin=""/>
    {# ------------------------ #}

    {# Optional: FontAwesome CDN Example #}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />

    <link rel="icon" href="{{ asset('favicon.ico') }}">
    {% block stylesheets %}{% endblock %} {# For page-specific <style> tags #}

    {# Inline styles specifically for the map container to prevent layout shifts #}
    <style>
        #map-container { height: 400px; background-color: #e5e7eb; } /* Default height and bg */
        /* Ensure Leaflet controls are visible */
        .leaflet-control-container .leaflet-control { background: white; box-shadow: 0 1px 5px rgba(0,0,0,0.4); border-radius: 4px; }
        .leaflet-control-zoom a { color: black; }
    </style>
</head>
<body style="display: flex; flex-direction: column; min-height: 100vh;">

<div id="root" style="display: flex; flex-direction: column; flex-grow: 1;">
    {# ... Toaster ... #}
    {% include '_header.html.twig' %}
    <div class="page-content" style="flex-grow: 1;">
        {% block body %}{% endblock %}
    </div>
    {% include '_footer.html.twig' %}
</div>

{# === JavaScript === #}

{# --- LEAFLET JS LINK (MUST be before your map init script) --- #}
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
        integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
        crossorigin=""></script>
{# ------------------------------------------------------------- #}

{# Optional: Your global app JS #}
{# <script src="{{ asset('js/app.js') }}"></script> #}

{% block javascripts %}{% endblock %} {# For page-specific JS #}

</body>
</html>


----- /Users/mac/Downloads/my_project_troti-vf/templates/reset_password/request.html.twig -----
{# templates/reset_password/request.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Réinitialiser Mot de Passe - TrottiCare{% endblock %}

{% block stylesheets %}
    {# ... styles ... #}
    {{ parent() }}
    <style>
        /* Minimal styles for example */
        .form-input { display: block; width: 100%; padding: 0.5rem; border: 1px solid #ccc; border-radius: 4px; margin-bottom: 0.5rem; }
        .button-primary { padding: 0.6rem 1rem; background-color: #3b82f6; color: white; border: none; border-radius: 4px; cursor: pointer; }
        .button-primary:hover { background-color: #2563eb; }
        .text-danger { color: #dc2626; font-size: 0.8rem; margin-top: 0.2rem; }
        .text-sm { font-size: 0.875rem; }
        .text-gray-600 { color: #4b5563; }
        .mt-6 { margin-top: 1.5rem; }
        .mb-6 { margin-bottom: 1.5rem; }
        .text-center { text-align: center; }
        .font-medium { font-weight: 500; }
        .text-blue-600 { color: #2563eb; }
        .hover\:underline:hover { text-decoration: underline; }
        .bi { display: inline-block; vertical-align: text-bottom; }
    </style>
{% endblock %}

{% block body %}
    <div class="container mx-auto max-w-md px-4 py-12">
        <div class="bg-white p-8 rounded-lg shadow-md border border-gray-200">
            <h1 class="text-xl lg:text-2xl font-bold text-center text-gray-900 mb-2">
                Réinitialiser votre mot de passe
            </h1>
            <p class="text-center text-sm text-gray-600 mb-6">
                Entrez votre adresse e-mail et nous déclencherons l'envoi d'un lien pour réinitialiser votre mot de passe.
            </p>

            {% include 'partials/_flash_messages.html.twig' ignore missing %}

            {# The action URL is correctly handled by form_start #}
            {{ form_start(requestForm, {'attr': {'class': 'space-y-5'}}) }}
            <div>
                {{ form_label(requestForm.email) }}
                {{ form_widget(requestForm.email, {'attr': {'class': 'form-input'}}) }}
                <div class="text-danger">{{ form_errors(requestForm.email) }}</div>
            </div>

            {# --- Google reCAPTCHA Widget --- #}
            <div class="flex justify-center">
                <div class="g-recaptcha" data-sitekey="{{ recaptcha_v2_site_key }}"></div>
                {# Errors often attached to the field with constraint #}
                <div class="text-danger">{{ form_errors(requestForm.email) }}</div> {# Display errors potentially including reCAPTCHA #}
            </div>
            {# --- End reCAPTCHA --- #}

            <div>
                <button class="button button-primary w-full" type="submit">
                    <i class="bi bi-envelope-fill me-2"></i>Envoyer le lien
                </button>
            </div>
            {{ form_end(requestForm) }}

            <p class="mt-6 text-center text-sm text-gray-600">
                {# Ensure this link points to your login page route #}
                <a href="{{ path('app_login_page') }}" class="font-medium text-blue-600 hover:underline">
                    <i class="bi bi-arrow-left me-1"></i>Retour à la connexion
                </a>
            </p>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    {# Google reCAPTCHA API Script #}
    <script src="https://www.google.com/recaptcha/api.js" async defer></script>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/reset_password/check_email.html.twig -----
{# templates/reset_password/check_email.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Vérifiez votre Email{% endblock %}

{% block body %}
    <div class="container mt-5 text-center">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card shadow-sm">
                    <div class="card-body p-5">
                        <i class="bi bi-envelope-check-fill text-success fs-1 mb-3"></i>
                        <h1 class="h3 mb-3 fw-normal">Vérifiez votre Email</h1>
                        <p class="lead mb-4">
                            Si un compte correspondant à votre adresse e-mail existe, un e-mail vient d'être envoyé contenant un lien pour réinitialiser votre mot de passe.
                        </p>
                        <p class="text-muted">
                            Ce lien expirera dans {{ tokenLifetime|date('g') }} heure(s). {# Adjust format if needed #}
                        </p>
                        <p class="text-muted mt-3">
                            Si vous ne recevez pas l'e-mail, veuillez vérifier votre dossier spam ou <a href="{{ path('app_forgot_password_request') }}">réessayer</a>.
                        </p>
                        <a href="{{ path('app_login_page') }}" class="btn btn-secondary mt-4">Retour à la connexion</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/reset_password/reset.html.twig -----
{# templates/reset_password/reset.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Réinitialiser votre mot de passe{% endblock %}

{% block body %}
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card shadow-sm">
                    <div class="card-body p-4">
                        <h1 class="h3 mb-3 fw-normal text-center">Réinitialiser votre mot de passe</h1>

                        {# Display potential errors from token validation #}
                        {% for flash_error in app.flashes('reset_password_error') %}
                            <div class="alert alert-danger" role="alert">{{ flash_error }}</div>
                        {% endfor %}

                        {{ form_start(resetForm) }}
                        {{ form_row(resetForm.plainPassword) }}
                        <button class="btn btn-primary w-100 mt-3" type="submit">
                            <i class="bi bi-key-fill me-2"></i>Réinitialiser
                        </button>
                        {{ form_end(resetForm) }}
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/reset_password/email.html.twig -----
{# templates/reset_password/email.html.twig #}
<h1>Bonjour !</h1>

<p>Pour réinitialiser votre mot de passe, veuillez visiter le lien suivant :</p>

{# resetToken.url contains the full URL #}
{% set resetUrl = url('app_reset_password', {token: resetToken.token}) %}
<p><a href="{{ resetUrl }}">{{ resetUrl }}</a></p>

{# tokenLifetime is passed from controller, contains expiration interval in seconds #}
<p>Ce lien expirera dans {{ tokenLifetime|date('g') }} heure(s).</p>

<p>Merci,<br> L'équipe TrottiCare</p>


----- /Users/mac/Downloads/my_project_troti-vf/templates/chat/chat.html.twig -----
{# templates/chat/chat.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Chatbot{% endblock %}

{% block body %}
<style>
    .chat-container {
        max-width: 600px;
        margin: 50px auto;
        border: 1px solid #ccc;
        padding: 20px;
        border-radius: 10px;
        background: #f9f9f9;
    }
    .message {
        margin-bottom: 10px;
    }
    .user {
        text-align: right;
        color: blue;
    }
    .bot {
        text-align: left;
        color: green;
    }
    .input-group {
        margin-top: 20px;
    }
</style>

<div class="chat-container">
    <h2>Chat with AI 🤖</h2>
    <div id="chat-box"></div>

    <div class="input-group">
        <input type="text" id="message-input" placeholder="Type your message..." class="form-control" autofocus>
        <button onclick="sendMessage()" class="btn btn-primary mt-2">Send</button>
    </div>
</div>

<script>
    async function sendMessage() {
        const input = document.getElementById('message-input');
        const chatBox = document.getElementById('chat-box');
        const message = input.value.trim();
        if (!message) return;

        // Display user message
        chatBox.innerHTML += `<div class="message user"><strong>You:</strong> ${message}</div>`;
        chatBox.scrollTop = chatBox.scrollHeight;

        input.value = '';
        input.disabled = true;

        try {
            const response = await fetch("{{ path('chat_message') }}", {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ message }),
            });

            const data = await response.json();

            chatBox.innerHTML += `<div class="message bot"><strong>Bot:</strong> ${data.reply}</div>`;
            chatBox.scrollTop = chatBox.scrollHeight;
        } catch (error) {
            chatBox.innerHTML += `<div class="message bot"><strong>Bot:</strong> Sorry, error occurred.</div>`;
        } finally {
            input.disabled = false;
            input.focus();
        }
    }

    document.getElementById('message-input').addEventListener('keypress', function (e) {
        if (e.key === 'Enter') {
            sendMessage();
        }
    });
</script>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/chat/index.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Hello ChatController!{% endblock %}

{% block body %}
<style>
    .example-wrapper { margin: 1em auto; max-width: 800px; width: 95%; font: 18px/1.5 sans-serif; }
    .example-wrapper code { background: #F5F5F5; padding: 2px 6px; }
</style>

<div class="example-wrapper">
    <h1>Hello {{ controller_name }}! ✅</h1>

    This friendly message is coming from:
    <ul>
        <li>Your controller at <code>C:/Users/MSI/Desktop/takwa/TrottiCare/src/Controller/ChatController.php</code></li>
        <li>Your template at <code>C:/Users/MSI/Desktop/takwa/TrottiCare/templates/chat/index.html.twig</code></li>
    </ul>
</div>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/security/login.html.twig -----
{# templates/security/login.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Connexion - TrottiCare{% endblock %}

{% block stylesheets %}
    {{ parent() }} {# Includes Tailwind from base.html.twig #}
    {# --- Page-Specific Styles --- #}
    <style>
        /* Mimic Tailwind form input styles if @tailwindcss/forms is not used globally */
        .form-input {
            appearance: none;
            display: block;
            width: 100%;
            border-radius: 0.375rem; /* rounded-md */
            border: 1px solid #d1d5db; /* border-gray-300 */
            padding: 0.5rem 0.75rem; /* px-3 py-2 */
            box-shadow: inset 0 1px 2px 0 rgb(0 0 0 / 0.05); /* shadow-sm */
            font-size: 0.875rem; /* text-sm */
            line-height: 1.25rem;
            color: #1f2937; /* gray-800 */
        }
        .form-input:focus {
            outline: 2px solid transparent;
            outline-offset: 2px;
            border-color: #4f46e5; /* focus:border-indigo-500 */
            box-shadow: 0 0 0 1px #4f46e5; /* focus:ring-indigo-500 */
        }

        /* Mimic Tailwind basic button styles */
        .button {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: 0.5rem 1rem; /* px-4 py-2 */
            border-radius: 0.375rem; /* rounded-md */
            border: 1px solid transparent;
            font-size: 0.875rem; /* text-sm */
            font-weight: 500; /* font-medium */
            white-space: nowrap;
            box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05); /* shadow-sm */
            transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
            transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            transition-duration: 150ms;
            cursor: pointer;
        }
        .button:focus {
            outline: 2px solid transparent;
            outline-offset: 2px;
            /* Example focus ring - adjust color */
            box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.5);
        }
        .button:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
        .button-primary {
            color: #ffffff; /* text-white */
            background-color: #2563eb; /* bg-blue-600 */
            border-color: #2563eb;
        }
        .button-primary:hover {
            background-color: #1d4ed8; /* hover:bg-blue-700 */
        }
        .button-secondary {
            color: #374151; /* text-gray-700 */
            background-color: #e5e7eb; /* bg-gray-200 */
            border-color: #d1d5db; /* border-gray-300 */
        }
        .button-secondary:hover {
            background-color: #d1d5db; /* hover:bg-gray-300 */
        }
        .button-info { /* For Face Login button */
            color: #ffffff;
            background-color: #0ea5e9; /* bg-sky-500 */
            border-color: #0ea5e9;
        }
        .button-info:hover {
            background-color: #0284c7; /* hover:bg-sky-600 */
        }
        .button-success { /* For Verify Face button */
            color: #ffffff;
            background-color: #16a34a; /* bg-green-600 */
            border-color: #16a34a;
        }
        .button-success:hover {
            background-color: #15803d; /* hover:bg-green-700 */
        }
        .button-sm {
            padding: 0.375rem 0.75rem; /* px-3 py-1.5 */
            font-size: 0.75rem; /* text-xs */
        }
        .button-lg {
            padding: 0.75rem 1.5rem; /* px-6 py-3 */
            font-size: 1rem; /* text-base */
        }


        /* Basic Tailwind-like alert styles */
        .alert-base {
            padding: 0.75rem 1rem; /* px-4 py-3 */
            border-radius: 0.375rem; /* rounded */
            position: relative;
            margin-bottom: 1rem; /* mb-4 */
            display: flex;
            align-items: center;
        }
        .alert-danger {
            background-color: #fee2e2; /* bg-red-100 */
            border: 1px solid #fca5a5; /* border-red-400 */
            color: #b91c1c; /* text-red-700 */
        }
        .alert-success {
            background-color: #dcfce7; /* bg-green-100 */
            border: 1px solid #86efac; /* border-green-400 */
            color: #166534; /* text-green-700 */
        }
        .alert-warning {
            background-color: #fef9c3; /* bg-yellow-100 */
            border: 1px solid #fcd34d; /* border-yellow-400 */
            color: #854d0e; /* text-yellow-700 */
        }
        .alert-info {
            background-color: #dbeafe; /* bg-blue-100 */
            border: 1px solid #93c5fd; /* border-blue-400 */
            color: #1e40af; /* text-blue-700 */
        }
        .alert-close-button {
            position: absolute;
            top: 0.5rem;
            right: 0.75rem;
            padding: 0.25rem;
            background: none;
            border: none;
            font-size: 1.25rem;
            line-height: 1;
            color: inherit; /* Inherit color from alert */
            opacity: 0.7;
            cursor: pointer;
        }
        .alert-close-button:hover {
            opacity: 1;
        }

        /* Webcam overlay style */
        #videoOverlayLogin {
            position: absolute;
            inset: 0; /* Equivalent to top/left/right/bottom: 0 */
            background-color: rgba(0, 0, 0, 0.6); /* bg-black/60 */
            z-index: 10;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 0.375rem; /* rounded-md (match video) */
        }
        /* Tailwind-like spinner */
        .spinner-tw {
            border: 4px solid rgba(255, 255, 255, 0.3); /* border-4 border-white/30 */
            border-left-color: #ffffff; /* border-l-white */
            border-radius: 50%; /* rounded-full */
            width: 2rem; /* w-8 */
            height: 2rem; /* h-8 */
            animation: spin 1s linear infinite;
        }
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        .sr-only { /* From Tailwind - for accessibility */
            position: absolute;
            width: 1px;
            height: 1px;
            padding: 0;
            margin: -1px;
            overflow: hidden;
            clip: rect(0, 0, 0, 0);
            white-space: nowrap;
            border-width: 0;
        }

        /* Ensure icons have correct margin */
        .button i { margin-right: 0.25rem; /* me-1 */ }
        .alert-base i { margin-right: 0.5rem; /* me-2 */ }

        /* Force hidden state */
        .hidden { display: none !important; }

    </style>
{% endblock %}

{% block body %}
    {# Centering container - Use Tailwind flexbox and height utilities #}
    <div class="min-h-[calc(100vh-150px)] flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8"> {# Adjust min-height based on header/footer #}
    <div class="max-w-md w-full space-y-8">
    {# Login Card - Use Tailwind classes #}
    <div class="bg-white rounded-lg shadow-lg overflow-hidden border border-gray-200">
    <div class="px-6 py-8 md:px-10">
    <h1 class="text-2xl font-bold text-center text-gray-900 mb-6">
        Connexion TrottiCare
    </h1>

    {# Flash Messages (ensure partial uses Tailwind or defined styles) #}
    {% include 'partials/_flash_messages.html.twig' ignore missing %}

    {# Display login errors (using defined alert styles) #}
    {% if error %}
        <div class="alert-base alert-danger mb-4" role="alert">
            <i class="bi bi-exclamation-triangle-fill"></i>
            <span>{{ error.messageKey|trans(error.messageData, 'security') }}</span>
            <button type="button" onclick="this.parentElement.remove()" class="alert-close-button">×</button>
        </div>
    {% endif %}
    {# Area for JS-driven status messages (will use defined alert styles) #}
    <div id="loginStatus" class="mb-4"></div>

    {# --- Step 1: Email Input (Always Visible Initially) --- #}
    <div id="email-container" class="space-y-4">
        <p class="text-center text-sm text-gray-600">Entrez votre email pour commencer.</p>
        <div>
            <label for="inputEmail" class="block text-sm font-medium text-gray-700 mb-1">Adresse Email</label>
            <input type="email" id="inputEmail" class="form-input" value="{{ last_username }}" required autofocus autocomplete="email">
        </div>
        <div>
            <button type="button" class="button button-primary w-full" id="checkEmailButton">
                <i class="bi bi-arrow-right-circle"></i> Vérifier Email
            </button>
        </div>
    </div>

    {# --- Step 2a: Password Input (Hidden Initially) --- #}
    <form id="password-form" method="post" action="{{ path('app_login_authenticate_password') }}" class="hidden space-y-4 mt-4">
        <p class="text-center text-sm text-gray-600">Entrez votre mot de passe.</p>
        <input type="hidden" id="passwordFormEmail" name="email" value="">
        <div>
            <label for="inputPassword" class="block text-sm font-medium text-gray-700 mb-1">Mot de passe</label>
            <input type="password" name="password" id="inputPassword" class="form-input" autocomplete="current-password" required>
        </div>
        {# NO CSRF #}
        <div class="flex flex-col gap-2">
            <button class="button button-primary w-full" type="submit" id="passwordLoginButton">
                <i class="bi bi-box-arrow-in-right"></i> Se Connecter avec Mot de Passe
            </button>
            <button type="button" class="button button-secondary button-sm w-full" id="backToEmailButtonPassword">
                <i class="bi bi-arrow-left"></i> Retour (Email)
            </button>
        </div>
    </form>

    {# --- Step 2b: Face Login UI (Hidden Initially) --- #}
    <div id="face-login-container" class="hidden mt-4 text-center space-y-4">
        <p class="text-sm text-gray-600">Préparez la reconnaissance faciale.</p>
        <button type="button" class="button button-info w-full text-base" id="startFaceLoginButton">
            <i class="bi bi-camera-fill"></i> Se Connecter avec le Visage
        </button>

        {# Webcam UI (Hidden until startFaceLoginButton is clicked) #}
        <div id="webcam-ui" class="hidden space-y-3">
            <p class="text-center text-sm text-gray-600">Autorisez la webcam et centrez votre visage.</p>
            <div class="relative inline-block mx-auto w-[240px] h-[180px]"> {# Centered with fixed size #}
                <video id="webcamFeedLogin" width="240" height="180" autoplay muted playsinline class="border border-gray-300 rounded-md shadow-sm bg-gray-200 block"></video>
                <div id="videoOverlayLogin" style="display: none;"> {# JS controls display #}
                    <div class="spinner-tw"><span class="sr-only">Chargement...</span></div>
                </div>
            </div>
            <canvas id="captureCanvasLogin" width="240" height="180" class="hidden"></canvas>
            <div class="flex flex-col gap-2">
                <button type="button" class="button button-success w-full" id="identifyFaceButton" disabled>
                    <i class="bi bi-person-bounding-box"></i> Vérifier mon Visage
                </button>
                <button type="button" class="button button-secondary button-sm w-full" id="cancelFaceLoginButton">
                    Annuler Connexion Faciale
                </button>
            </div>
        </div>
        <hr class="border-gray-200 my-3">
        <button type="button" class="text-sm text-blue-600 hover:underline" id="backToEmailButtonFace">
            <i class="bi bi-arrow-left"></i> Retour (Email)
        </button>
    </div>



    <hr class="my-6 border-gray-200">
    <div class="text-center text-sm text-gray-600 space-y-1"> {# Added space-y-1 #}
        <p>Pas encore de compte ? <a href="{{ path('app_register') }}" class="font-medium text-blue-600 hover:text-blue-500 hover:underline">Inscrivez-vous</a></p>
        {# --- ADD THIS LINK --- #}
        <p><a href="{{ path('app_forgot_password_request') }}" class="font-medium text-blue-600 hover:text-blue-500 hover:underline">Mot de passe oublié ?</a></p>
        {# -------------------- #}
    </div>

    </div>{# End card-body equivalent #}
    </div>{# End card equivalent #}
    </div>{# End max-w container #}
    </div>{# End centering wrapper #}
{% endblock %}

{% block javascripts %}
    {{ parent() }} {# Includes base JS, face-api etc. #}
    {# --- Login Page Specific JavaScript --- #}
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // --- DOM Elements ---
            const emailContainer = document.getElementById('email-container');
            const passwordContainer = document.getElementById('password-form');
            const faceLoginContainer = document.getElementById('face-login-container');
            const webcamUI = document.getElementById('webcam-ui');
            const loginStatusDiv = document.getElementById('loginStatus');

            const emailInput = document.getElementById('inputEmail');
            const checkEmailButton = document.getElementById('checkEmailButton');

            const passwordFormEmailInput = document.getElementById('passwordFormEmail');
            const passwordLoginButton = document.getElementById('passwordLoginButton');
            const backToEmailButtonPassword = document.getElementById('backToEmailButtonPassword');

            const startFaceLoginButton = document.getElementById('startFaceLoginButton');
            const identifyFaceButton = document.getElementById('identifyFaceButton');
            const cancelFaceLoginButton = document.getElementById('cancelFaceLoginButton');
            const backToEmailButtonFace = document.getElementById('backToEmailButtonFace');

            const videoLogin = document.getElementById('webcamFeedLogin');
            const canvasLogin = document.getElementById('captureCanvasLogin');
            const videoOverlayLogin = document.getElementById('videoOverlayLogin');

            // --- State Variables ---
            let currentUserEmail = '';
            let streamLogin = null;
            let modelsLoadedLogin = false;
            const MODEL_URL = '/models'; // Ensure this path is correct

            // --- Helper Functions ---
            function showSection(sectionId) {
                emailContainer?.classList.add('hidden');
                passwordContainer?.classList.add('hidden');
                faceLoginContainer?.classList.add('hidden');
                stopWebcamLogin(); // Stop webcam when switching

                const section = document.getElementById(sectionId + (sectionId === 'password' ? '-form' : '-container'));
                if (section) {
                    section.classList.remove('hidden');
                }
                clearStatus();
            }

            function setStatus(message, type = 'info') {
                if (!loginStatusDiv) return;
                let alertClass = 'alert-info'; // Default to info style defined above
                let iconClass = 'bi-info-circle-fill';
                if (type === 'success') {
                    alertClass = 'alert-success'; iconClass = 'bi-check-circle-fill';
                } else if (type === 'danger' || type === 'error') {
                    alertClass = 'alert-danger'; iconClass = 'bi-exclamation-triangle-fill';
                } else if (type === 'warning') {
                    alertClass = 'alert-warning'; iconClass = 'bi-exclamation-triangle-fill';
                }

                loginStatusDiv.innerHTML = `<div class="${alertClass} alert-base" role="alert">
                                          <i class="bi ${iconClass} me-2"></i>
                                          <span>${message}</span>
                                          <button type="button" onclick="this.parentElement.remove()" class="alert-close-button">×</button>
                                       </div>`;
            }
            function clearStatus() { if (loginStatusDiv) loginStatusDiv.innerHTML = ''; }

            function setLoading(button, isLoading, defaultHtml) {
                if (!button) return;
                if (isLoading) {
                    button.disabled = true;
                    // Use the Tailwind-like spinner defined in <style>
                    button.innerHTML = `
                        <span class="spinner-tw animate-spin mr-2" role="status" aria-hidden="true"></span>
                        Chargement...`;
                } else {
                    button.disabled = false;
                    button.innerHTML = defaultHtml;
                }
            }

            // --- Load FaceAPI Models ---
            async function loadModelsLogin() {
                if (modelsLoadedLogin) return true;
                setStatus('Chargement modèles IA...', 'info');
                if(videoOverlayLogin) videoOverlayLogin.style.display = 'flex';
                if(identifyFaceButton) identifyFaceButton.disabled = true;

                try {
                    if (typeof faceapi === 'undefined') throw new Error("FaceAPI library not loaded.");
                    await Promise.all([
                        faceapi.nets.ssdMobilenetv1.loadFromUri(MODEL_URL),
                        faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),
                        faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL)
                    ]);
                    modelsLoadedLogin = true;
                    clearStatus();
                    console.log("FaceAPI models loaded for login.");
                    return true;
                } catch (error) {
                    console.error("Error loading FaceAPI models:", error);
                    setStatus('Erreur chargement modèles IA.', 'danger');
                    return false;
                } finally {
                    if(videoOverlayLogin) videoOverlayLogin.style.display = 'none';
                    if(identifyFaceButton && modelsLoadedLogin && streamLogin) identifyFaceButton.disabled = false;
                }
            }

            // --- Webcam Handling ---
            async function startWebcamLogin() {
                if (streamLogin) return;
                if (!modelsLoadedLogin) {
                    const loaded = await loadModelsLogin();
                    if (!loaded) { setStatus('Impossible de démarrer la webcam: modèles IA non chargés.', 'danger'); return; }
                }

                setStatus('Démarrage webcam...', 'info');
                if(identifyFaceButton) identifyFaceButton.disabled = true;
                if(videoOverlayLogin) videoOverlayLogin.style.display = 'flex';

                try {
                    streamLogin = await navigator.mediaDevices.getUserMedia({ video: { facingMode: 'user' }, audio: false });
                    if(videoLogin) videoLogin.srcObject = streamLogin;
                    await new Promise((resolve) => { if(videoLogin) videoLogin.onloadedmetadata = resolve; else resolve(false); });
                    clearStatus();
                    if(identifyFaceButton) identifyFaceButton.disabled = false;
                    console.log("Login webcam started.");
                } catch (err) {
                    console.error("Login Webcam Error:", err);
                    setStatus("Erreur webcam. Vérifiez permissions.", 'danger');
                    if(identifyFaceButton) identifyFaceButton.disabled = true;
                } finally {
                    if(videoOverlayLogin) videoOverlayLogin.style.display = 'none';
                }
            }

            function stopWebcamLogin() {
                if (streamLogin) {
                    streamLogin.getTracks().forEach(track => track.stop());
                    streamLogin = null;
                    console.log("Login webcam stopped.");
                }
                if(videoLogin) videoLogin.srcObject = null;
                if(identifyFaceButton) identifyFaceButton.disabled = true;
                if(webcamUI) webcamUI.classList.add('hidden');
                if(startFaceLoginButton) startFaceLoginButton.classList.remove('hidden');
            }

            // --- Step 1: Check Email & Capabilities ---
            if (checkEmailButton && emailInput) {
                checkEmailButton.addEventListener('click', async () => {
                    currentUserEmail = emailInput.value.trim();
                    if (!currentUserEmail) { setStatus('Veuillez entrer votre adresse email.', 'warning'); return; }
                    clearStatus();
                    const originalButtonHtml = checkEmailButton.innerHTML;
                    setLoading(checkEmailButton, true, originalButtonHtml);

                    try {
                        const response = await fetch("{{ path('app_login_check_email_caps') }}", {
                            method: 'POST',
                            headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Accept': 'application/json'},
                            body: `email=${encodeURIComponent(currentUserEmail)}`
                        });
                        const result = await response.json();

                        if (response.ok && result.success) {
                            if (passwordFormEmailInput) passwordFormEmailInput.value = currentUserEmail;

                            // --- MODIFIED LOGIC ---
                            emailContainer?.classList.add('hidden'); // Always hide email container on success
                            passwordContainer?.classList.add('hidden'); // Default hide password
                            faceLoginContainer?.classList.add('hidden'); // Default hide face
                            stopWebcamLogin(); // Ensure webcam is stopped

                            let statusMessage = '';

                            if (result.canLoginWithPassword) {
                                passwordContainer?.classList.remove('hidden'); // Show password form
                                statusMessage = 'Email trouvé. Entrez votre mot de passe';
                            }
                            if (result.canLoginWithFace) {
                                faceLoginContainer?.classList.remove('hidden'); // Show face login options
                                if (statusMessage) {
                                    statusMessage += ' ou connectez-vous avec votre visage.';
                                } else {
                                    statusMessage = 'Email trouvé. Préparez la reconnaissance faciale.';
                                }
                            }

                            if (!result.canLoginWithPassword && !result.canLoginWithFace) {
                                // This case should be handled by the previous check in the controller, but as fallback:
                                emailContainer?.classList.remove('hidden'); // Show email container again
                                setStatus('Aucune méthode de connexion disponible.', 'warning');
                            } else {
                                setStatus(statusMessage, 'info'); // Set combined status message
                            }
                            // --- END MODIFIED LOGIC ---

                        } else {
                            setStatus(result.message || 'Erreur lors de la vérification email.', 'danger');
                        }
                    } catch (error) {
                        console.error("Email Check Error:", error);
                        setStatus('Erreur réseau lors de la vérification email.', 'danger');
                    } finally {
                        setLoading(checkEmailButton, false, originalButtonHtml);
                    }
                });
            }
            // --- Step 2a: Password Login ---
            if (passwordContainer && passwordLoginButton) {
                passwordContainer.addEventListener('submit', () => {
                    const originalButtonHtml = passwordLoginButton.innerHTML;
                    setLoading(passwordLoginButton, true, originalButtonHtml);
                });
            }

            // --- Step 2b: Face Login ---
            if (startFaceLoginButton && webcamUI) {
                startFaceLoginButton.addEventListener('click', async () => {
                    startFaceLoginButton.classList.add('hidden');
                    webcamUI.classList.remove('hidden');
                    startWebcamLogin();
                });
            }

            if (identifyFaceButton && cancelFaceLoginButton && videoLogin) {
                identifyFaceButton.addEventListener('click', async () => {
                    if (!modelsLoadedLogin || !streamLogin || videoLogin.readyState < 3) {
                        setStatus('Webcam non prête ou modèles non chargés.', 'warning'); return;
                    }
                    setStatus('Identification du visage...', 'info');
                    const originalButtonHtml = identifyFaceButton.innerHTML;
                    setLoading(identifyFaceButton, true, originalButtonHtml);
                    cancelFaceLoginButton.disabled = true;

                    try {
                        const detection = await faceapi.detectSingleFace(videoLogin)
                            .withFaceLandmarks().withFaceDescriptor();

                        if (detection) {
                            const descriptorString = Array.from(detection.descriptor).join(',');
                            setStatus("Visage détecté. Vérification...", 'info');

                            const response = await fetch("{{ path('app_login_authenticate_face') }}", {
                                method: 'POST',
                                headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Accept': 'application/json'},
                                body: `email=${encodeURIComponent(currentUserEmail)}&face_data=${encodeURIComponent(descriptorString)}`
                            });
                            const result = await response.json();

                            if (response.ok && result.success && result.redirectUrl) {
                                setStatus('Visage reconnu ! Redirection...', 'success');
                                window.location.href = result.redirectUrl;
                            } else {
                                setStatus(result.message || 'Visage non reconnu.', 'danger');
                                setLoading(identifyFaceButton, false, originalButtonHtml);
                                cancelFaceLoginButton.disabled = false;
                            }
                        } else {
                            setStatus('Aucun visage détecté. Réessayez.', 'warning');
                            setLoading(identifyFaceButton, false, originalButtonHtml);
                            cancelFaceLoginButton.disabled = false;
                        }
                    } catch (error) {
                        console.error("Face Identification Error:", error);
                        setStatus('Erreur lors de l\'identification faciale.', 'danger');
                        setLoading(identifyFaceButton, false, originalButtonHtml);
                        cancelFaceLoginButton.disabled = false;
                    } finally {
                        if(videoOverlayLogin) videoOverlayLogin.style.display = 'none';
                    }
                });
            }

            if (cancelFaceLoginButton) {
                cancelFaceLoginButton.addEventListener('click', () => {
                    stopWebcamLogin();
                });
            }

            // --- Back Buttons ---
            if (backToEmailButtonPassword) backToEmailButtonPassword.addEventListener('click', () => showSection('email'));
            if (backToEmailButtonFace) backToEmailButtonFace.addEventListener('click', () => showSection('email'));

            // --- Initial State ---
            showSection('email'); // Start at email input

            // --- Cleanup ---
            window.addEventListener('beforeunload', stopWebcamLogin);
        });
    </script>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/admin/trottinette/edit.html.twig -----
{# templates/admin/trottinette/edit.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Modifier Trottinette : {{ trottinette.modele }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# Ensure Tailwind base styles are loaded via base.html.twig #}
    <style>
        /* Reusable form input/select styles */
        .form-input, .form-select {
            appearance: none;
            display: block;
            width: 100%;
            padding: 0.5rem 0.75rem;
            font-size: 0.875rem; /* text-sm */
            line-height: 1.5;
            color: #1f2937; /* gray-800 */
            background-color: #fff;
            background-clip: padding-box;
            border: 1px solid #d1d5db; /* gray-300 */
            border-radius: 0.375rem; /* rounded-md */
            transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        }
        .form-select {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
            background-position: right 0.5rem center;
            background-repeat: no-repeat;
            background-size: 1.5em 1.5em;
            padding-right: 2.5rem;
        }
        .form-input:focus, .form-select:focus {
            outline: none;
            border-color: #3b82f6; /* blue-500 */
            box-shadow: 0 0 0 1px #3b82f6; /* ring-1 ring-blue-500 */
        }
        /* Error state */
        .form-input.is-invalid, .form-select.is-invalid {
            border-color: #ef4444; /* red-500 */
        }
        .form-input.is-invalid:focus, .form-select.is-invalid:focus {
            border-color: #ef4444;
            box-shadow: 0 0 0 1px #ef4444; /* ring-red-500 */
        }
        .invalid-feedback {
            display: none; /* Hide by default */
            width: 100%;
            margin-top: 0.25rem;
            font-size: 0.75rem; /* text-xs */
            color: #dc2626; /* red-600 */
        }
        .is-invalid ~ .invalid-feedback {
            display: block; /* Show when input has error */
        }

        /* Reusable Button Styles */
        .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.625rem 1.25rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; white-space: nowrap; }
        .button-primary { background-color: #3b82f6; color: white; border-color: #3b82f6; } .button-primary:hover { background-color: #2563eb; border-color: #1d4ed8;}
        .button-secondary { background-color: #e5e7eb; color: #374151; border-color: #d1d5db; } .button-secondary:hover { background-color: #d1d5db; border-color: #9ca3af;}

        /* Ensure FontAwesome icons render */
        .fas { display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; -webkit-font-smoothing: antialiased; font-family: "Font Awesome 6 Free"; font-weight: 900; }
        .fa-check-circle:before { content: "\f058"; }
        .fa-exclamation-triangle:before { content: "\f071"; }
        .fa-save:before { content: "\f0c7"; }
        .fa-arrow-left:before { content: "\f060"; }
        .fa-info-circle:before { content: "\f05a"; }
        .mr-2 { margin-right: 0.5rem; }

    </style>
{% endblock %}

{% block body %}
<div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
    <div class="container mx-auto max-w-3xl"> {# Centered form container #}

        {# 1. Header #}
        <h1 class="text-2xl lg:text-3xl font-bold text-gray-900 mb-6">
            Modifier la Trottinette #{{ trottinette.id }}
        </h1>

        {# 2. Flash Messages (Assuming Tailwind styled) #}
        {% include 'partials/_flash_messages.html.twig' ignore missing %}

        {# 3. General Form Error Summary (Tailwind styled) #}
        {% if not form.vars.valid and form.vars.submitted %}
            <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
                <strong class="font-bold">Des erreurs ont été trouvées :</strong>
                <ul class="mt-2 list-disc list-inside text-sm">
                    {{ form_errors(form) }} {# Render top-level form errors #}
                    {% for child in form %}
                        {% for error in child.vars.errors %}
                            <li>{{ form_label(child) }}: {{ error.message }}</li>
                        {% endfor %}
                    {% endfor %}
                </ul>
            </div>
        {% endif %}

        {# 4. Form #}
        <div class="bg-white rounded-lg shadow p-6 md:p-8">
            {{ form_start(form, {
        'attr': {
            'novalidate': 'novalidate'
            # Removed 'class': 'needs-validation' as it's Bootstrap specific
            },
            'method': 'POST',
            'action': path('admin_trottinette_edit', { id: trottinette.id })
            }) }}

            {# Render form fields using Twig loop or manually #}
            <div class="space-y-5"> {# Add vertical space between fields #}
                {% set field_mapping = {
                    'modele': 'Modèle',
                    'numeroSerie': 'Numéro de Série',
                    'etat': 'État',
                    'batterie': 'Batterie (%)',
                    'localisation': 'Localisation',
                    'autonomie': 'Autonomie (Ex: 25 km)',
                    'pointRelais': 'Point Relais Associé'
                } %}

                {% for field_name, label_text in field_mapping %}
                {% set field = attribute(form, field_name) %}
                {% if field is defined %}
                <div>
                    {# Label #}
                    {{ form_label(field, label_text, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}

                    {# Widget #}
                    {% set widget_class = 'form-input' %}
                    {% if field_name in ['etat', 'pointRelais'] %}
                    {% set widget_class = 'form-select' %}
                    {% endif %}
                    {% if form.vars.submitted and not field.vars.valid %}
                    {% set widget_class = widget_class ~ ' is-invalid' %}
                    {% endif %}

                    {{ form_widget(field, {'attr': {'class': widget_class }}) }}

                    {# Error #}
                    <div class="invalid-feedback">
                        {{ form_errors(field) }}
                    </div>

                    {# Optional: Help text #}
                    {% if field.vars.help is defined and field.vars.help %}
                    <p class="mt-1 text-xs text-gray-500">{{ field.vars.help }}</p>
                    {% endif %}
                </div>
                {% endif %}
                {% endfor %}
            </div>

            {# Form Actions/Buttons #}
            <div class="mt-8 pt-5 border-t border-gray-200 flex justify-between items-center">
                <a href="{{ path('admin_trottinette_index') }}" class="button button-secondary">
                    <i class="fas fa-arrow-left mr-2"></i>Retour à la liste
                </a>
                <button type="submit" class="button button-primary">
                    <i class="fas fa-save mr-2"></i>Enregistrer les modifications
                </button>
            </div>

            {{ form_end(form) }}
        </div>


        {# 5. Guidance Card (Tailwind styled) #}
        <div class="bg-blue-50 border border-blue-200 text-blue-800 px-4 py-3 rounded-lg relative mt-6" role="alert">
            <div class="flex items-start">
                <div class="flex-shrink-0">
                    <svg class="h-5 w-5 text-blue-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"> <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" /> </svg>
                </div>
                <div class="ml-3 flex-1">
                    <p class="text-sm font-medium mb-1">Guide de saisie</p>
                    <ul class="list-disc list-inside text-sm space-y-1">
                        <li>Modèle: min 2 caractères.</li>
                        <li>N° Série: min 4 caractères (lettres, chiffres, tirets).</li>
                        <li>Batterie: 0-100%.</li>
                        <li>État Disponible: batterie >= 10%.</li>
                        <li>Autonomie: format "Nombre unité" (Ex: 25 km, 2 heures).</li>
                    </ul>
                </div>
            </div>
        </div>

    </div> {# End Container #}
</div> {# End Page Wrapper #}
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/admin/trottinette/new.html.twig -----
{# templates/admin/trottinette/new.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Nouvelle Trottinette{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# Ensure Tailwind base styles are loaded via base.html.twig #}
    <style>
        /* Reusable form input/select styles (from previous example) */
        .form-input, .form-select {
            appearance: none; display: block; width: 100%;
            padding: 0.5rem 0.75rem; font-size: 0.875rem; line-height: 1.5;
            color: #1f2937; background-color: #fff; background-clip: padding-box;
            border: 1px solid #d1d5db; border-radius: 0.375rem;
            transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        }
        .form-select {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
            background-position: right 0.5rem center; background-repeat: no-repeat;
            background-size: 1.5em 1.5em; padding-right: 2.5rem;
        }
        .form-input:focus, .form-select:focus {
            outline: none; border-color: #3b82f6;
            box-shadow: 0 0 0 1px #3b82f6; /* ring-1 ring-blue-500 */
        }
        /* Error state styling */
        .border-error { border-color: #ef4444 !important; /* red-500 */ }
        .ring-error { box-shadow: 0 0 0 1px #ef4444 !important; /* ring-red-500 */ }
        .form-error-message {
            display: block; /* Show when errors exist */
            margin-top: 0.25rem; /* mt-1 */
            font-size: 0.75rem; /* text-xs */
            color: #dc2626; /* red-600 */
        }

        /* Reusable Button Styles (from previous example) */
        .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.625rem 1.25rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; white-space: nowrap; }
        .button-primary { background-color: #3b82f6; color: white; border-color: #3b82f6; } .button-primary:hover { background-color: #2563eb; border-color: #1d4ed8;}
        .button-secondary { background-color: #e5e7eb; color: #374151; border-color: #d1d5db; } .button-secondary:hover { background-color: #d1d5db; border-color: #9ca3af;}

        /* Ensure FontAwesome icons render */
        .fas { display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; -webkit-font-smoothing: antialiased; font-family: "Font Awesome 6 Free"; font-weight: 900; }
        .fa-save:before { content: "\f0c7"; }
        .fa-arrow-left:before { content: "\f060"; }
        .fa-info-circle:before { content: "\f05a"; }
        .mr-2 { margin-right: 0.5rem; }

    </style>
{% endblock %}

{% block body %}
<div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
    <div class="container mx-auto max-w-3xl">

        {# 1. Header #}
        <h1 class="text-2xl lg:text-3xl font-bold text-gray-900 mb-6">
            Créer une nouvelle Trottinette
        </h1>

        {# 2. Flash Messages (Assuming Tailwind styled) #}
        {% include 'partials/_flash_messages.html.twig' ignore missing %}

        {# 3. General Form Error Summary (Tailwind styled) #}
        {# Only show summary if form submitted and invalid AND there are global form errors #}
        {% if form.vars.submitted and not form.vars.valid and form.vars.errors|length > 0 %}
            <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
                <strong class="font-bold">Veuillez corriger les erreurs générales ci-dessous :</strong>
                <ul class="mt-2 list-disc list-inside text-sm">
                    {{ form_errors(form) }} {# Renders only top-level form errors #}
                </ul>
            </div>
        {% endif %}

        {# 4. Form Card #}
        <div class="bg-white rounded-lg shadow p-6 md:p-8">
            {{ form_start(form, {
        'attr': {
            'novalidate': 'novalidate'
            # No 'needs-validation' or 'was-validated' needed
            },
            'method': 'POST',
            'action': path('admin_trottinette_new')
            }) }}

            {# Render form fields #}
            <div class="space-y-5"> {# Vertical spacing between fields #}

                {% for field_name in [
                    'modele',
                    'numeroSerie',
                    'etat',
                    'batterie',
                    'localisation',
                    'autonomie',
                    'pointRelais'
                ] %}
                {% set field = attribute(form, field_name) %}
                {% if field is defined %}
                <div>
                    {# Label #}
                    {{ form_label(field, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}

                    {# Widget - Apply error classes conditionally #}
                    {% set widget_class = 'form-input' %}
                    {% if field_name in ['etat', 'pointRelais'] %}
                    {% set widget_class = 'form-select' %}
                    {% endif %}
                    {% set widget_attrs = {'class': widget_class} %}
                    {% if form.vars.submitted and not field.vars.valid %}
                    {% set widget_attrs = widget_attrs|merge({'class': widget_class ~ ' border-error focus:ring-error focus:border-error'}) %}
                    {% endif %}

                    {{ form_widget(field, {'attr': widget_attrs}) }}

                    {# Error Messages for individual field #}
                    {% if form.vars.submitted and not field.vars.valid %}
                    <p class="form-error-message">
                        {{ form_errors(field) }}
                    </p>
                    {% endif %}

                    {# Optional: Help text #}
                    {% if field.vars.help is defined and field.vars.help %}
                    <p class="mt-1 text-xs text-gray-500">{{ field.vars.help }}</p>
                    {% endif %}
                </div>
                {% endif %}
                {% endfor %}
            </div>

            {# Form Actions/Buttons #}
            <div class="mt-8 pt-5 border-t border-gray-200 flex justify-between items-center">
                <a href="{{ path('admin_trottinette_index') }}" class="button button-secondary">
                    <i class="fas fa-arrow-left mr-2"></i>Retour à la liste
                </a>
                <button type="submit" class="button button-primary">
                    <i class="fas fa-save mr-2"></i>Créer la Trottinette
                </button>
            </div>

            {{ form_end(form) }}
        </div>


        {# 5. Guidance Card (Tailwind styled) #}
        <div class="bg-blue-50 border border-blue-200 text-blue-800 px-4 py-3 rounded-lg relative mt-6" role="alert">
            <div class="flex items-start">
                <div class="flex-shrink-0">
                    <svg class="h-5 w-5 text-blue-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"> <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" /> </svg>
                </div>
                <div class="ml-3 flex-1">
                    <p class="text-sm font-medium mb-1">Guide de saisie</p>
                    <ul class="list-disc list-inside text-sm space-y-1">
                        <li>Modèle: min 2 caractères.</li>
                        <li>N° Série: min 4 caractères (lettres, chiffres, tirets).</li>
                        <li>Batterie: 0-100%.</li>
                        <li>État Disponible: batterie >= 10%.</li>
                        <li>Autonomie: format "Nombre unité" (Ex: 25 km, 2 heures).</li>
                    </ul>
                </div>
            </div>
        </div>

    </div> {# End Container #}
</div> {# End Page Wrapper #}
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/admin/trottinette/index.html.twig -----
{# templates/admin/trottinette/index.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Gestion des Trottinettes - Admin{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# Ensure Tailwind base styles are loaded via base.html.twig #}
    <style>
        /* --- COPY/ADAPT Styles from maintenance/index.html.twig --- */
        /* Status Badge Styles */
        .status-badge { padding: 0.25em 0.6em; border-radius: 9999px; font-size: 0.7rem; font-weight: 500; text-transform: uppercase; letter-spacing: 0.05em; white-space: nowrap; line-height: 1; display: inline-block;}
        .status-disponible { background-color: #dcfce7; color: #166534; } /* green */
        .status-en_location { background-color: #fef9c3; color: #854d0e; } /* yellow */
        .status-en_maintenance { background-color: #fee2e2; color: #991b1b; } /* red */

        /* Basic form input/select styles */
        .form-input, .form-select { appearance: none; display: block; width: 100%; padding: 0.5rem 0.75rem; font-size: 0.875rem; line-height: 1.5; color: #1f2937; background-color: #fff; background-clip: padding-box; border: 1px solid #d1d5db; border-radius: 0.375rem; transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out; }
        .form-select { background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e"); background-position: right 0.5rem center; background-repeat: no-repeat; background-size: 1.5em 1.5em; padding-right: 2.5rem; }
        .form-input:focus, .form-select:focus { outline: none; border-color: #3b82f6; box-shadow: 0 0 0 1px #3b82f6; }
        .filter-form .form-input, .filter-form .form-select { height: 2.25rem; }

        /* Basic Button Styles */
        .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.5rem 1rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; white-space: nowrap; }
        .button-sm { padding: 0.375rem 0.75rem; font-size: 0.75rem; }
        .button-primary { background-color: #3b82f6; color: white; border-color: #3b82f6; } .button-primary:hover { background-color: #2563eb; border-color: #1d4ed8;}
        .button-secondary { background-color: #e5e7eb; color: #374151; border-color: #d1d5db; } .button-secondary:hover { background-color: #d1d5db; border-color: #9ca3af;}
        .button-info { background-color: #0ea5e9; color: white; border-color: #0ea5e9; } .button-info:hover { background-color: #0284c7; border-color: #0369a1; }
        .button-warning { background-color: #f59e0b; color: white; border-color: #f59e0b; } .button-warning:hover { background-color: #d97706; border-color: #b45309; }
        .button-outline-danger { color: #dc2626; border-color: #ef4444; background-color: transparent;} .button-outline-danger:hover { background-color: #fee2e2; }
        .button:disabled { opacity: 0.6; cursor: not-allowed; }

        /* FontAwesome Icons */
        .fas { display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; -webkit-font-smoothing: antialiased; font-family: "Font Awesome 6 Free"; font-weight: 900; }
        .fa-motorcycle:before { content: "\f21c"; }
        .fa-plus:before { content: "\2b"; }
        .fa-filter:before { content: "\f0b0"; }
        .fa-sync-alt:before { content: "\f2f1"; }
        .fa-eye:before { content: "\f06e"; }
        .fa-edit:before { content: "\f044"; }
        .fa-trash:before { content: "\f1f8"; }
        .mr-1 { margin-right: 0.25rem; }
        .mr-1\.5 { margin-right: 0.375rem; }
        .mr-2 { margin-right: 0.5rem; }

        /* Pagination Container Styles */
        .pagination-container { display: flex; flex-wrap: wrap; justify-content: space-between; align-items: center; margin-top: 1.5rem; padding-top: 1rem; border-top: 1px solid #e5e7eb; }
        .pagination-controls { display: flex; align-items: center; gap: 0.75rem; font-size: 0.875rem; color: #4b5563; margin-top: 0.5rem; }
        .pagination-controls label { margin-bottom: 0; white-space: nowrap; margin-right: 0.25rem; }
        .limit-select { padding: 0.25rem 1.75rem 0.25rem 0.5rem; font-size: 0.875rem; line-height: 1.25; height: auto; min-width: 4.5rem; background-size: 1.2em 1.2em; background-position: right 0.3rem center; border-radius: 0.375rem; border: 1px solid #d1d5db; }
        /* --- END COPY/ADAPT --- */
    </style>
{% endblock %}

{% block body %}
    <div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
        <div class="container mx-auto max-w-7xl">

            {# 1. Header Section #}
            <div class="flex flex-col sm:flex-row justify-between items-center mb-8 gap-4">
                <h1 class="text-2xl lg:text-3xl font-bold text-gray-900">
                    <i class="fas fa-motorcycle mr-2 text-blue-600"></i>Gestion des Trottinettes
                </h1>
                <a href="{{ path('admin_trottinette_new') }}" class="button button-primary">
                    <i class="fas fa-plus mr-1.5"></i> Nouvelle trottinette
                </a>
            </div>

            {# 2. Status Cards #}
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
                <div class="bg-white rounded-lg shadow-md border border-gray-200 p-6 flex items-center gap-4">
                    <div class="flex-shrink-0 rounded-full p-3 bg-green-100 text-green-600"> <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M5 13l4 4L19 7" /></svg> </div>
                    <div>
                        <div class="text-sm text-gray-500 uppercase tracking-wider">Disponibles</div>
                        <div class="text-2xl font-bold text-gray-900">{{ countDisponible|default(0) }}</div>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow-md border border-gray-200 p-6 flex items-center gap-4">
                    <div class="flex-shrink-0 rounded-full p-3 bg-yellow-100 text-yellow-600"> <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" /></svg> </div>
                    <div>
                        <div class="text-sm text-gray-500 uppercase tracking-wider">En location</div>
                        <div class="text-2xl font-bold text-gray-900">{{ countEnLocation|default(0) }}</div>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow-md border border-gray-200 p-6 flex items-center gap-4">
                    <div class="flex-shrink-0 rounded-full p-3 bg-red-100 text-red-600"> <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4" /></svg> </div>
                    <div>
                        <div class="text-sm text-gray-500 uppercase tracking-wider">En maintenance</div>
                        <div class="text-2xl font-bold text-gray-900">{{ countEnMaintenance|default(0) }}</div>
                    </div>
                </div>
            </div>

            {# 3. Flash Messages #}
            {% include 'partials/_flash_messages.html.twig' ignore missing %}

            {# 4. Filter Form #}
            <div class="bg-white rounded-lg shadow p-4 mb-6">
                {{ form_start(filterForm, {'attr': {'class': 'grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 items-end filter-form'}}) }}
                {# Search Input (spanning more columns) #}
                <div class="sm:col-span-2 md:col-span-2 lg:col-span-2">
                    <label for="{{ filterForm.search.vars.id }}" class="sr-only">Rechercher</label>
                    {{ form_widget(filterForm.search) }} {# Attributes set in FormType #}
                    {{ form_errors(filterForm.search) }}
                </div>
                {# Status Filter #}
                <div>
                    <label for="{{ filterForm.etat.vars.id }}" class="sr-only">État</label> {# Use 'etat' from FormType #}
                    {{ form_widget(filterForm.etat) }} {# Attributes set in FormType #}
                    {{ form_errors(filterForm.etat) }}
                </div>
                {# Buttons #}
                <div class="flex gap-2">
                    <button type="submit" class="button button-primary button-sm flex-grow">
                        <i class="fas fa-filter mr-1"></i>Filtrer
                    </button>
                    <a href="{{ path('admin_trottinette_index') }}" class="button button-secondary button-sm flex-grow" title="Réinitialiser">
                        <i class="fas fa-sync-alt mr-1"></i>Réinitialiser
                    </a>
                </div>
                {{ form_end(filterForm) }}
            </div>


            {# 5. Table Section #}
            <div class="bg-white rounded-lg shadow overflow-hidden">
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                        <tr>
                            {# Adjust Headers based on Trottinette entity #}
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Modèle</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">N° Série</th>
                            {# Optional columns: <th...>Utilisateur</th> <th...>Pt Relais</th> #}
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">État</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Batterie</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Localisation</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Autonomie</th>
                            <th class="px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                        </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                        {# Iterate over the pagination object #}
                        {% for trottinette in pagination %}
                            <tr class="hover:bg-gray-50">
                                <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-500">{{ trottinette.id }}</td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900">{{ trottinette.modele }}</td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-600">{{ trottinette.numeroSerie }}</td>
                                {# Optional columns #}
                                {# <td...>{{ trottinette.utilisateur ? trottinette.utilisateur.fullName : 'N/A' }}</td> #}
                                {# <td...>{{ trottinette.pointRelais ? trottinette.pointRelais.nom : 'N/A' }}</td> #}
                                <td class="px-4 py-3 whitespace-nowrap text-sm">
                                <span class="status-badge status-{{ trottinette.etat.value|lower }}">
                                    {{ trottinette.etat.value|replace({'_': ' '})|capitalize }}
                                </span>
                                </td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-600">{{ trottinette.batterie }}%</td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-600">{{ trottinette.localisation|default('N/A') }}</td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-600">{{ trottinette.autonomie|default('N/A') }}</td>
                                <td class="px-4 py-3 whitespace-nowrap text-right text-sm font-medium space-x-1">
                                    <a href="{{ path('admin_trottinette_show', {'id': trottinette.id}) }}" class="button button-sm button-info text-white" title="Voir"> <i class="fas fa-eye"></i> </a>
                                    <a href="{{ path('admin_trottinette_edit', {'id': trottinette.id}) }}" class="button button-sm button-warning text-white" title="Modifier"> <i class="fas fa-edit"></i> </a>
                                    <form method="post" action="{{ path('admin_trottinette_delete', {'id': trottinette.id}) }}" onsubmit="return confirm('Supprimer la trottinette #{{ trottinette.id }} ?');" class="inline-block">
                                        <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ trottinette.id) }}">
                                        <button type="submit" class="button button-sm button-outline-danger" title="Supprimer"> <i class="fas fa-trash"></i> </button>
                                    </form>
                                </td>
                            </tr>
                        {% else %}
                            <tr>
                                {# Adjust colspan based on visible columns #}
                                <td colspan="8" class="text-center py-12 px-6 text-gray-500">
                                    <svg class="mx-auto h-12 w-12 text-gray-400" ...> ... </svg>
                                    <h3 class="mt-2 text-sm font-medium text-gray-900">Aucune trottinette trouvée</h3>
                                    <p class="mt-1 text-sm text-gray-500">Essayez de modifier vos filtres ou ajoutez une nouvelle trottinette.</p>
                                    {% if filterForm.vars.value.search is not empty or filterForm.vars.value.etat is not empty %}
                                        <div class="mt-6">
                                            <a href="{{ path('admin_trottinette_index') }}" class="button button-sm button-secondary"> Réinitialiser les filtres </a>
                                        </div>
                                    {% endif %}
                                </td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div> {# End Table Section #}

            {# 6. Pagination Container #}
            {% if pagination is defined and pagination.getTotalItemCount > 0 %}
                <div class="pagination-container">
                    <div> {# Links #}
                        {% if pagination.pageCount > 1 %}
                            {{ knp_pagination_render(pagination) }} {# Uses Tailwind template #}
                        {% endif %}
                    </div>
                    <div class="pagination-controls"> {# Summary & Limit #}
                        <span> {# Item count #}
                            {% set firstItem = pagination.firstItemNumber|default(0) %}
                            {% set lastItem = pagination.lastItemNumber|default(0) %}
                            {% set totalItems = pagination.getTotalItemCount|default(0) %}
                            Affichage de {{ firstItem }}-{{ lastItem }} sur {{ totalItems }}
                        </span>
                        <div class="inline-flex items-center"> {# Limit Selector #}
                            <label for="itemsPerPageSelect" class="whitespace-nowrap">par page:</label>
                            <select id="itemsPerPageSelect" class="form-select limit-select">
                                {% for limitOption in allowedLimits %}
                                    <option value="{{ limitOption }}" {{ limitOption == currentLimit ? 'selected' : '' }}>
                                        {{ limitOption }}
                                    </option>
                                {% endfor %}
                            </select>
                        </div>
                    </div>
                </div>
            {% endif %} {# End Pagination Section #}

        </div> {# End Container #}
    </div> {# End Page Wrapper #}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    {# --- JavaScript for Limit Selector --- #}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const selectElement = document.getElementById('itemsPerPageSelect');
            if (selectElement) {
                selectElement.addEventListener('change', function() {
                    const newLimit = this.value;
                    const currentUrl = new URL(window.location.href);
                    const params = currentUrl.searchParams;
                    params.set('limit', newLimit);
                    params.set('page', '1'); // Reset page on limit change
                    currentUrl.search = params.toString();
                    window.location.href = currentUrl.toString();
                });
            }
        });
    </script>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/admin/trottinette/_form.html.twig -----
{{ form_start(form) }}
    {% for field in form %}
        <div class="form-group">
            {{ form_label(field) }}
            {{ form_widget(field, {'attr': {'class': 'form-control ' ~ (field.vars.valid ? '' : 'is-invalid')}}) }}
            {% if not field.vars.valid %}
                <div class="invalid-feedback">
                    {{ form_errors(field) }}
                </div>
            {% endif %}
        </div>
    {% endfor %}
    <button class="btn btn-primary">{{ button_label|default('Save') }}</button>
{{ form_end(form) }}


----- /Users/mac/Downloads/my_project_troti-vf/templates/admin/trottinette/show.html.twig -----
{# templates/admin/trottinette/show.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Détails Trottinette : {{ trottinette.modele }} ({{ trottinette.numeroSerie }}){% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# Ensure Tailwind base styles are loaded via base.html.twig #}
    <style>
        /* Status Badge Styles (reuse/adapt from index) */
        .status-badge {
            padding: 0.25em 0.6em;
            border-radius: 9999px; /* pill */
            font-size: 0.75rem; /* text-sm */
            font-weight: 500; /* font-medium */
            text-transform: uppercase;
            letter-spacing: 0.05em;
            white-space: nowrap;
            line-height: 1;
        }
        .status-disponible { background-color: #dcfce7; color: #166534; } /* green */
        .status-en_location { background-color: #fef9c3; color: #854d0e; } /* yellow */
        .status-en_maintenance { background-color: #fee2e2; color: #991b1b; } /* red */

        /* Basic Button Styles (reuse/adapt from previous) */
        .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.5rem 1rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; white-space: nowrap; }
        .button-sm { padding: 0.375rem 0.75rem; font-size: 0.75rem; } /* Smaller button */
        .button-warning { background-color: #f59e0b; color: white; border-color: #f59e0b; } .button-warning:hover { background-color: #d97706; border-color: #b45309; }
        .button-secondary { background-color: #e5e7eb; color: #374151; border-color: #d1d5db; } .button-secondary:hover { background-color: #d1d5db; border-color: #9ca3af;}
        .button-primary { background-color: #3b82f6; color: white; border-color: #3b82f6; } .button-primary:hover { background-color: #2563eb; border-color: #1d4ed8;}
        .button-danger { background-color: #ef4444; color: white; border-color: #ef4444; } .button-danger:hover { background-color: #dc2626; border-color: #b91c1c; }

        /* Utility for vertical list items with icon */
        .detail-item {
            display: flex;
            align-items: flex-start;
            gap: 0.75rem; /* space-x-3 */
            margin-bottom: 0.75rem; /* mb-3 */
        }
        .detail-item i {
            margin-top: 0.1rem;
            width: 1em; /* Adjust as needed */
            text-align: center;
            color: #6b7280; /* gray-500 */
        }
        .detail-item strong {
            font-weight: 500; /* font-medium */
            color: #374151; /* gray-700 */
        }
        .detail-item span {
            color: #4b5563; /* gray-600 */
        }
        .w-full { width: 100%; }

        /* Ensure FontAwesome icons render */
        .fas { display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; -webkit-font-smoothing: antialiased; font-family: "Font Awesome 6 Free"; font-weight: 900; }
        .fa-arrow-left:before { content: "\f060"; }
        .fa-edit:before { content: "\f044"; }
        .fa-fingerprint:before { content: "\f577"; }
        .fa-battery-three-quarters:before { content: "\f241"; }
        .fa-map-marker-alt:before { content: "\f3c5"; }
        .fa-road:before { content: "\f018"; }
        .fa-calendar-plus:before { content: "\f271"; }
        .fa-store:before { content: "\f54e"; }
        .fa-user:before { content: "\f007"; }
        .fa-tools:before { content: "\f7d9"; }
        .fa-envelope:before { content: "\f0e0"; }
        .fa-phone:before { content: "\f095"; }
        .fa-hashtag:before { content: "\23"; } /* Use hash icon for ID */
        .fa-trash-alt:before { content: "\f2ed"; }
        .mr-2 { margin-right: 0.5rem; }
        .mb-0 { margin-bottom: 0 !important; }
        .mb-2 { margin-bottom: 0.5rem !important; }
        .mb-3 { margin-bottom: 1rem !important; }
        .mb-4 { margin-bottom: 1.5rem !important; }
        .mt-4 { margin-top: 1.5rem !important; }


    </style>
{% endblock %}

{% block body %}
    <div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
        <div class="container mx-auto max-w-6xl"> {# Wider container for 2-col layout #}

            {# 1. Header & Main Actions #}
            <div class="flex flex-col sm:flex-row justify-between items-center mb-8 gap-4">
                <h1 class="text-2xl lg:text-3xl font-bold text-gray-900">
                    Détails : {{ trottinette.modele }}
                </h1>
                <div class="flex-shrink-0 flex gap-2">
                    <a href="{{ path('admin_trottinette_edit', {'id': trottinette.id}) }}" class="button button-warning button-sm">
                        <i class="fas fa-edit mr-1.5"></i>Modifier
                    </a>
                    <a href="{{ path('admin_trottinette_index') }}" class="button button-secondary button-sm">
                        <i class="fas fa-arrow-left mr-1.5"></i>Retour à la liste
                    </a>
                </div>
            </div>

            {# Flash Messages #}
            {% include 'partials/_flash_messages.html.twig' ignore missing %}

            {# 2. Main Content Grid #}
            <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 lg:gap-8">

                {# Left Column: Core Details & Maintenance Card #}
                <div class="lg:col-span-2 space-y-6">
                    {# Core Details Card #}
                    <div class="bg-white rounded-lg shadow overflow-hidden border border-gray-200">
                        <div class="px-6 py-5 border-b border-gray-200 flex justify-between items-center">
                            <h3 class="text-lg font-medium text-gray-900">
                                Informations Générales
                            </h3>
                            <span class="status-badge status-{{ trottinette.etat.value|lower }}">
                             {{ trottinette.etat.value|replace({'_': ' '})|capitalize }}
                        </span>
                        </div>
                        <div class="p-6">
                            <dl class="grid grid-cols-1 sm:grid-cols-2 gap-x-6 gap-y-4">
                                <div class="detail-item sm:col-span-1">
                                    <i class="fas fa-fingerprint fa-fw"></i>
                                    <div>
                                        <dt class="text-xs uppercase text-gray-500 tracking-wider">N° Série</dt>
                                        <dd class="text-sm font-medium text-gray-800">{{ trottinette.numeroSerie }}</dd>
                                    </div>
                                </div>
                                <div class="detail-item sm:col-span-1">
                                    <i class="fas fa-battery-three-quarters fa-fw"></i>
                                    <div>
                                        <dt class="text-xs uppercase text-gray-500 tracking-wider">Batterie</dt>
                                        <dd class="text-sm font-medium text-gray-800">{{ trottinette.batterie }}%</dd>
                                    </div>
                                </div>
                                <div class="detail-item sm:col-span-1">
                                    <i class="fas fa-map-marker-alt fa-fw"></i>
                                    <div>
                                        <dt class="text-xs uppercase text-gray-500 tracking-wider">Localisation</dt>
                                        <dd class="text-sm font-medium text-gray-800">{{ trottinette.localisation|default('N/A') }}</dd>
                                    </div>
                                </div>
                                <div class="detail-item sm:col-span-1">
                                    <i class="fas fa-road fa-fw"></i>
                                    <div>
                                        <dt class="text-xs uppercase text-gray-500 tracking-wider">Autonomie</dt>
                                        <dd class="text-sm font-medium text-gray-800">{{ trottinette.autonomie|default('N/A') }}</dd>
                                    </div>
                                </div>
                                <div class="detail-item sm:col-span-1">
                                    <i class="fas fa-calendar-plus fa-fw"></i>
                                    <div>
                                        <dt class="text-xs uppercase text-gray-500 tracking-wider">Ajoutée le</dt>
                                        <dd class="text-sm font-medium text-gray-800">{{ trottinette.dateAjout ? trottinette.dateAjout|date('d/m/Y H:i') : 'N/A' }}</dd>
                                    </div>
                                </div>
                                {# Add other relevant fields like Modele if needed #}
                                <div class="detail-item sm:col-span-1">
                                    {# Example - replace icon #}
                                    <i class="fas fa-hashtag fa-fw"></i>
                                    <div>
                                        <dt class="text-xs uppercase text-gray-500 tracking-wider">Modèle</dt>
                                        <dd class="text-sm font-medium text-gray-800">{{ trottinette.modele }}</dd>
                                    </div>
                                </div>
                            </dl>
                        </div>
                    </div>

                    {# Maintenance Card (Conditional) #}
                    {% if trottinette.etat.value != 'EN_MAINTENANCE' %}
                        <div class="bg-white rounded-lg shadow p-6 border border-gray-200 text-center">
                            <h4 class="text-lg font-medium text-gray-900 mb-2">Maintenance</h4>
                            <p class="text-sm text-gray-500 mb-4">Cette trottinette n'est pas actuellement en maintenance.</p>
                            {# Ensure correct route name for creating maintenance #}
                            <a href="{{ path('admin_maintenance_new', {'trottinette': trottinette.id}) }}" class="button button-primary button-sm">
                                <i class="fas fa-tools mr-1.5"></i>Planifier une Maintenance
                            </a>
                        </div>
                    {% else %}
                        <div class="bg-yellow-50 border border-yellow-200 text-yellow-800 px-4 py-3 rounded-lg relative" role="alert">
                            <div class="flex items-start">
                                <div class="flex-shrink-0">
                                    <svg class="h-5 w-5 text-yellow-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"> <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 3.001-1.742 3.001H4.42c-1.53 0-2.493-1.667-1.743-3.001l5.58-9.92zM10 13a1 1 0 110-2 1 1 0 010 2zm-1-4a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1z" clip-rule="evenodd" /> </svg>
                                </div>
                                <div class="ml-3 flex-1 md:flex md:justify-between">
                                    <p class="text-sm">Cette trottinette est actuellement en maintenance.</p>
                                    {# Optionally link to the specific maintenance record if available #}
                                    {# <p class="mt-3 text-sm md:mt-0 md:ml-6"> <a href="#" class="whitespace-nowrap font-medium text-yellow-700 hover:text-yellow-600">Voir détails <span aria-hidden="true">→</span></a> </p> #}
                                </div>
                            </div>
                        </div>
                    {% endif %}
                </div>

                {# Right Column: Related Info & Actions #}
                <div class="lg:col-span-1 space-y-6">
                    {# User Card #}
                    <div class="bg-white rounded-lg shadow overflow-hidden border border-gray-200">
                        <div class="px-6 py-4 border-b border-gray-200">
                            <h3 class="text-base font-medium text-gray-900 flex items-center">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-gray-500" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="1.5"><path stroke-linecap="round" stroke-linejoin="round" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" /></svg>
                                Utilisateur Associé
                            </h3>
                        </div>
                        <div class="p-6">
                            {% if trottinette.utilisateur %}
                                <div class="flex items-center mb-3">
                                <span class="inline-flex items-center justify-center h-10 w-10 rounded-full bg-blue-100 mr-3 flex-shrink-0">
                                    <span class="font-medium text-blue-700">{{ trottinette.utilisateur.prenom|slice(0,1) }}{{ trottinette.utilisateur.nom|slice(0,1) }}</span>
                                </span>
                                    <div>
                                        <p class="text-sm font-medium text-gray-900 mb-0">{{ trottinette.utilisateur.prenom }} {{ trottinette.utilisateur.nom }}</p>
                                        <p class="text-xs text-gray-500">ID: {{ trottinette.utilisateur.id }}</p>
                                    </div>
                                </div>
                                <div class="space-y-2 text-sm">
                                    <p><i class="fas fa-envelope fa-fw mr-2 text-gray-400"></i>{{ trottinette.utilisateur.email }}</p>
                                    <p><i class="fas fa-phone fa-fw mr-2 text-gray-400"></i>{{ trottinette.utilisateur.telephone|default('Non fourni') }}</p>
                                </div>
                            {% else %}
                                <p class="text-sm text-center text-gray-500 italic my-3">Aucun utilisateur n'est actuellement associé.</p>
                            {% endif %}
                        </div>
                    </div>

                    {# Point Relais Card #}
                    <div class="bg-white rounded-lg shadow overflow-hidden border border-gray-200">
                        <div class="px-6 py-4 border-b border-gray-200">
                            <h3 class="text-base font-medium text-gray-900 flex items-center">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-gray-500" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="1.5"> <path stroke-linecap="round" stroke-linejoin="round" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.828 0l-4.243-4.243a8 8 0 1111.314 0z" /> <path stroke-linecap="round" stroke-linejoin="round" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" /> </svg>
                                Point Relais Actuel
                            </h3>
                        </div>
                        <div class="p-6">
                            {% if trottinette.pointRelais %}
                                <div class="space-y-2 text-sm">
                                    <p><strong class="text-gray-700">Nom:</strong> {{ trottinette.pointRelais.nom }}</p>
                                    <p><strong class="text-gray-700">Adresse:</strong> {{ trottinette.pointRelais.addresse }}</p>
                                    {# Optionally link to the point relais details page #}
                                    {# <a href="{{ path('point_relais_show', {id: trottinette.pointRelais.id}) }}" class="text-xs text-blue-600 hover:underline">Voir détails</a> #}
                                </div>
                            {% else %}
                                <p class="text-sm text-center text-gray-500 italic my-3">Actuellement hors d'un point relais.</p>
                            {% endif %}
                        </div>
                    </div>

                    {# Quick Actions Card (Delete) #}
                    <div class="bg-white rounded-lg shadow overflow-hidden border border-gray-200">
                        <div class="px-6 py-4 border-b border-red-200 bg-red-50">
                            <h3 class="text-base font-medium text-red-800 flex items-center">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor"> <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 3.001-1.742 3.001H4.42c-1.53 0-2.493-1.667-1.743-3.001l5.58-9.92zM10 13a1 1 0 110-2 1 1 0 010 2zm-1-4a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1z" clip-rule="evenodd" /> </svg>
                                Action Dangereuse
                            </h3>
                        </div>
                        <div class="p-6 text-center">
                            <p class="text-sm text-gray-600 mb-3">Supprimer définitivement cette trottinette ?</p>
                            <form method="post" action="{{ path('admin_trottinette_delete', {'id': trottinette.id}) }}" onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer DÉFINITIVEMENT cette trottinette? Cette action est irréversible.');">
                                <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ trottinette.id) }}">
                                <button type="submit" class="button button-danger button-sm w-full">
                                    <i class="fas fa-trash-alt mr-1.5"></i>Supprimer la Trottinette
                                </button>
                            </form>
                        </div>
                    </div>

                </div> {# End Right Column #}

            </div> {# End Main Grid #}
        </div> {# End Container #}
    </div> {# End Page Wrapper #}
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/admin/utilisateur/_delete_form.html.twig -----
{# templates/admin/utilisateur/_delete_form_tailwind.html.twig #}
{# Expects 'utilisateur' variable #}
<form method="post" action="{{ path('admin_utilisateur_delete', {'id': utilisateur.id}) }}" onsubmit="return confirm('Supprimer l\'utilisateur {{ utilisateur.prenom }} {{ utilisateur.nom }} ? Cette action est irréversible.');" class="inline-block">
    <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ utilisateur.id) }}">
    {# Use Tailwind styled button #}
    <button type="submit" class="button button-sm button-outline-danger" title="Supprimer">
        <i class="fas fa-trash"></i>
    </button>
</form>


----- /Users/mac/Downloads/my_project_troti-vf/templates/admin/utilisateur/edit.html.twig -----
{# /Users/mac/Downloads/my_project_troti-vf/templates/admin/utilisateur/edit.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Modifier Utilisateur : {{ utilisateur.prenom }} {{ utilisateur.nom }}{% endblock %}

{% block body %}
<div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
    <div class="container mx-auto max-w-3xl"> {# Centered form container #}

        {# 1. Header #}
        <h1 class="text-2xl lg:text-3xl font-bold text-gray-900 mb-6">
            Modifier l'Utilisateur #{{ utilisateur.id }} - <span class="font-normal text-lg text-gray-600">{{ utilisateur.prenom }} {{ utilisateur.nom }}</span>
        </h1>

        {# 2. Flash Messages #}
        {% include 'partials/_flash_messages.html.twig' ignore missing %}

        {# 3. Form Card - Include the Tailwind form partial #}
        <div class="bg-white rounded-lg shadow p-6 md:p-8">
            {# Pass the form, button label, and edit flag to the partial #}
            {{ include('admin/utilisateur/_form.html.twig', {
            'form': form,
            'button_label': 'Mettre à jour',
            'is_edit': true
            }) }}
        </div>


        <div class="mt-6 flex flex-col sm:flex-row justify-center items-center gap-4">
            <a href="{{ path('admin_utilisateur_show', {'id': utilisateur.id}) }}" class="text-sm text-blue-600 hover:underline">
                Voir le profil
             </a>
             <span class="hidden sm:inline text-gray-400">|</span>
             <a href="{{ path('admin_utilisateur_index') }}" class="text-sm text-blue-600 hover:underline">
                Retour à la liste des utilisateurs
             </a>
             {# Optional: Include delete form trigger here if preferred over show page #}

             <span class="hidden sm:inline text-gray-400">|</span>
             <form method="post" action="{{ path('admin_utilisateur_delete', {'id': utilisateur.id}) }}" onsubmit="return confirm('Supprimer cet utilisateur ?');" class="inline">
                <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ utilisateur.id) }}"/>
                <button type="submit" class="text-sm text-red-600 hover:underline hover:text-red-800 font-medium">Supprimer cet utilisateur</button>
                </form>

        </div>

    </div> {# End Container #}
</div> {# End Page Wrapper #}
{% endblock %}

{# Note: No separate stylesheets block needed here as the styles are in the included _form_tailwind partial or base.html.twig #}


----- /Users/mac/Downloads/my_project_troti-vf/templates/admin/utilisateur/new.html.twig -----
{# templates/admin/utilisateur/new.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Créer un Utilisateur{% endblock %}

{% block body %}
    <div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
        <div class="container mx-auto max-w-3xl"> {# Centered form container #}

            {# 1. Header #}
            <h1 class="text-2xl lg:text-3xl font-bold text-gray-900 mb-6">
                Créer un Nouvel Utilisateur
            </h1>

            {# 2. Flash Messages #}
            {% include 'partials/_flash_messages.html.twig' ignore missing %}

            {# 3. Form Card - Include the form partial here #}
            <div class="bg-white rounded-lg shadow p-6 md:p-8">
                {# Pass the form and button label to the partial #}
                {{ include('admin/utilisateur/_form.html.twig', {
                    'form': form,
                    'button_label': 'Créer Utilisateur'
                }) }}
            </div>

            {# Back button can be inside or outside the card, here it's outside #}
            <div class="mt-6 text-center">
                <a href="{{ path('admin_utilisateur_index') }}" class="text-sm text-blue-600 hover:underline">
                    Retour à la liste des utilisateurs
                </a>
            </div>

        </div> {# End Container #}
    </div> {# End Page Wrapper #}
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/admin/utilisateur/index.html.twig -----
{# templates/admin/utilisateur/index.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Gestion des Utilisateurs{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# Ensure Tailwind base styles are loaded via base.html.twig #}
    <style>
        /* Basic form input/select styles */
        .form-input, .form-select {
            appearance: none; display: block; width: 100%;
            padding: 0.5rem 0.75rem; font-size: 0.875rem; line-height: 1.5;
            color: #1f2937; background-color: #fff; background-clip: padding-box;
            border: 1px solid #d1d5db; border-radius: 0.375rem; /* rounded-md */
            transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        }
        .form-select {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
            background-position: right 0.5rem center; background-repeat: no-repeat;
            background-size: 1.5em 1.5em; padding-right: 2.5rem;
        }
        .form-input:focus, .form-select:focus {
            outline: none; border-color: #3b82f6; /* focus:border-blue-500 */
            box-shadow: 0 0 0 1px #3b82f6; /* focus:ring-1 focus:ring-blue-500 */
        }
        .filter-form .form-input, .filter-form .form-select { height: 2.25rem; /* h-9 */ }

        /* Reusable Button Styles */
        .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.5rem 1rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; white-space: nowrap; }
        .button-sm { padding: 0.375rem 0.75rem; font-size: 0.75rem; }
        .button-primary { background-color: #3b82f6; color: white; border-color: #3b82f6; } .button-primary:hover { background-color: #2563eb; border-color: #1d4ed8;}
        .button-secondary { background-color: #e5e7eb; color: #374151; border-color: #d1d5db; } .button-secondary:hover { background-color: #d1d5db; border-color: #9ca3af;}
        .button-info { background-color: #0ea5e9; color: white; border-color: #0ea5e9; } .button-info:hover { background-color: #0284c7; border-color: #0369a1; }
        .button-warning { background-color: #f59e0b; color: white; border-color: #f59e0b; } .button-warning:hover { background-color: #d97706; border-color: #b45309; }
        .button-danger { background-color: #ef4444; color: white; border-color: #ef4444; } .button-danger:hover { background-color: #dc2626; border-color: #b91c1c; }
        .button:disabled { opacity: 0.6; cursor: not-allowed; }

        /* Reusable Status Badge Styles */
        .status-badge {
            padding: 0.2em 0.6em; border-radius: 9999px; /* pill */
            font-size: 0.75rem; /* text-xs adjusted */ font-weight: 500; /* font-medium */
            text-transform: uppercase; letter-spacing: 0.05em;
            white-space: nowrap; line-height: 1.2; display: inline-block;
        }
        .badge-green { background-color: #dcfce7; color: #15803d; } /* green */
        .badge-red { background-color: #fee2e2; color: #b91c1c; } /* red */
        .badge-yellow { background-color: #fef9c3; color: #a16207; } /* yellow */
        .badge-gray { background-color: #f3f4f6; color: #4b5563; } /* gray */
        .badge-blue { background-color: #dbeafe; color: #1d4ed8; } /* blue */
        .badge-indigo { background-color: #e0e7ff; color: #4338ca; } /* indigo */
        .badge-purple { background-color: #f3e8ff; color: #6b21a8; } /* purple */

        /* FontAwesome Icons */
        .fas { display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; -webkit-font-smoothing: antialiased; font-family: "Font Awesome 6 Free"; font-weight: 900; }
        .fa-users:before { content: "\f0c0"; } .fa-plus:before { content: "\2b"; }
        .fa-eye:before { content: "\f06e"; } .fa-edit:before { content: "\f044"; }
        .fa-trash:before { content: "\f1f8"; } .fa-filter:before { content: "\f0b0"; }
        .fa-sync-alt:before { content: "\f2f1"; } .fa-sort:before { content: "\f0dc"; }
        .fa-sort-up:before { content: "\f0de"; } .fa-sort-down:before { content: "\f0dd"; }
        .mr-1 { margin-right: 0.25rem; } .mr-1\.5 { margin-right: 0.375rem; } .mr-2 { margin-right: 0.5rem; }

        /* KNP Sortable Link Styles */
        th a.sortable { color: #4b5563; text-decoration: none; display: inline-flex; align-items: center; gap: 0.25rem; white-space: nowrap; }
        th a.sortable:hover { color: #1f2937; }
        th a.sortable .fas { color: #9ca3af; font-size: 0.8em; }
        th a.sortable.asc .fa-sort-up, th a.sortable.desc .fa-sort-down { color: #3b82f6; }
        th a.sortable .fa-sort { color: #9ca3af; }

        /* Pagination Controls Styling */
        .pagination-controls nav ul { display: inline-flex; list-style: none; padding: 0; gap: 0.25rem; }
        .pagination-controls nav ul li a, .pagination-controls nav ul li span { display: block; padding: 0.5rem 0.75rem; border: 1px solid #e5e7eb; background-color: #ffffff; color: #3b82f6; text-decoration: none; border-radius: 0.25rem; font-size: 0.875rem; }
        .pagination-controls nav ul li a:hover { background-color: #eff6ff; }
        .pagination-controls nav ul li.active span { background-color: #3b82f6; color: #ffffff; border-color: #3b82f6; cursor: default; }
        .pagination-controls nav ul li.disabled span { background-color: #f3f4f6; color: #9ca3af; border-color: #e5e7eb; cursor: not-allowed; }

    </style>
{% endblock %}

{% block body %}
    <div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
        <div class="container mx-auto max-w-7xl">

            {# 1. Header Section #}
            <div class="flex flex-col sm:flex-row justify-between items-center mb-6 gap-4">
                <h1 class="text-2xl lg:text-3xl font-bold text-gray-900 flex items-center gap-2">
                    <i class="fas fa-users text-blue-600"></i>Gestion des Utilisateurs
                </h1>
                <a href="{{ path('admin_utilisateur_new') }}" class="button button-primary">
                    <i class="fas fa-plus mr-1.5"></i> Créer un Utilisateur
                </a>
            </div>

            {# 2. Flash Messages #}
            {% include 'partials/_flash_messages.html.twig' ignore missing %}

            {# 3. Filter Form Card #}
            <div class="bg-white rounded-lg shadow p-4 mb-6">
                {{ form_start(filterForm, {'attr': {'class': 'grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4 items-end filter-form'}}) }}
                <div class="sm:col-span-2 md:col-span-2">
                    <label for="{{ filterForm.search.vars.id }}" class="sr-only">Rechercher</label>
                    {{ form_widget(filterForm.search, {'attr': {'placeholder': 'Rechercher (Nom, Prénom, Email)...'}}) }}
                    {{ form_errors(filterForm.search) }}
                </div>
                <div>
                    <label for="{{ filterForm.role.vars.id }}" class="sr-only">Rôle</label>
                    {{ form_widget(filterForm.role) }}
                    {{ form_errors(filterForm.role) }}
                </div>
                <div class="flex gap-2">
                    <button type="submit" class="button button-primary button-sm flex-grow">
                        <i class="fas fa-filter mr-1"></i>Filtrer
                    </button>
                    <a href="{{ path('admin_utilisateur_index') }}" class="button button-secondary button-sm flex-grow" title="Réinitialiser">
                        <i class="fas fa-sync-alt mr-1"></i>Réinitialiser
                    </a>
                </div>
                {# Hidden fields to potentially preserve sorting during filtering #}
                {# Not strictly needed if KNP handles parameters well, but can be a safeguard #}
                <input type="hidden" name="sort" value="{{ app.request.query.get('sort', 'nom') }}">
                <input type="hidden" name="direction" value="{{ app.request.query.get('direction', 'asc') }}">
                {{ form_end(filterForm) }}
            </div>


            {# 4. Table Section Card #}
            <div class="bg-white rounded-lg shadow overflow-hidden border border-gray-200">
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                        <tr>
                            {# Use KNP Sortable links with correct keys #}
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                {{ knp_pagination_sortable(pagination, 'ID', 'id') }}
                            </th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                {{ knp_pagination_sortable(pagination, 'Nom', 'nom') }}
                            </th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                {{ knp_pagination_sortable(pagination, 'Prénom', 'prenom') }}
                            </th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                {{ knp_pagination_sortable(pagination, 'Email', 'email') }}
                            </th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Téléphone {# Not sortable in this example #}
                            </th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                {{ knp_pagination_sortable(pagination, 'Rôle', 'role') }}
                            </th>
                            <th class="px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">
                                {{ knp_pagination_sortable(pagination, 'Statut', 'actif') }}
                            </th>
                            <th class="px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">
                                {{ knp_pagination_sortable(pagination, 'Vérifié', 'verifie') }}
                            </th>
                            <th class="px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Actions
                            </th>
                        </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                        {# Loop directly over the KNP pagination object #}
                        {% for utilisateur in pagination %}
                            <tr class="hover:bg-gray-50">
                                <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-500">{{ utilisateur.id }}</td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900">{{ utilisateur.nom }}</td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-800">{{ utilisateur.prenom }}</td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-600">{{ utilisateur.email }}</td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-600">{{ utilisateur.telephone | default('N/A') }}</td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm">
                                    {# Role Badge #}
                                    {% set role_badge_class = 'badge-gray' %}
                                    {% if utilisateur.roleInterne == 'admin' %} {% set role_badge_class = 'badge-purple' %}
                                    {% elseif utilisateur.roleInterne == 'partenaire' %} {% set role_badge_class = 'badge-blue' %}
                                    {% elseif utilisateur.roleInterne == 'client' %} {% set role_badge_class = 'badge-indigo' %} {# Client color example #}
                                    {% endif %}
                                    <span class="status-badge {{ role_badge_class }}">{{ utilisateur.roleInterne | replace({'_': ' '}) | capitalize }}</span>
                                </td>
                                <td class="px-4 py-3 whitespace-nowrap text-center text-sm">
                                    {# Active Status Badge #}
                                    <span class="status-badge {{ utilisateur.isActive ? 'badge-green' : 'badge-red' }}">
                                        {{ utilisateur.isActive ? 'Actif' : 'Inactif' }}
                                    </span>
                                </td>
                                <td class="px-4 py-3 whitespace-nowrap text-center text-sm">
                                    {# Verified Status Badge #}
                                    <span class="status-badge {{ utilisateur.isVerified ? 'badge-green' : 'badge-yellow' }}">
                                        {{ utilisateur.isVerified ? 'Oui' : 'Non' }}
                                    </span>
                                </td>
                                <td class="px-4 py-3 whitespace-nowrap text-right text-sm font-medium space-x-1">
                                    <a href="{{ path('admin_utilisateur_show', {'id': utilisateur.id}) }}" class="button button-sm button-info text-white" title="Voir">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    {# Prevent self-edit button #}
                                    {% if utilisateur != app.user %}
                                        <a href="{{ path('admin_utilisateur_edit', {'id': utilisateur.id}) }}" class="button button-sm button-warning text-white" title="Modifier">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        {# Include delete form partial only for non-self users #}
                                        {% include 'admin/utilisateur/_delete_form.html.twig' with {'utilisateur': utilisateur} %}
                                    {% else %}
                                        {# Optionally show disabled buttons or nothing for self #}
                                        <span class="inline-block" title="Modification via Mon Profil">
                                             <button class="button button-sm button-warning text-white" disabled><i class="fas fa-edit"></i></button>
                                         </span>
                                        <span class="inline-block" title="Suppression impossible">
                                              <button class="button button-sm button-danger text-white" disabled><i class="fas fa-trash"></i></button>
                                         </span>
                                    {% endif %}
                                </td>
                            </tr>
                        {% else %}
                            <tr>
                                <td colspan="9" class="text-center py-12 px-6 text-gray-500"> {# Correct colspan = 9 #}
                                    <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z" />
                                    </svg>
                                    <h3 class="mt-2 text-sm font-medium text-gray-900">Aucun utilisateur trouvé</h3>
                                    {# Check if filters are active using form data #}
                                    {% set filters_active = filterForm.vars.value.search or filterForm.vars.value.role %}
                                    <p class="mt-1 text-sm text-gray-500">
                                        {% if filters_active %}
                                            Essayez de modifier vos filtres.
                                        {% else %}
                                            <a href="{{ path('admin_utilisateur_new') }}" class="text-blue-600 hover:underline">Créez un nouvel utilisateur</a> pour commencer.
                                        {% endif %}
                                    </p>
                                    {% if filters_active %}
                                        <div class="mt-6">
                                            <a href="{{ path('admin_utilisateur_index') }}" class="button button-sm button-secondary">
                                                <i class="fas fa-sync-alt mr-1"></i>Réinitialiser les filtres
                                            </a>
                                        </div>
                                    {% endif %}
                                </td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                </div> {# End Overflow Wrapper #}
            </div> {# End Table Card #}

            {# 5. Pagination Controls & Summary #}
            {# Check if pagination object exists and has items #}
            {% if pagination is defined and pagination.getTotalItemCount > 0 %}
                <div class="flex flex-col md:flex-row justify-between items-center text-sm text-gray-600 mt-6 gap-4">
                    {# Summary Text #}
                    <div>
                        {% set firstItem = (pagination.getCurrentPageNumber() - 1) * pagination.getItemNumberPerPage() + 1 %}
                        {# Use pagination.count() for items on the current page #}
                        {% set lastItem = firstItem + pagination.count() - 1 %}
                        Affichage de <strong>{{ firstItem }}</strong> à <strong>{{ lastItem }}</strong> sur <strong>{{ pagination.getTotalItemCount }}</strong> utilisateur{{ pagination.getTotalItemCount > 1 ? 's' : '' }}.
                    </div>

                    {# Pagination Links - Only show if more than one page #}
                    {% if pagination.pageCount > 1 %}
                        <div class="pagination-controls">
                            {{ knp_pagination_render(pagination) }} {# Render KNP pagination links #}
                        </div>
                    {% endif %}
                </div>
            {% endif %}


        </div> {# End Container #}
    </div> {# End Page Wrapper #}
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/admin/utilisateur/_form.html.twig -----
{# templates/admin/utilisateur/_form_tailwind.html.twig #}
{# Expects 'form' and optionally 'button_label' variables #}

{% block stylesheets %}
    {# Include styles here ONLY if this partial is used standalone OR #}
    {# if base.html.twig doesn't already have these styles defined globally #}
    <style>
        /* Reusable form input/select/checkbox/textarea styles */
        .form-input, .form-select, .form-textarea {
            appearance: none; display: block; width: 100%;
            padding: 0.5rem 0.75rem; font-size: 0.875rem; line-height: 1.5;
            color: #1f2937; background-color: #fff; background-clip: padding-box;
            border: 1px solid #d1d5db; border-radius: 0.375rem;
            transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        }
        .form-textarea { min-height: 80px; }
        .form-select {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
            background-position: right 0.5rem center; background-repeat: no-repeat;
            background-size: 1.5em 1.5em; padding-right: 2.5rem;
        }
        /* Specific style for checkbox/switch - adjust size/color as needed */
        .form-checkbox, .form-switch {
            padding: 0; height: 1rem; width: 1rem; /* Size */
            color: #3b82f6; /* blue-600 */
            border: 1px solid #9ca3af; /* gray-400 */
            border-radius: 0.25rem; /* rounded */
            vertical-align: middle;
            margin-top: 0.125em; /* Align with label text */
            flex-shrink: 0;
            cursor: pointer;
        }
        .form-switch {
            width: 2rem; height: 1.125rem; /* Slightly different size for switch */
            border-radius: 9999px; /* rounded-full */
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23fff'/%3e%3c/svg%3e");
            background-position: left center;
            background-repeat: no-repeat;
            background-size: contain;
            border-color: rgba(0,0,0,.25);
            transition: background-position .15s ease-in-out;
        }
        .form-checkbox:checked, .form-switch:checked {
            border-color: #2563eb; /* blue-600 */
            background-color: #2563eb;
        }
        .form-checkbox:checked {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='white'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e");
        }
        .form-switch:checked {
            background-position: right center;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23fff'/%3e%3c/svg%3e");
        }

        .form-input:focus, .form-select:focus, .form-textarea:focus, .form-checkbox:focus, .form-switch:focus {
            outline: none; border-color: #3b82f6;
            box-shadow: 0 0 0 1px #3b82f6; /* ring-1 ring-blue-500 */
        }
        /* Error state styling */
        .border-error { border-color: #ef4444 !important; }
        .ring-error { box-shadow: 0 0 0 1px #ef4444 !important; }
        .form-error-message {
            display: block; margin-top: 0.25rem; font-size: 0.75rem; color: #dc2626;
        }

        /* Reusable Button Styles */
        .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.625rem 1.25rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; white-space: nowrap; }
        .button-success { background-color: #10b981; color: white; border-color: #10b981; } .button-success:hover { background-color: #059669; border-color: #047857; }

        /* FontAwesome Icons */
        .fas { display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; -webkit-font-smoothing: antialiased; font-family: "Font Awesome 6 Free"; font-weight: 900; }
        .fa-save:before { content: "\f0c7"; }
        .mr-2 { margin-right: 0.5rem; }
    </style>
{% endblock %}

{# --- FORM START --- #}
{{ form_start(form, {'attr': {'novalidate': 'novalidate'}}) }}

    {# Render form fields with Tailwind classes #}
<div class="space-y-5"> {# Vertical spacing #}

    {# Loop through standard text/email/tel fields #}
    {% for field_name in ['nom', 'prenom', 'email', 'telephone'] %}
        {% set field = attribute(form, field_name) %}
        <div>
            {{ form_label(field, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
            {% set widget_attrs = {'class': 'form-input' } %}
            {% if form.vars.submitted and not field.vars.valid %}
                {% set widget_attrs = widget_attrs|merge({'class': 'form-input border-error focus:ring-error focus:border-error'}) %}
            {% endif %}
            {{ form_widget(field, {'attr': widget_attrs}) }}
            {% if form.vars.submitted and not field.vars.valid %}
                <p class="form-error-message">{{ form_errors(field) }}</p>
            {% endif %}
        </div>
    {% endfor %}

    {# Role Select #}
    <div>
        {{ form_label(form.roleInterne, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
        {% set widget_attrs = {'class': 'form-select' } %}
        {% if form.vars.submitted and not form.roleInterne.vars.valid %}
            {% set widget_attrs = widget_attrs|merge({'class': 'form-select border-error focus:ring-error focus:border-error'}) %}
        {% endif %}
        {{ form_widget(form.roleInterne, {'attr': widget_attrs}) }}
        {% if form.vars.submitted and not form.roleInterne.vars.valid %}
            <p class="form-error-message">{{ form_errors(form.roleInterne) }}</p>
        {% endif %}
    </div>

    {# Verified Checkbox #}
    <div class="relative flex items-start">
        <div class="flex items-center h-5">
            {% set widget_attrs = {'class': 'form-checkbox' } %}
            {% if form.vars.submitted and not form.isVerified.vars.valid %}
                {% set widget_attrs = widget_attrs|merge({'class': 'form-checkbox border-error focus:ring-error'}) %}
            {% endif %}
            {{ form_widget(form.isVerified, {'attr': widget_attrs}) }}
        </div>
        <div class="ml-3 text-sm">
            {{ form_label(form.isVerified, null, {'label_attr': {'class': 'font-medium text-gray-700'}}) }}
            {# <p class="text-gray-500">Help text if needed.</p> #}
        </div>
        {% if form.vars.submitted and not form.isVerified.vars.valid %}
            {# Error shown below checkbox block #}
            <p class="form-error-message absolute -bottom-4 left-0 w-full">{{ form_errors(form.isVerified) }}</p>
        {% endif %}
    </div>

    {# Active Switch #}
    <div class="flex items-center justify-between">
        {# Label on the left #}
        <span class="flex-grow flex flex-col mr-4">
                {{ form_label(form.isActive, null, {'label_attr': {'class': 'text-sm font-medium text-gray-700'}}) }}
            {% if form.isActive.vars.help is defined and form.isActive.vars.help %}
                <span class="text-xs text-gray-500">{{ form.isActive.vars.help }}</span>
            {% endif %}
             </span>
        {# Switch on the right #}
        {% set widget_attrs = {'class': 'form-switch' } %}
        {% if form.vars.submitted and not form.isActive.vars.valid %}
            {% set widget_attrs = widget_attrs|merge({'class': 'form-switch border-error focus:ring-error'}) %}
        {% endif %}
        {{ form_widget(form.isActive, {'attr': widget_attrs}) }}
    </div>
    {# Error message for Active Switch (if needed, typically below) #}
    {% if form.vars.submitted and not form.isActive.vars.valid %}
        <p class="form-error-message">{{ form_errors(form.isActive) }}</p>
    {% endif %}


    {# Password Fields #}
    {% if form.plainPassword is defined %}
        {# Removed the info alert about leaving fields blank - not applicable for 'new' #}
        {# Add specific help text if needed #}
        <div>
            {{ form_label(form.plainPassword.first, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
            {% set widget_attrs = {'class': 'form-input' } %}
            {% if form.vars.submitted and not form.plainPassword.first.vars.valid %}
                {% set widget_attrs = widget_attrs|merge({'class': 'form-input border-error focus:ring-error focus:border-error'}) %}
            {% endif %}
            {{ form_widget(form.plainPassword.first, {'attr': widget_attrs}) }}
            {% if form.vars.submitted and not form.plainPassword.first.vars.valid %}
                <p class="form-error-message">{{ form_errors(form.plainPassword.first) }}</p>
            {% endif %}
            {% if form.plainPassword.first.vars.help is defined and form.plainPassword.first.vars.help %}
                <p class="mt-1 text-xs text-gray-500">{{ form.plainPassword.first.vars.help }}</p>
            {% endif %}
        </div>
        <div>
            {{ form_label(form.plainPassword.second, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
            {% set widget_attrs = {'class': 'form-input' } %}
            {% if form.vars.submitted and not form.plainPassword.second.vars.valid %}
                {# Check overall plainPassword validity for second field error #}
                {% set widget_attrs = widget_attrs|merge({'class': 'form-input border-error focus:ring-error focus:border-error'}) %}
            {% endif %}
            {{ form_widget(form.plainPassword.second, {'attr': widget_attrs}) }}
            {% if form.vars.submitted and not form.plainPassword.second.vars.valid %}
                <p class="form-error-message">{{ form_errors(form.plainPassword.second) }}</p>
            {% endif %}
            {# Display the parent repeated field error (like 'passwords must match') #}
            {% if form.vars.submitted and form.plainPassword.vars.errors|length > 0 %}
                <p class="form-error-message">{{ form_errors(form.plainPassword) }}</p>
            {% endif %}
        </div>
    {% endif %}

</div> {# End space-y container #}

    {# Submit Button #}
<div class="mt-8 pt-5 border-t border-gray-200 text-right">
    <button type="submit" class="button button-success">
        <i class="fas fa-save mr-2"></i>{{ button_label|default('Enregistrer') }}
    </button>
</div>

{{ form_end(form) }}
{# --- FORM END --- #}


----- /Users/mac/Downloads/my_project_troti-vf/templates/admin/utilisateur/show.html.twig -----
{# templates/admin/utilisateur/show.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Utilisateur : {{ utilisateur.prenom }} {{ utilisateur.nom }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# Ensure Tailwind base styles are loaded via base.html.twig #}
    <style>
        /* Reusable Status Badge Styles (from index page) */
        .status-badge {
            padding: 0.25em 0.6em; border-radius: 9999px; /* pill */
            font-size: 0.75rem; /* text-sm */ font-weight: 500; /* font-medium */
            text-transform: uppercase; letter-spacing: 0.05em;
            white-space: nowrap; line-height: 1;
        }
        .badge-green { background-color: #dcfce7; color: #166534; } /* green */
        .badge-red { background-color: #fee2e2; color: #991b1b; } /* red */
        .badge-yellow { background-color: #fef9c3; color: #854d0e; } /* yellow */
        .badge-gray { background-color: #f3f4f6; color: #374151; } /* gray */
        .badge-blue { background-color: #dbeafe; color: #1e40af; } /* blue */
        .badge-indigo { background-color: #e0e7ff; color: #3730a3; } /* indigo */
        .badge-purple { background-color: #f3e8ff; color: #581c87; } /* purple */

        /* Reusable Button Styles (from index page) */
        .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.5rem 1rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; white-space: nowrap; }
        .button-warning { background-color: #f59e0b; color: white; border-color: #f59e0b; } .button-warning:hover { background-color: #d97706; border-color: #b45309; }
        .button-secondary { background-color: #e5e7eb; color: #374151; border-color: #d1d5db; } .button-secondary:hover { background-color: #d1d5db; border-color: #9ca3af;}

        /* FontAwesome Icons */
        .fas { display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; -webkit-font-smoothing: antialiased; font-family: "Font Awesome 6 Free"; font-weight: 900; }
        .fa-user:before { content: "\f007"; }
        .fa-edit:before { content: "\f044"; }
        .fa-arrow-left:before { content: "\f060"; }
        .mr-1\.5 { margin-right: 0.375rem; }
        .mr-2 { margin-right: 0.5rem; }

    </style>
{% endblock %}

{% block body %}
    <div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
        <div class="container mx-auto max-w-4xl"> {# Adjusted max-width #}

            {# 1. Header & Main Actions #}
            <div class="flex flex-col sm:flex-row justify-between items-center mb-8 gap-4">
                <h1 class="text-2xl lg:text-3xl font-bold text-gray-900">
                    <i class="fas fa-user mr-2 text-blue-600"></i>Utilisateur : {{ utilisateur.prenom }} {{ utilisateur.nom }}
                </h1>
                <div class="flex-shrink-0 flex gap-2">
                    <a href="{{ path('admin_utilisateur_edit', {'id': utilisateur.id}) }}" class="button button-warning text-white"> {# Ensure text color is white for warning button #}
                        <i class="fas fa-edit mr-1.5"></i>Modifier
                    </a>
                    <a href="{{ path('admin_utilisateur_index') }}" class="button button-secondary">
                        <i class="fas fa-arrow-left mr-1.5"></i>Retour à la liste
                    </a>
                </div>
            </div>

            {# Flash Messages #}
            {% include 'partials/_flash_messages.html.twig' ignore missing %}

            {# 2. Details Card #}
            <div class="bg-white rounded-lg shadow overflow-hidden border border-gray-200">
                <div class="px-6 py-4 border-b border-gray-200">
                    <h3 class="text-lg font-medium text-gray-900">Détails du Compte</h3>
                </div>
                <div class="p-6">
                    {# Use a definition list for better semantics and styling #}
                    <dl class="grid grid-cols-1 md:grid-cols-3 gap-x-6 gap-y-4">
                        <div class="md:col-span-1">
                            <dt class="text-sm font-medium text-gray-500">ID Utilisateur</dt>
                            <dd class="mt-1 text-sm text-gray-900">{{ utilisateur.id }}</dd>
                        </div>
                        <div class="md:col-span-1">
                            <dt class="text-sm font-medium text-gray-500">Nom</dt>
                            <dd class="mt-1 text-sm text-gray-900">{{ utilisateur.nom }}</dd>
                        </div>
                        <div class="md:col-span-1">
                            <dt class="text-sm font-medium text-gray-500">Prénom</dt>
                            <dd class="mt-1 text-sm text-gray-900">{{ utilisateur.prenom }}</dd>
                        </div>

                        <div class="md:col-span-2">
                            <dt class="text-sm font-medium text-gray-500">Email</dt>
                            <dd class="mt-1 text-sm text-gray-900">{{ utilisateur.email }}</dd>
                        </div>
                        <div class="md:col-span-1">
                            <dt class="text-sm font-medium text-gray-500">Téléphone</dt>
                            <dd class="mt-1 text-sm text-gray-900">{{ utilisateur.telephone | default('Non renseigné') }}</dd>
                        </div>

                        <div class="md:col-span-1">
                            <dt class="text-sm font-medium text-gray-500">Rôle Interne</dt>
                            <dd class="mt-1 text-sm">
                                {# Role Badge - Copied from index styles #}
                                {% set role_badge_class = 'badge-gray' %}
                                {% if utilisateur.roleInterne == 'admin' %}
                                    {% set role_badge_class = 'badge-purple' %}
                                {% elseif utilisateur.roleInterne == 'partenaire' %}
                                    {% set role_badge_class = 'badge-blue' %}
                                {% endif %}
                                <span class="status-badge {{ role_badge_class }}">{{ utilisateur.roleInterne | capitalize }}</span>
                            </dd>
                        </div>
                        <div class="md:col-span-1">
                            <dt class="text-sm font-medium text-gray-500">Statut Compte</dt>
                            <dd class="mt-1 text-sm">
                            <span class="status-badge {{ utilisateur.isActive ? 'badge-green' : 'badge-red' }}">
                                {{ utilisateur.isActive ? 'Actif' : 'Inactif' }}
                            </span>
                            </dd>
                        </div>
                        <div class="md:col-span-1">
                            <dt class="text-sm font-medium text-gray-500">Email Vérifié</dt>
                            <dd class="mt-1 text-sm">
                            <span class="status-badge {{ utilisateur.isVerified ? 'badge-green' : 'badge-yellow' }}">
                                {{ utilisateur.isVerified ? 'Oui' : 'Non' }}
                            </span>
                            </dd>
                        </div>
                        <div class="md:col-span-3"> {# Span full width #}
                            <dt class="text-sm font-medium text-gray-500">Rôles Symfony</dt>
                            <dd class="mt-1 text-sm text-gray-900">
                                {% if utilisateur.roles %}
                                    {% for role in utilisateur.roles %}
                                        <span class="inline-block bg-gray-200 rounded px-2 py-0.5 text-xs font-semibold text-gray-700 mr-1 mb-1">{{ role }}</span>
                                    {% endfor %}
                                {% else %}
                                    Aucun
                                {% endif %}
                            </dd>
                        </div>
                        {# Add other fields like dateCreated, related counts etc. here #}
                        {# Example:
                     <div class="md:col-span-1">
                        <dt class="text-sm font-medium text-gray-500">Inscrit le</dt>
                        <dd class="mt-1 text-sm text-gray-900">{{ utilisateur.dateCreation ? utilisateur.dateCreation|date('d/m/Y') : 'N/A' }}</dd>
                    </div>
                        #}
                    </dl>
                </div>
            </div>

            {# 3. Delete Action Card #}
            {# Consider if admin should delete themselves - logic is in controller #}
            <div class="bg-white rounded-lg shadow overflow-hidden border border-gray-200 mt-6">
                <div class="px-6 py-4 border-b border-red-200 bg-red-50">
                    <h3 class="text-base font-medium text-red-800 flex items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor"> <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 3.001-1.742 3.001H4.42c-1.53 0-2.493-1.667-1.743-3.001l5.58-9.92zM10 13a1 1 0 110-2 1 1 0 010 2zm-1-4a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1z" clip-rule="evenodd" /> </svg>
                        Action Dangereuse
                    </h3>
                </div>
                <div class="p-6">
                    <p class="text-sm text-gray-600 mb-3">Supprimer cet utilisateur ? Cette action est irréversible.</p>
                    {# Include the Tailwind delete form partial #}
                    {{ include('admin/utilisateur/_delete_form.html.twig', {'utilisateur': utilisateur}) }}
                </div>
            </div>


        </div> {# End Container #}
    </div> {# End Page Wrapper #}
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/admin/events.html.twig -----
{# templates/admin/events.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Gestion des Événements - Admin{% endblock %}

{% block body %}
    <div class="min-h-screen bg-gray-100 p-4 md:p-6">
        <div class="container mx-auto">

            {# Page Header & New Button #}
            <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6 gap-3">
                <h1 class="text-2xl md:text-3xl font-bold text-gray-800">
                    Gestion des Événements
                </h1>
                <a href="{{ path('app_admin_event_new') }}" class="button button-success inline-flex items-center whitespace-nowrap">
                    <i class="fas fa-plus mr-2"></i> Nouvel Événement
                </a>
            </div>

            {# Flash Messages #}
            {% include 'partials/_flash_messages.html.twig' ignore missing %}

            {# Controls Form - Passes ALL current parameters to retain state #}
            <form method="get" action="{{ path('app_admin_events') }}" id="event-controls-form" class="mb-8 p-4 bg-white rounded-lg shadow space-y-4">
                {# Row 1: Search and Filters #}
                <div class="flex flex-col lg:flex-row gap-4 items-start lg:items-center">
                    {# Search Input #}
                    <div class="flex-grow w-full lg:w-auto">
                        <label for="search-input" class="sr-only">Rechercher</label>
                        <div class="relative">
                            {# Use search_term passed from controller #}
                            <input type="search" id="search-input" name="search" class="search-input w-full pr-10" placeholder="Rechercher par titre, description, lieu..." value="{{ search_term|default('') }}">
                            <button type="submit" class="absolute inset-y-0 right-0 px-3 flex items-center text-gray-400 hover:text-blue-600" aria-label="Rechercher"> <i class="fas fa-search"></i> </button>
                        </div>
                    </div>
                    {# Filter Buttons #}
                    <div class="flex gap-2 filter-buttons flex-wrap items-center">
                        <span class="text-sm font-medium mr-2">Filtrer:</span>
                        {# Use current_filter passed from controller to highlight active button #}
                        <button type="submit" name="filter" value="all" class="button {{ current_filter == 'all' ? 'button-primary' : 'button-secondary' }}">Tous</button>
                        {# Date Filters #}
                        <button type="submit" name="filter" value="upcoming" class="button {{ current_filter == 'upcoming' ? 'button-primary' : 'button-secondary' }}">À venir</button>
                        <button type="submit" name="filter" value="past" class="button {{ current_filter == 'past' ? 'button-primary' : 'button-secondary' }}">Passés</button>
                        {# Status Filters - ensure values match controller logic (lowercase) #}
                        <button type="submit" name="filter" value="a_venir" class="button {{ current_filter == 'a_venir' ? 'button-primary' : 'button-secondary' }}">A Venir</button>
                        <button type="submit" name="filter" value="en_cours" class="button {{ current_filter == 'en_cours' ? 'button-primary' : 'button-secondary' }}">En Cours</button>
                        <button type="submit" name="filter" value="termine" class="button {{ current_filter == 'termine' ? 'button-primary' : 'button-secondary' }}">Terminé</button>
                        <button type="submit" name="filter" value="annule" class="button {{ current_filter == 'annule' ? 'button-primary' : 'button-secondary' }}">Annulé</button>

                        {# Optional: Location (Gouvernorat) Filter Dropdown #}
                        {# You would need to pass 'gouvernorat_cases' from the controller #}
                        {# <select name="filter" class="form-select rounded-md border-gray-300 shadow-sm ml-2" onchange="this.form.submit();"> ... </select> #}
                    </div>
                </div>
                {# Row 2: Sorting and Per Page #}
                <div class="flex flex-col sm:flex-row gap-4 items-start sm:items-center justify-start">
                    {# Per Page Dropdown #}
                    <div class="flex items-center gap-2">
                        <label for="limit-select" class="text-sm font-medium text-gray-700 whitespace-nowrap">Afficher:</label>
                        <select name="limit" id="limit-select" class="form-select rounded-md border-gray-300 shadow-sm" onchange="this.form.submit();">
                            {% set limits = [5, 10, 20, 50, 100] %}
                            {% for l in limits %}
                                {# Use limit passed from controller #}
                                <option value="{{ l }}" {{ limit == l ? 'selected' : '' }}>{{ l }} par page</option>
                            {% endfor %}
                        </select>
                    </div>
                    {# Sort Order Dropdown #}
                    <div class="flex items-center gap-2">
                        <label for="sort-select" class="text-sm font-medium text-gray-700 whitespace-nowrap">Trier par:</label>
                        <select name="sort" id="sort-select" …>
                            <option value="e.dateDebut" {{ sort == 'e.dateDebut' ? 'selected' }}>Date début</option>
                            <option value="e.titre"     {{ sort == 'e.titre'     ? 'selected' }}>Titre</option>
                            …
                        </select>

                        <select name="direction" id="direction-select" …>
                            <option value="asc"  {{ direction == 'asc'  ? 'selected' }}>Asc</option>
                            <option value="desc" {{ direction == 'desc' ? 'selected' }}>Desc</option>
                        </select>
                        {# KNP handles direction via separate URL param, usually no user control needed #}
                    </div>
                </div>
            </form>

            {# Events Table #}
            <div class="bg-white shadow-md overflow-x-auto sm:rounded-lg">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                    <tr>
                        {# Use KNP Pagination sortable links #}
                        {# Third arg is the sort KEY used by KNP (matching controller's sortMapping keys) #}
                        <th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            {{ knp_pagination_sortable(pagination,'Titre','e.titre') }}
                        </th>
                        <th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            {{ knp_pagination_sortable(pagination,'Date début','e.dateDebut') }}
                        </th>
                        {# --- CORRECTED Autonomie Header --- #}
                        <th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            {{ knp_pagination_sortable(pagination, 'Min. Autonomie (km)', 'autonomie') }} {# Use key 'autonomie' #}
                        </th>
                        {# --- CORRECTED State Header (if sorting by label) --- #}
                        <th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            {{ knp_pagination_sortable(pagination, 'Lieu (Gouvernorat)', 'lieu') }} {# Use key 'lieu' #}
                        </th>
                        <th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            {{ knp_pagination_sortable(pagination, 'Lieu (Gouvernorat)', 'state') }}
                        </th>
                        <th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            {{ knp_pagination_sortable(pagination, 'Statut', 'statut') }}
                        </th>
                        <th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Participants
                        </th>
                        <th scope="col" class="relative px-4 py-3"> <span class="sr-only">Actions</span> </th>
                    </tr>
                    </thead>

                    <tbody class="bg-white divide-y divide-gray-200">
                    {# Loop through paginated results (pagination object) #}
                    {% for event_row in pagination %} {# Changed loop variable name for clarity #}
                        {% set event = event_row[0] %} {# Extract the Event entity #}
                        {% set participantCount = event_row.participantCount %} {# Extract the count #}

                        {# Now use 'event' which holds the actual Event entity #}
                        <tr id="event-row-{{ event.id }}" class="hover:bg-gray-50">
                            <td class="px-4 py-4 whitespace-nowrap">
                                <div class="text-sm font-medium text-gray-900">{{ event.titre }}</div>
                            </td>
                            <td class="px-4 py-4 whitespace-nowrap">
                                <div class="text-sm text-gray-900">{{ event.dateDebut ? event.dateDebut|date('d/m/Y H:i') : '-' }}</div>
                            </td>
                            <td class="px-4 py-4 whitespace-nowrap">
                                <div class="text-sm text-gray-700">{{ event.state ? event.state.label : (event.state ? event.state.value : '-') }}</div>
                            </td>
                            <td class="px-4 py-4 whitespace-nowrap event-status-cell">
                                {% include 'admin/event/_status_badge.html.twig' with {'status': event.statut} %}
                            </td>
                            <td class="px-4 py-4 whitespace-nowrap text-sm text-center">
                                {# Use the pre-calculated participant count #}
                                <a href="{{ path('app_admin_event_participants', {id: event.id}) }}" class="text-indigo-600 hover:text-indigo-900">
                                    {{ participantCount }}
                                </a>
                            </td>
                            <td class="px-4 py-4 whitespace-nowrap text-right text-sm font-medium space-x-1">
                                {# Show Button #}
                                <a href="{{ path('app_admin_event_show', {id: event.id}) }}" class="button button-small button-info" title="Voir">
                                    <i class="fas fa-eye"></i><span class="sr-only"> Voir</span>
                                </a>
                                {# Edit Button #}
                                <a href="{{ path('app_admin_event_edit', {id: event.id}) }}" class="button button-small button-warning" title="Modifier">
                                    <i class="fas fa-edit"></i><span class="sr-only"> Modifier</span>
                                </a>
                                {# Cancel Button #}
                                {% if event.statut not in ['TERMINE', 'ANNULE'] %}
                                    <form action="{{ path('app_admin_event_delete', {id: event.id}) }}" method="post" class="inline-block form-delete-event" data-event-id="{{ event.id }}">
                                        <input type="hidden" name="_token" value="{{ csrf_token('delete_admin_' ~ event.id) }}">
                                        <button type="submit" class="button button-small button-danger" title="Annuler l'événement">
                                            <i class="fas fa-ban"></i><span class="sr-only"> Annuler</span>
                                        </button>
                                    </form>
                                {% endif %}
                            </td>
                        </tr>
                    {% else %}
                        <tr>
                            <td colspan="6" class="px-6 py-12 text-center text-sm text-gray-500">
                                Aucun événement trouvé {% if search_term or current_filter != 'all' %} correspondant aux critères actuels{% endif %}.
                                {% if search_term or current_filter != 'all' %}
                                    <a href="{{ path('app_admin_events') }}" class="text-blue-600 hover:underline ml-2">Voir tous</a>
                                {% endif %}
                            </td>
                        </tr>
                    {% endfor %}
                    </tbody>

                </table>
            </div>

            {# Pagination Controls - Render the KNP Paginator controls #}
            {# Pagination Controls - Render the KNP Paginator controls #}
            <div class="pagination-controls text-center mt-6">
                {# Render the actual pagination links #}
                {{ knp_pagination_render(pagination) }}

                {# Display item counts from pagination object #}
                <div class="text-sm text-gray-600 mt-2">
                    {# Check if there are any items to display #}
                    {% if pagination.getTotalItemCount > 0 %}
                        {# Calculate first and last item numbers for the current page #}
                        {% set firstItem = (pagination.getCurrentPageNumber() - 1) * pagination.getItemNumberPerPage() + 1 %}
                        {% set lastItem = firstItem + pagination.count - 1 %}

                        {# Display the calculated range and total count #}
                        Affichage de {{ firstItem }} à {{ lastItem }} sur {{ pagination.getTotalItemCount }} événement{{ pagination.getTotalItemCount > 1 ? 's' : '' }}.
                    {% else %}
                        {# Optional: Message when no items are found #}
                        {# Aucun événement à afficher. #}
                    {% endif %}
                </div>
            </div>

        </div> {# End container #}
    </div> {# End page wrapper #}
{% endblock %}


{% block javascripts %}
    {{ parent() }}
    {# Use the same AJAX JS as before for handling delete/cancel form #}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const handleAdminFormSubmit = async (form, confirmMessage) => {
                if (confirmMessage && !confirm(confirmMessage)) return;

                const submitButton = form.querySelector('button[type="submit"]');
                const originalButtonHtml = submitButton ? submitButton.innerHTML : '';

                if (submitButton) {
                    submitButton.disabled = true;
                    submitButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
                }

                try {
                    const response = await fetch(form.action, {
                        method: form.method,
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest', // Crucial for controller detection
                            'Accept': 'application/json', // Expect JSON response
                        },
                        body: new FormData(form)
                    });

                    const contentType = response.headers.get("content-type");
                    if (contentType && contentType.indexOf("application/json") !== -1) {
                        const result = await response.json();
                        if (response.ok && result.success) {
                            console.log('Action successful:', result.message);
                            // Reload the page (simplest)
                            location.reload();
                        } else {
                            console.error('Action failed:', result.error || result.message || `Status ${response.status}`);
                            alert(`Erreur: ${result.error || result.message || 'Action échouée.'}`);
                            if (submitButton) {
                                submitButton.disabled = false;
                                submitButton.innerHTML = originalButtonHtml;
                            }
                        }
                    } else {
                        console.error('Non-JSON response received:', await response.text());
                        alert('Une erreur inattendue est survenue (réponse serveur non JSON).');
                        if (submitButton) {
                            submitButton.disabled = false;
                            submitButton.innerHTML = originalButtonHtml;
                        }
                    }

                } catch (error) {
                    console.error('Fetch error:', error);
                    alert('Une erreur réseau est survenue lors de la tentative d\'annulation.');
                    if (submitButton) {
                        submitButton.disabled = false;
                        submitButton.innerHTML = originalButtonHtml;
                    }
                }
            };

            document.body.addEventListener('submit', function(e) {
                // Target the form specifically for canceling/deleting
                if (e.target && e.target.classList.contains('form-delete-event')) {
                    e.preventDefault();
                    handleAdminFormSubmit(e.target, 'Êtes-vous sûr de vouloir annuler cet événement ? Cette action ne peut pas être annulée.'); // Updated confirmation message
                }
            });
        });
    </script>
{% endblock %}


{% block stylesheets %}
    {{ parent() }}
    {# Ensure required CSS is included or defined here #}
    <style>
        /* Minimal required styles (adapt based on your actual base.css/tailwind config) */
        .search-input { padding: 0.5rem 0.75rem; border: 1px solid #d1d5db; border-radius: 0.375rem; width: 100%; box-shadow: inset 0 1px 2px 0 rgb(0 0 0 / 0.05); }
        .form-select { appearance: none; background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e"); background-position: right 0.5rem center; background-repeat: no-repeat; background-size: 1.5em 1.5em; padding-right: 2.5rem; border: 1px solid #d1d5db; border-radius: 0.375rem; padding: 0.5rem 0.75rem; line-height: 1.5; }

        /* Basic Button Styles (Example - reuse from previous) */
        .button { display: inline-block; padding: 0.5rem 1rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; }
        .button-small { padding: 0.25rem 0.5rem; font-size: 0.75rem; }
        .button-primary { background-color: #3b82f6; color: white; border-color: #3b82f6; } .button-primary:hover { background-color: #2563eb; border-color: #1d4ed8;}
        .button-secondary { background-color: #e5e7eb; color: #374151; border-color: #d1d5db; } .button-secondary:hover { background-color: #d1d5db; border-color: #9ca3af;}
        .button-success { background-color: #10b981; color: white; border-color: #10b981; } .button-success:hover { background-color: #059669; border-color: #047857; }
        .button-warning { background-color: #f59e0b; color: white; border-color: #f59e0b; } .button-warning:hover { background-color: #d97706; border-color: #b45309; }
        .button-danger { background-color: #ef4444; color: white; border-color: #ef4444; } .button-danger:hover { background-color: #dc2626; border-color: #b91c1c; }
        .button-info { background-color: #0ea5e9; color: white; border-color: #0ea5e9; } .button-info:hover { background-color: #0284c7; border-color: #0369a1; }
        .button:disabled { opacity: 0.6; cursor: not-allowed; }

        /* Status Badge Styles (reuse from previous) */
        .badge { display: inline-block; padding: 0.25em 0.6em; font-size: 75%; font-weight: 700; line-height: 1; text-align: center; white-space: nowrap; vertical-align: baseline; border-radius: 0.375rem; }
        .badge-blue { color: #1e40af; background-color: #dbeafe; } /* A_VENIR */
        .badge-green { color: #065f46; background-color: #d1fae5; } /* EN_COURS */
        .badge-gray { color: #374151; background-color: #f3f4f6; } /* TERMINE */
        .badge-red { color: #991b1b; background-color: #fee2e2; } /* ANNULE */
        .badge-default { color: #1f2937; background-color: #e5e7eb; } /* Default/Unknown */

        /* KNP Paginator Styles (Example - reuse from previous) */
        .pagination { display: flex; justify-content: center; padding-left: 0; list-style: none; }
        .page-item { margin: 0 0.125rem; }
        .page-item.disabled .page-link, .page-item.disabled span { color: #6c757d; pointer-events: none; background-color: #fff; border-color: #dee2e6; cursor: not-allowed;}
        .page-item.active .page-link, .page-item.active span { z-index: 3; color: #fff; background-color: #3b82f6; border-color: #3b82f6; }
        .page-link, .page-item span { /* KNP uses spans for disabled/current */
            position: relative; display: block; padding: 0.5rem 0.75rem; line-height: 1.25; color: #3b82f6; background-color: #fff; border: 1px solid #dee2e6; border-radius: 0.25rem; transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out; }
        .page-link:hover { z-index: 2; color: #2563eb; text-decoration: none; background-color: #e9ecef; border-color: #dee2e6; }

        /* KNP Sortable Link Styles (reuse from previous) */
        th a.sortable { color: #4b5563; text-decoration: none; display: inline-block; }
        th a.sortable:hover { color: #1f2937; }
        th a.sortable .fas { margin-left: 0.3em; color: #9ca3af; font-size: 0.8em; } /* Default sort arrow color & size */
        th a.sortable.asc .fa-sort-up, th a.sortable.desc .fa-sort-down { color: #3b82f6; } /* Active sort arrow color */
        th a.sortable .fa-sort { color: #9ca3af; } /* Default unsorted icon */

        /* Spinner (reuse from previous) */
        .fa-spin { animation: fa-spin 1s infinite linear; }
        @keyframes fa-spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }

        /* Ensure FontAwesome icons render if used */
        .fas { display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; -webkit-font-smoothing: antialiased; font-family: "Font Awesome 6 Free"; font-weight: 900; }
        .fa-plus:before { content: "\2b"; }
        .fa-search:before { content: "\f002"; }
        .fa-edit:before { content: "\f044"; }
        .fa-ban:before { content: "\f05e"; }
        .fa-eye:before { content: "\f06e"; }
        .fa-spinner:before { content: "\f110"; }
        .fa-sort:before { content: "\f0dc"; }
        .fa-sort-up:before { content: "\f0de"; }
        .fa-sort-down:before { content: "\f0dd"; }

    </style>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/admin/event_show.html.twig -----
{# templates/admin/events.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Gestion des Événements - Admin{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# Ensure Tailwind base styles are loaded via base.html.twig #}
    {# FontAwesome for icons (ensure it's loaded in base.html.twig or add CDN link) #}
    <style>
        /* --- Reusable Styles (adapt from other admin pages) --- */

        /* Status Badge Styles */
        .status-badge { padding: 0.25em 0.6em; border-radius: 9999px; font-size: 0.7rem; font-weight: 500; text-transform: uppercase; letter-spacing: 0.05em; white-space: nowrap; line-height: 1; display: inline-block;}
        .status-a_venir { background-color: #dbeafe; color: #1e40af; } /* blue-100 / blue-800 */
        .status-en_cours { background-color: #dcfce7; color: #166534; } /* green-100 / green-800 */
        .status-termine { background-color: #f3f4f6; color: #374151; } /* gray-100 / gray-700 */
        .status-annule { background-color: #fee2e2; color: #991b1b; } /* red-100 / red-800 */
        .status-unknown { background-color: #e5e7eb; color: #4b5563; } /* gray-200 / gray-600 */

        /* Form Input/Select Styles */
        .form-input, .form-select {
            appearance: none; display: block; width: 100%;
            padding: 0.5rem 0.75rem; font-size: 0.875rem; line-height: 1.5;
            color: #1f2937; background-color: #fff; background-clip: padding-box;
            border: 1px solid #d1d5db; border-radius: 0.375rem; /* rounded-md */
            transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        }
        .form-select {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
            background-position: right 0.5rem center; background-repeat: no-repeat;
            background-size: 1.5em 1.5em; padding-right: 2.5rem;
        }
        .form-input:focus, .form-select:focus {
            outline: none; border-color: #3b82f6; /* focus:border-blue-500 */
            box-shadow: 0 0 0 1px #3b82f6; /* focus:ring-1 focus:ring-blue-500 */
        }
        .filter-form .form-input, .filter-form .form-select {
            height: 2.25rem; /* h-9 */ font-size: 0.875rem; /* text-sm */
            padding-top: 0.375rem; padding-bottom: 0.375rem;
        }

        /* Button Styles */
        .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.5rem 1rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; white-space: nowrap; }
        .button-sm { padding: 0.375rem 0.75rem; font-size: 0.75rem; }
        .button-primary { background-color: #3b82f6; color: white; border-color: #3b82f6; } .button-primary:hover { background-color: #2563eb; border-color: #1d4ed8;}
        .button-secondary { background-color: #e5e7eb; color: #374151; border-color: #d1d5db; } .button-secondary:hover { background-color: #d1d5db; border-color: #9ca3af;}
        .button-success { background-color: #10b981; color: white; border-color: #10b981; } .button-success:hover { background-color: #059669; border-color: #047857; }
        .button-info { background-color: #0ea5e9; color: white; border-color: #0ea5e9; } .button-info:hover { background-color: #0284c7; border-color: #0369a1; }
        .button-warning { background-color: #f59e0b; color: white; border-color: #f59e0b; } .button-warning:hover { background-color: #d97706; border-color: #b45309; }
        .button-danger { background-color: #ef4444; color: white; border-color: #ef4444; } .button-danger:hover { background-color: #dc2626; border-color: #b91c1c; }
        .button:disabled { opacity: 0.6; cursor: not-allowed; }

        /* FontAwesome Icons */
        .fas { display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; -webkit-font-smoothing: antialiased; font-family: "Font Awesome 6 Free"; font-weight: 900; }
        .fa-calendar-alt:before { content: "\f073"; } .fa-plus:before { content: "\2b"; }
        .fa-filter:before { content: "\f0b0"; } .fa-sync-alt:before { content: "\f2f1"; }
        .fa-eye:before { content: "\f06e"; } .fa-edit:before { content: "\f044"; }
        .fa-ban:before { content: "\f05e"; } .fa-spinner:before { content: "\f110"; }
        .fa-sort:before { content: "\f0dc"; } .fa-sort-up:before { content: "\f0de"; }
        .fa-sort-down:before { content: "\f0dd"; } .fa-spin { animation: fa-spin 1s infinite linear; }
        @keyframes fa-spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }
        .mr-1 { margin-right: 0.25rem; } .mr-1\.5 { margin-right: 0.375rem; } .mr-2 { margin-right: 0.5rem; }

        /* KNP Sortable Link Styles */
        th a.sortable { color: #4b5563; text-decoration: none; display: inline-flex; align-items: center; gap: 0.25rem; white-space: nowrap; }
        th a.sortable:hover { color: #1f2937; }
        th a.sortable .fas { color: #9ca3af; font-size: 0.8em; }
        th a.sortable.asc .fa-sort-up, th a.sortable.desc .fa-sort-down { color: #3b82f6; }
        th a.sortable .fa-sort { color: #9ca3af; }

        /* Pagination Container Styles */
        .pagination-container { display: flex; flex-wrap: wrap; justify-content: space-between; align-items: center; margin-top: 1.5rem; padding-top: 1rem; border-top: 1px solid #e5e7eb; }
        .pagination-controls { display: flex; align-items: center; gap: 0.75rem; font-size: 0.875rem; color: #4b5563; margin-top: 0.5rem; }
        .pagination-controls label { margin-bottom: 0; white-space: nowrap; margin-right: 0.25rem; }
        .limit-select { padding: 0.25rem 1.75rem 0.25rem 0.5rem; font-size: 0.875rem; line-height: 1.25; height: auto; min-width: 4.5rem; background-size: 1.2em 1.2em; background-position: right 0.3rem center; border-radius: 0.375rem; border: 1px solid #d1d5db; }
        /* --- End Reusable Styles --- */
    </style>
{% endblock %}

{% block body %}
    <div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
        <div class="container mx-auto max-w-7xl">

            {# 1. Header Section #}
            <div class="flex flex-col sm:flex-row justify-between items-center mb-8 gap-4">
                <h1 class="text-2xl lg:text-3xl font-bold text-gray-900 flex items-center gap-2">
                    <i class="fas fa-calendar-alt text-indigo-600"></i> {# Example color #}
                    Gestion des Événements
                </h1>
                <a href="{{ path('app_admin_event_new') }}" class="button button-success">
                    <i class="fas fa-plus mr-1.5"></i> Nouvel Événement
                </a>
            </div>

            {# 2. Status Cards #}
            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
                {# À venir Card #}
                <div class="bg-white rounded-lg shadow-md border border-gray-200 p-5 flex items-center gap-4">
                    <div class="flex-shrink-0 rounded-full p-3 bg-blue-100 text-blue-600"> <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" /></svg> </div>
                    <div>
                        <div class="text-sm text-gray-500 uppercase tracking-wider">À Venir</div>
                        <div class="text-2xl font-bold text-gray-900">{{ countAVenir|default(0) }}</div>
                    </div>
                </div>
                {# En cours Card #}
                <div class="bg-white rounded-lg shadow-md border border-gray-200 p-5 flex items-center gap-4">
                    <div class="flex-shrink-0 rounded-full p-3 bg-green-100 text-green-600"> <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" /><path stroke-linecap="round" stroke-linejoin="round" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" /></svg> </div>
                    <div>
                        <div class="text-sm text-gray-500 uppercase tracking-wider">En Cours</div>
                        <div class="text-2xl font-bold text-gray-900">{{ countEnCours|default(0) }}</div>
                    </div>
                </div>
                {# Terminé Card #}
                <div class="bg-white rounded-lg shadow-md border border-gray-200 p-5 flex items-center gap-4">
                    <div class="flex-shrink-0 rounded-full p-3 bg-gray-100 text-gray-600"> <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" /></svg> </div>
                    <div>
                        <div class="text-sm text-gray-500 uppercase tracking-wider">Terminés</div>
                        <div class="text-2xl font-bold text-gray-900">{{ countTermine|default(0) }}</div>
                    </div>
                </div>
                {# Annulé Card #}
                <div class="bg-white rounded-lg shadow-md border border-gray-200 p-5 flex items-center gap-4">
                    <div class="flex-shrink-0 rounded-full p-3 bg-red-100 text-red-600"> <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636" /></svg> </div>
                    <div>
                        <div class="text-sm text-gray-500 uppercase tracking-wider">Annulés</div>
                        <div class="text-2xl font-bold text-gray-900">{{ countAnnule|default(0) }}</div>
                    </div>
                </div>
            </div>

            {# 3. Flash Messages #}
            {% include 'partials/_flash_messages.html.twig' ignore missing %}

            {# 4. Filter Form Card #}
            <div class="bg-white rounded-lg shadow p-4 mb-6">
                {{ form_start(filterForm, {'attr': {'class': 'grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 lg:grid-cols-5 gap-4 items-end filter-form'}}) }}
                <div class="sm:col-span-2 md:col-span-2 lg:col-span-2">
                    <label for="{{ filterForm.search.vars.id }}" class="sr-only">Rechercher</label>
                    {{ form_widget(filterForm.search) }}
                    {{ form_errors(filterForm.search) }}
                </div>
                <div>
                    <label for="{{ filterForm.status.vars.id }}" class="sr-only">Statut</label>
                    {{ form_widget(filterForm.status) }}
                    {{ form_errors(filterForm.status) }}
                </div>
                <div>
                    <label for="{{ filterForm.date_filter.vars.id }}" class="sr-only">Période</label>
                    {{ form_widget(filterForm.date_filter) }}
                    {{ form_errors(filterForm.date_filter) }}
                </div>
                {# Optional Gouvernorat Filter
                    <div>
                        <label for="{{ filterForm.state.vars.id }}" class="sr-only">Gouvernorat</label>
                        {{ form_widget(filterForm.state) }}
                        {{ form_errors(filterForm.state) }}
                    </div>
                #}
                <div class="flex gap-2">
                    <button type="submit" class="button button-primary button-sm flex-grow">
                        <i class="fas fa-filter mr-1"></i>Filtrer
                    </button>
                    <a href="{{ path('app_admin_events') }}" class="button button-secondary button-sm flex-grow" title="Réinitialiser">
                        <i class="fas fa-sync-alt mr-1"></i>Réinitialiser
                    </a>
                </div>
                {{ form_end(filterForm) }}
            </div>

            {# 5. Events Table Card #}
            <div class="bg-white shadow-md overflow-hidden sm:rounded-lg border border-gray-200">
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                        <tr>
                            <th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                {{ knp_pagination_sortable(pagination, 'Titre', 'e.titre') }}
                            </th>
                            <th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                {{ knp_pagination_sortable(pagination, 'Date début', 'e.dateDebut') }}
                            </th>

                            <th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                {{ knp_pagination_sortable(pagination, 'trottinette Min Autonomie', 'e.trottinetteMinAutonomie') }}
                            </th>
                            <th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                {{ knp_pagination_sortable(pagination, 'Lieu (Gouvernorat)', 'e.state') }}
                            </th>
                            <th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                {{ knp_pagination_sortable(pagination, 'Statut', 'e.statut') }}
                            </th>
                            <th scope="col" class="px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">
                                {# Cannot easily sort by count with current setup #}
                                Participants
                            </th>
                            <th scope="col" class="relative px-4 py-3"> <span class="sr-only">Actions</span> </th>
                        </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                        {# --- CORRECTED LOOP & COUNT ACCESS --- #}
                        {% for event in pagination %} {# Loop directly over Event objects #}
                            <tr id="event-row-{{ event.id }}" class="hover:bg-gray-50">
                                <td class="px-4 py-4 whitespace-nowrap">
                                    <div class="text-sm font-medium text-gray-900">{{ event.titre }}</div>
                                    {# Optional: Add truncated description #}
                                    {# <div class="text-xs text-gray-500 truncate w-64" title="{{ event.description }}">{{ event.description }}</div> #}
                                </td>
                                <td class="px-4 py-4 whitespace-nowrap">
                                    <div class="text-sm text-gray-900">{{ event.dateDebut ? event.dateDebut|date('d/m/Y H:i') : '-' }}</div>
                                </td>
                                <td class="px-4 py-4 whitespace-nowrap">
                                    <div class="text-sm text-gray-700">{{ event.state ? event.state.label : '-' }}</div>
                                </td>
                                <td class="px-4 py-4 whitespace-nowrap">
                                    {% include 'admin/event/_status_badge.html.twig' with {'status': event.statut} %}
                                </td>
                                <td class="px-4 py-4 whitespace-nowrap text-sm text-center">
                                    <a href="{{ path('app_admin_event_participants', {id: event.id}) }}" class="text-blue-600 hover:text-blue-800 hover:underline font-medium">
                                        {{ event.participations.count }} {# Get count from relation #}
                                    </a>
                                </td>
                                <td class="px-4 py-4 whitespace-nowrap text-right text-sm font-medium space-x-1">
                                    <a href="{{ path('app_admin_event_show', {id: event.id}) }}" class="button button-sm button-info text-white" title="Voir"> <i class="fas fa-eye"></i> </a>
                                    <a href="{{ path('app_admin_event_edit', {id: event.id}) }}" class="button button-sm button-warning text-white" title="Modifier"> <i class="fas fa-edit"></i> </a>
                                    {% if event.statut not in ['TERMINE', 'ANNULE'] %}
                                        <form action="{{ path('app_admin_event_delete', {id: event.id}) }}" method="post" class="inline-block form-delete-event" data-event-id="{{ event.id }}">
                                            <input type="hidden" name="_token" value="{{ csrf_token('delete_admin_' ~ event.id) }}">
                                            <button type="submit" class="button button-sm button-danger" title="Annuler l'événement"> <i class="fas fa-ban"></i> </button>
                                        </form>
                                    {% endif %}
                                </td>
                            </tr>
                        {% else %}
                            <tr>
                                <td colspan="6" class="px-6 py-12 text-center text-sm text-gray-500">
                                    {# ... No results message ... #}
                                    Aucun événement trouvé {% if filterForm.vars.value.search is not empty or filterForm.vars.value.status is not empty or filterForm.vars.value.date_filter is not empty %} correspondant aux critères actuels{% endif %}.
                                    {% if filterForm.vars.value.search is not empty or filterForm.vars.value.status is not empty or filterForm.vars.value.date_filter is not empty %}
                                        <a href="{{ path('app_admin_events') }}" class="text-blue-600 hover:underline ml-2">Voir tous</a>
                                    {% endif %}
                                </td>
                            </tr>
                        {% endfor %}
                        {# --- END CORRECTED LOOP --- #}
                        </tbody>
                    </table>
                </div> {# End Table Wrapper #}
            </div> {# End Table Card #}

            {# 6. Pagination Container #}
            {% if pagination is defined and pagination.getTotalItemCount > 0 %}
                <div class="pagination-container">
                    <div> {# Links #}
                        {% if pagination.pageCount > 1 %}
                            {{ knp_pagination_render(pagination) }} {# Uses Tailwind template #}
                        {% endif %}
                    </div>
                    <div class="pagination-controls"> {# Summary & Limit #}
                        <span> {# Item count #}
                            {% set totalItems = pagination.getTotalItemCount|default(0) %}
                            {% if totalItems > 0 %}
                                {% set firstItem = (pagination.getCurrentPageNumber() - 1) * pagination.getItemNumberPerPage() + 1 %}
                                {% set lastItem = firstItem + pagination.count() - 1 %} {# Use count() method #}
                                Affichage de {{ firstItem }} à {{ lastItem }} sur {{ totalItems }}
                            {% endif %}
                         </span>
                        <div class="inline-flex items-center"> {# Limit Selector #}
                            <label for="itemsPerPageSelect" class="whitespace-nowrap">par page:</label>
                            <select id="itemsPerPageSelect" class="form-select limit-select">
                                {% for limitOption in allowedLimits %}
                                    <option value="{{ limitOption }}" {{ limitOption == currentLimit ? 'selected' : '' }}>
                                        {{ limitOption }}
                                    </option>
                                {% endfor %}
                            </select>
                        </div>
                    </div>
                </div>
            {% endif %} {# End Pagination Section #}

        </div> {# End container #}
    </div> {# End page wrapper #}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    {# Limit Selector JS #}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const selectElement = document.getElementById('itemsPerPageSelect');
            if (selectElement) { /* ... Limit JS ... */ }

            // --- AJAX Form Submission for Cancel (Delete Button) ---
            const handleAdminFormSubmit = async (form, confirmMessage) => {
                if (confirmMessage && !confirm(confirmMessage)) return;
                const submitButton = form.querySelector('button[type="submit"]');
                const originalButtonHtml = submitButton ? submitButton.innerHTML : '';
                if (submitButton) { submitButton.disabled = true; submitButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i>'; }

                try {
                    const response = await fetch(form.action, {
                        method: form.method,
                        headers: { 'X-Requested-With': 'XMLHttpRequest', 'Accept': 'application/json' },
                        body: new FormData(form)
                    });
                    const contentType = response.headers.get("content-type");
                    if (contentType && contentType.includes("application/json")) {
                        const result = await response.json();
                        if (response.ok && result.success) {
                            console.log('Action successful:', result.message);
                            // Option 1: Reload page (simplest)
                            // window.location.reload();

                            // Option 2: Update UI dynamically (more complex)
                            const eventRow = form.closest('tr');
                            if (eventRow) {
                                // Find the status badge cell and update it
                                const statusCell = eventRow.querySelector('.event-status-cell');
                                if (statusCell) {
                                    // Re-render the badge using the new status (crude example)
                                    statusCell.innerHTML = `<span class="status-badge status-${result.newStatut|lower}">${result.newStatut.replace('_',' ')}</span>`;
                                }
                                // Remove the cancel button itself
                                form.remove();
                            }
                            // Show a success notification (e.g., using a toast library or simple alert)
                            alert(result.message); // Replace with better notification

                        } else {
                            console.error('Action failed:', result.error || result.message);
                            alert(`Erreur: ${result.error || result.message || 'Action échouée.'}`);
                        }
                    } else {
                        console.error('Non-JSON response:', await response.text());
                        alert('Une erreur inattendue est survenue.');
                    }
                } catch (error) {
                    console.error('Fetch error:', error);
                    alert('Une erreur réseau est survenue.');
                } finally {
                    if (submitButton) { // Re-enable button only on error if UI isn't reloaded
                        if (!response.ok || !result.success) {
                            submitButton.disabled = false;
                            submitButton.innerHTML = originalButtonHtml;
                        }
                    }
                }
            };

            document.body.addEventListener('submit', function(e) {
                if (e.target && e.target.classList.contains('form-delete-event')) {
                    e.preventDefault();
                    handleAdminFormSubmit(e.target, 'Êtes-vous sûr de vouloir annuler cet événement ?');
                }
            });
        });
    </script>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/admin/event_form.html.twig -----
{# templates/admin/event_form.html.twig #}
{% extends 'base.html.twig' %}

{# Use dynamic title passed from controller #}
{% block title %}{{ page_title|default('Gestion Événement') }} - Admin{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# Add basic form styling if not covered by base or Tailwind #}
    <style>
        /* Reuse button styles from index page if needed */
        .button { display: inline-block; padding: 0.5rem 1rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: all 0.2s ease-in-out; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; }
        .button-sm { padding: 0.375rem 0.75rem; font-size: 0.75rem; }
        .button-secondary { background-color: #e5e7eb; color: #374151; border-color: #d1d5db; } .button-secondary:hover { background-color: #d1d5db; border-color: #9ca3af;}
        .button-success { background-color: #10b981; color: white; border-color: #10b981; } .button-success:hover { background-color: #059669; border-color: #047857; }
        .button-ai { background-color: #8b5cf6; color: white; border-color: #8b5cf6; } /* Purple example */
        .button-ai:hover { background-color: #7c3aed; border-color: #6d28d9;}
        .button:disabled { opacity: 0.6; cursor: not-allowed; }

        /* Basic form row styling */
        .form-control, .form-select, textarea { display: block; width: 100%; padding: 0.5rem 0.75rem; font-size: 0.875rem; line-height: 1.5; color: #1f2937; background-color: #fff; background-clip: padding-box; border: 1px solid #d1d5db; border-radius: 0.375rem; transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out; }
        .form-select { appearance: none; background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e"); background-position: right 0.5rem center; background-repeat: no-repeat; background-size: 1.5em 1.5em; padding-right: 2.5rem; }
        label { display: inline-block; margin-bottom: 0.5rem; font-weight: 500; }
        .mb-3 { margin-bottom: 1rem !important; }
        .mt-6 { margin-top: 1.5rem !important; }
        .mr-2 { margin-right: 0.5rem !important; }
        .flex { display: flex !important; }
        .justify-between { justify-content: space-between !important; }
        .items-center { align-items: center !important; }
        .gap-2 > *:not(:last-child) { margin-right: 0.5rem; }

        /* Add FontAwesome icons for buttons if not global */
        .fas { display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; -webkit-font-smoothing: antialiased; font-family: "Font Awesome 6 Free"; font-weight: 900; }
        .fa-arrow-left:before { content: "\f060"; }
        .fa-save:before { content: "\f0c7"; }
        .fa-robot:before { content: "\f544"; } /* AI icon */
        .fa-spin { animation: fa-spin 1s infinite linear; }
        @keyframes fa-spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }
    </style>
{% endblock %}

{% block body %}
    <div class="min-h-screen bg-gray-100 p-4 md:p-6">
        <div class="container mx-auto max-w-3xl"> {# Limit width for forms #}

            {# Page Header #}
            <h1 class="text-2xl md:text-3xl font-bold text-gray-800 mb-6">
                {{ page_title|default('Gérer l\'Événement') }}
            </h1>

            {# Flash Messages #}
            {% include 'partials/_flash_messages.html.twig' ignore missing %}

            {# Form #}
            <div class="bg-white p-6 rounded-lg shadow">
                {# Use method="POST" explicitly if needed, though form_start defaults to it #}
                {{ form_start(form, {'attr': {'id': 'event-form'}}) }}

                {# Display general form errors #}
                {{ form_errors(form) }}

                {# --- RENDER FORM FIELDS MANUALLY FOR BUTTON PLACEMENT --- #}
                <div class="space-y-4"> {# Add spacing between fields #}
                    {# Titre #}
                    <div class="mb-3">
                        {{ form_label(form.titre) }}
                        {{ form_widget(form.titre, {'attr': {'class': 'form-control'}}) }}
                        {{ form_errors(form.titre) }}
                    </div>

                    {# Description & AI Button #}
                    <div class="mb-3">
                        <div class="flex justify-between items-center mb-1">
                            {{ form_label(form.description) }}
                            {# Show AI button only on 'new' page if flag is set #}
                            {% if show_ai_button|default(false) %}
                                <button type="button" id="generate-ai-btn" class="button button-ai button-sm">
                                    <i class="fas fa-robot mr-1"></i> Générer avec IA
                                </button>
                            {% endif %}
                        </div>
                        {{ form_widget(form.description, {'attr': {'class': 'form-control', 'rows': 5}}) }}
                        {{ form_errors(form.description) }}
                        <div id="ai-status" class="text-xs mt-1"></div> {# For loading/error messages #}
                    </div>

                    {# State (Gouvernorat) #}
                    <div class="mb-3">
                        {{ form_label(form.state) }}
                        {{ form_widget(form.state, {'attr': {'class': 'form-select'}}) }}
                        {{ form_errors(form.state) }}
                    </div>

                    {# Date Debut #}
                    <div class="mb-3">
                        {{ form_label(form.dateDebut) }}
                        {{ form_widget(form.dateDebut, {'attr': {'class': 'form-control'}}) }}
                        {{ form_errors(form.dateDebut) }}
                    </div>

                    {# Date Fin #}
                    <div class="mb-3">
                        {{ form_label(form.dateFin) }}
                        {{ form_widget(form.dateFin, {'attr': {'class': 'form-control'}}) }}
                        {{ form_errors(form.dateFin) }}
                    </div>

                    {# Min Autonomy #}
                    <div class="mb-3">
                        {{ form_label(form.trottinetteMinAutonomie) }}
                        {{ form_widget(form.trottinetteMinAutonomie, {'attr': {'class': 'form-control'}}) }}
                        {{ form_errors(form.trottinetteMinAutonomie) }}
                    </div>

                    {# Status (Only on Edit) #}
                    {% if form.statut is defined %}
                        <div class="mb-3">
                            {{ form_label(form.statut) }}
                            {{ form_widget(form.statut, {'attr': {'class': 'form-select'}}) }}
                            {{ form_errors(form.statut) }}
                        </div>
                    {% endif %}
                </div>
                {# --- END MANUAL FIELD RENDERING --- #}

                {# Buttons #}
                <div class="mt-6 flex justify-between items-center border-t pt-4">
                    <a href="{{ path('app_admin_events') }}" class="button button-secondary">
                        <i class="fas fa-arrow-left mr-2"></i> Annuler
                    </a>
                    <button type="submit" class="button button-success">
                        <i class="fas fa-save mr-2"></i> {{ button_label|default('Enregistrer') }}
                    </button>
                </div>

                {{ form_end(form) }}
            </div>

        </div> {# End container #}
    </div> {# End page wrapper #}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const aiButton = document.getElementById('generate-ai-btn');
            const descriptionField = document.getElementById('{{ form.description.vars.id }}'); // Get ID dynamically
            const titreField = document.getElementById('{{ form.titre.vars.id }}');
            const stateField = document.getElementById('{{ form.state.vars.id }}');
            const dateDebutField = document.getElementById('{{ form.dateDebut.vars.id }}');
            const dateFinField = document.getElementById('{{ form.dateFin.vars.id }}');
            const autonomieField = document.getElementById('{{ form.trottinetteMinAutonomie.vars.id }}');
            const aiStatusDiv = document.getElementById('ai-status');

            if (aiButton && descriptionField) {
                aiButton.addEventListener('click', async function() {
                    const description = descriptionField.value;
                    if (!description.trim()) {
                        aiStatusDiv.textContent = 'Veuillez entrer une description.';
                        aiStatusDiv.className = 'text-xs mt-1 text-red-600';
                        return;
                    }

                    // --- Show loading state ---
                    aiButton.disabled = true;
                    aiButton.innerHTML = '<i class="fas fa-spinner fa-spin mr-1"></i> Génération...';
                    aiStatusDiv.textContent = 'Analyse en cours...';
                    aiStatusDiv.className = 'text-xs mt-1 text-blue-600';

                    try {
                        const response = await fetch("{{ path('app_admin_event_generate_details') }}", {
                            method: 'POST',
                            headers: {
                                'Accept': 'application/json',
                                'X-Requested-With': 'XMLHttpRequest', // Optional: Helps backend identify AJAX
                                'Content-Type': 'application/x-www-form-urlencoded', // Required
                            },
                            body: `description=${encodeURIComponent(description)}`
                        });

                        const result = await response.json();

                        if (response.ok && result.success && result.data) {
                            const data = result.data;
                            console.log("AI Data Received:", data); // Debugging

                            // --- Populate fields ---
                            if (data.titre && titreField) titreField.value = data.titre;
                            if (data.state && stateField) {
                                // Important: Set the VALUE of the select element
                                // This assumes the backend correctly mapped the location name
                                // to the Enum *value* (e.g., 'SOUSSE')
                                stateField.value = data.state;
                                if (stateField.value !== data.state) { // Check if value was actually set (option exists)
                                    console.warn(`Could not set state field to '${data.state}'. Option might be missing or mapping failed.`);
                                    aiStatusDiv.textContent += ` (Lieu '${data.state}' non mappé)`; // Append warning
                                    aiStatusDiv.className = 'text-xs mt-1 text-yellow-600';
                                }
                            }
                            if (data.dateDebut && dateDebutField) dateDebutField.value = data.dateDebut;
                            if (data.dateFin && dateFinField) dateFinField.value = data.dateFin;
                            if (data.trottinetteMinAutonomie !== undefined && data.trottinetteMinAutonomie !== null && autonomieField) {
                                autonomieField.value = data.trottinetteMinAutonomie;
                            }

                            aiStatusDiv.textContent = 'Champs pré-remplis par l\'IA.';
                            aiStatusDiv.className = 'text-xs mt-1 text-green-600';

                        } else {
                            // Handle errors reported by the backend
                            console.error("AI Generation Error:", result.message);
                            aiStatusDiv.textContent = `Erreur: ${result.message || 'Impossible de générer les détails.'}`;
                            aiStatusDiv.className = 'text-xs mt-1 text-red-600';
                        }

                    } catch (error) {
                        // Handle network or other fetch errors
                        console.error("Fetch Error:", error);
                        aiStatusDiv.textContent = 'Erreur de communication avec le serveur.';
                        aiStatusDiv.className = 'text-xs mt-1 text-red-600';
                    } finally {
                        // --- Reset button state ---
                        aiButton.disabled = false;
                        aiButton.innerHTML = '<i class="fas fa-robot mr-1"></i> Générer avec IA';
                    }
                });
            } else {
                if (!aiButton) console.error("AI button not found");
                if (!descriptionField) console.error("Description field not found");
            }
        });
    </script>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/admin/dashboard/index.html.twig -----
{# templates/admin/dashboard.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Tableau de Bord Admin - TrottiCare{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# Optional: Add FontAwesome if not globally included in base.html.twig #}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
{% endblock %}

{% block body %}
    <div class="container mx-auto px-4 py-8 md:py-12 page-content"> {# Use container class and padding #}
        <h1 class="text-3xl font-bold text-gray-900 mb-4">
            <i class="fas fa-user-shield me-2"></i> Tableau de Bord Administrateur
        </h1>
        <p class="text-lg text-gray-600 mb-6">Vue d'ensemble et gestion de la plateforme.</p>

        {# Display flash messages #}
        {% include 'partials/_flash_messages.html.twig' %}

        {# Key Statistics Cards #}
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
            {# Users Card #}
            <div class="bg-white p-6 rounded-lg shadow-md border border-gray-200 flex items-center justify-between">
                <div>
                    <div class="text-3xl font-bold text-primary">{{ user_count|default('0') }}</div>
                    <div class="text-sm text-gray-500">Utilisateurs Inscrits</div>
                </div>
                <i class="fas fa-users fa-2x text-primary opacity-50"></i>
            </div>

            {# Scooters Card #}
            <div class="bg-white p-6 rounded-lg shadow-md border border-gray-200 flex items-center justify-between">
                <div>
                    <div class="text-3xl font-bold text-green-500">{{ trottinette_count|default('0') }}</div>
                    <div class="text-sm text-gray-500">Trottinettes Total</div>
                </div>
                <i class="fas fa-motorcycle fa-2x text-green-500 opacity-50"></i>
            </div>

            {# Reservations Card #}
            <div class="bg-white p-6 rounded-lg shadow-md border border-gray-200 flex items-center justify-between">
                <div>
                    <div class="text-3xl font-bold text-blue-500">{{ reservation_count|default('0') }}</div>
                    <div class="text-sm text-gray-500">Réservations Total</div>
                </div>
                <i class="fas fa-receipt fa-2x text-blue-500 opacity-50"></i>
            </div>

            {# Events Card #}
            <div class="bg-white p-6 rounded-lg shadow-md border border-gray-200 flex items-center justify-between">
                <div>
                    <div class="text-3xl font-bold text-purple-600">{{ eventData|length }}</div> {# Use eventData passed from controller #}
                    <div class="text-sm text-gray-500">Événements Total</div>
                </div>
                <i class="fas fa-calendar-alt fa-2x text-purple-600 opacity-50"></i>
            </div>
        </div>

        {# Management Links #}
        <h2 class="text-2xl font-semibold text-gray-800 mb-4">Gestion Rapide</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {# Use list-group styling equivalent or simple links #}
            <a href="{{ path('admin_utilisateur_index') }}" class="p-4 bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow border border-gray-200 flex items-center text-gray-700 hover:text-primary">
                <i class="fas fa-users-cog fa-fw me-3 text-lg"></i> Gestion des Utilisateurs
            </a>
            <a href="{{ path('admin_trottinette_index') }}" class="p-4 bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow border border-gray-200 flex items-center text-gray-700 hover:text-primary">
                <i class="fas fa-motorcycle fa-fw me-3 text-lg"></i> Gestion des Trottinettes
            </a>
            <a href="{{ path('point_relais_index') }}" class="p-4 bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow border border-gray-200 flex items-center text-gray-700 hover:text-primary"> {# Corrected route name #}
                <i class="fas fa-map-pin fa-fw me-3 text-lg"></i> Gestion des Points Relais
            </a>
            <a href="{{ path('admin_maintenance_index') }}" class="p-4 bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow border border-gray-200 flex items-center text-gray-700 hover:text-primary"> {# Corrected route name #}
                <i class="fas fa-tools fa-fw me-3 text-lg"></i> Gestion des Maintenances
            </a>
            <a href="{{ path('reservation_index') }}" class="p-4 bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow border border-gray-200 flex items-center text-gray-700 hover:text-primary"> {# Corrected route name #}
                <i class="fas fa-file-invoice-dollar fa-fw me-3 text-lg"></i> Gestion des Réservations
            </a>
            <a href="{{ path('reclamation_index') }}" class="p-4 bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow border border-gray-200 flex items-center text-gray-700 hover:text-primary"> {# Corrected route name #}
                <i class="fas fa-bullhorn fa-fw me-3 text-lg"></i> Gestion des Réclamations
            </a>
            <a href="{{ path('app_admin_events') }}" class="p-4 bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow border border-gray-200 flex items-center text-gray-700 hover:text-primary"> {# Corrected route name #}
                <i class="fas fa-calendar-check fa-fw me-3 text-lg"></i> Gestion des Événements
            </a>
            {# Add link for Participations if route exists #}
            {# <a href="{{ path('admin_participation_index') }}" class="p-4 bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow border border-gray-200 flex items-center text-gray-700 hover:text-primary">
            <i class="fas fa-user-check fa-fw me-3 text-lg"></i> Gestion des Participations
        </a> #}
        </div>

    </div>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/admin/event_participants.html.twig -----
{# templates/admin/event_participants.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Participants - {{ event.titre }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# Remove Bootstrap-specific styles if any were added here #}
    {# Ensure Tailwind is loaded via base.html.twig #}
    <style>
        /* Re-use status badge colors if needed */
        .status-badge {
            padding: 0.25em 0.6em; /* Smaller padding for table badges */
            border-radius: 9999px; /* pill shape */
            font-size: 0.7rem; /* Slightly smaller */
            font-weight: 500; /* font-medium */
            line-height: 1;
            text-transform: uppercase;
            white-space: nowrap;
        }
        .status-inscrit { background-color: #dcfce7; color: #166534; } /* Tailwind green-100, green-800 */
        .status-annule { background-color: #fee2e2; color: #991b1b; } /* Tailwind red-100, red-800 */
    </style>
{% endblock %}

{% block body %}
    <div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
        <div class="container mx-auto max-w-6xl"> {# Adjust max-width as needed #}

            {# 1. Breadcrumbs & Back Link - Tailwind styled #}
            <nav class="flex justify-between items-center mb-6" aria-label="Breadcrumb">
                <ol class="inline-flex items-center space-x-1 md:space-x-2 rtl:space-x-reverse">
                    <li class="inline-flex items-center">
                        <a href="{{ path('admin_dashboard') }}" class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-blue-600">
                            <svg class="w-3 h-3 me-2.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                                <path d="m19.707 9.293-2-2-7-7a1 1 0 0 0-1.414 0l-7 7-2 2a1 1 0 0 0 1.414 1.414L2 10.414V18a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1h3a2 2 0 0 0 2-2v-7.586l.293.293a1 1 0 0 0 1.414-1.414Z"/>
                            </svg>
                            Tableau de bord
                        </a>
                    </li>
                    <li>
                        <div class="flex items-center">
                            <svg class="rtl:rotate-180 w-3 h-3 text-gray-400 mx-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
                            </svg>
                            <a href="{{ path('app_admin_events') }}" class="ms-1 text-sm font-medium text-gray-700 hover:text-blue-600 md:ms-2">Gestion Événements</a>
                        </div>
                    </li>
                    <li aria-current="page">
                        <div class="flex items-center">
                            <svg class="rtl:rotate-180 w-3 h-3 text-gray-400 mx-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
                            </svg>
                            <span class="ms-1 text-sm font-medium text-gray-500 md:ms-2">Participants</span>
                        </div>
                    </li>
                </ol>
                {# Back to Event Details Button #}
                <a href="{{ path('app_admin_event_show', {'id': event.id}) }}" class="inline-flex items-center px-3 py-1.5 border border-gray-300 text-xs font-medium rounded shadow-sm text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1.5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M15 19l-7-7 7-7" />
                    </svg>
                    Retour aux Détails
                </a>
            </nav>


            {# Flash Messages #}
            {% include 'partials/_flash_messages.html.twig' ignore missing %}

            {# 2. Main Card #}
            <div class="bg-white rounded-lg shadow-md overflow-hidden border border-gray-200">

                {# Card Header #}
                <div class="px-6 py-4 bg-gray-50 border-b border-gray-200 flex flex-col sm:flex-row justify-between items-start sm:items-center gap-2">
                    <h2 class="text-lg font-semibold text-gray-800 mb-0 flex items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z" />
                        </svg>
                        Participants pour : <span class="text-blue-700 ml-1 font-bold">{{ event.titre }}</span>
                    </h2>
                    {# Count Badge #}
                    <span class="px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm font-medium">
                    {{ participants|length }} Participant{{ participants|length > 1 ? 's' : '' }}
                </span>
                </div>

                {# Card Body containing the table or message #}
                <div> {# Removed card-body padding to let table span full width #}
                    {% if participants|length > 0 %}
                        <div class="overflow-x-auto">
                            <table class="min-w-full divide-y divide-gray-200">
                                <thead class="bg-gray-50">
                                <tr>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nom</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Téléphone</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Inscrit le</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Statut</th>
                                </tr>
                                </thead>
                                <tbody class="bg-white divide-y divide-gray-200">
                                {% for participation in participants %}
                                    <tr class="hover:bg-gray-50">
                                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                            {% if participation.utilisateur %}
                                                {{ participation.utilisateur.prenom }} {{ participation.utilisateur.nom }}
                                            {% else %}
                                                <em class="text-gray-500 italic">Utilisateur Inconnu</em>
                                            {% endif %}
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-600">
                                            {% if participation.utilisateur %}
                                                {{ participation.utilisateur.email }}
                                            {% else %}
                                                <em class="text-gray-500 italic">-</em>
                                            {% endif %}
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-600">
                                            {% if participation.utilisateur %}
                                                {{ participation.utilisateur.telephone }}
                                            {% else %}
                                                <em class="text-gray-500 italic">-</em>
                                            {% endif %}
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-600">
                                            {{ participation.dateInscription ? participation.dateInscription|date('d/m/Y H:i') : 'N/A' }}
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm">
                                            {# Use custom status badge CSS #}
                                            {% if participation.statut.value == 'INSCRIT' %}
                                                <span class="status-badge status-inscrit">Inscrit</span>
                                            {% else %}
                                                <span class="status-badge status-annule">Annulé</span>
                                            {% endif %}
                                        </td>
                                    </tr>
                                {% endfor %}
                                </tbody>
                            </table>
                        </div>
                    {% else %}
                        <div class="p-6 text-center text-gray-500">
                            <svg xmlns="http://www.w3.org/2000/svg" class="mx-auto h-10 w-10 text-gray-400 mb-3" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="1.5">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                            Aucun participant trouvé pour cet événement.
                        </div>
                    {% endif %}
                </div>
                {# Card Footer (Optional, removed as buttons are now in header/nav) #}
                {# <div class="px-6 py-4 bg-gray-50 border-t border-gray-200"> ... </div> #}
            </div> {# End Card #}

        </div> {# End Container #}
    </div> {# End Page Wrapper #}
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/admin/event/_status_badge.html.twig -----
{# templates/admin/event/_status_badge.html.twig #}
{% set status_upper = status|default('Unknown')|upper %}
{% set badge_class = 'badge-default' %}
{% set status_text = status_upper|replace({'_': ' '})|capitalize %}

{% if status_upper == 'A_VENIR' %}
    {% set badge_class = 'badge-blue' %}
    {% set status_text = 'À venir' %} {# Nicer Label #}
{% elseif status_upper == 'EN_COURS' %}
    {% set badge_class = 'badge-green' %}
    {% set status_text = 'En cours' %} {# Nicer Label #}
{% elseif status_upper == 'TERMINE' %}
    {% set badge_class = 'badge-gray' %}
    {% set status_text = 'Terminé' %} {# Nicer Label #}
{% elseif status_upper == 'ANNULE' %}
    {% set badge_class = 'badge-red' %}
    {% set status_text = 'Annulé' %} {# Nicer Label #}
{% endif %}

<span class="badge {{ badge_class }}">
    {{ status_text }}
</span>


----- /Users/mac/Downloads/my_project_troti-vf/templates/admin/dashboard.html.twig -----
{# templates/admin/dashboard.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Tableau de Bord Admin - TrottiCare{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# Ensure Tailwind is loaded via base.html.twig #}
    {# FontAwesome for icons (or replace with SVGs) #}
    {# <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.x.x/css/all.min.css"> #}
    <style>
        /* Ensure FontAwesome icons render */
        .fas { display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; -webkit-font-smoothing: antialiased; font-family: "Font Awesome 6 Free"; font-weight: 900; }
        .fa-tachometer-alt:before { content: "\f3fd"; }
        .fa-calendar-alt:before { content: "\f073"; }
        .fa-users:before { content: "\f0c0"; }
        .fa-clock:before { content: "\f017"; }
        .fa-angle-right:before { content: "\f105"; }
        .fa-user-shield:before { content: "\f505"; } /* Admin icon */
        .fa-motorcycle:before { content: "\f21c"; } /* Scooter icon */
        .fa-receipt:before { content: "\f543"; } /* Reservation icon */
        .fa-users-cog:before { content: "\f509"; } /* Manage users */
        .fa-map-pin:before { content: "\f276"; } /* Point relais */
        .fa-tools:before { content: "\f7d9"; } /* Maintenance */
        .fa-file-invoice-dollar:before { content: "\f571"; } /* Reservations */
        .fa-bullhorn:before { content: "\f0a1"; } /* Reclamations */
        .fa-calendar-check:before { content: "\f274"; } /* Events */

        .mr-2 { margin-right: 0.5rem; }
        .mr-3 { margin-right: 0.75rem; }
        .ml-1 { margin-left: 0.25rem; }

        /* Optional: Add a hover effect to quick links */
        .quick-link-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
            --tw-shadow-color: #cbd5e1; /* Example shadow color on hover */
            --tw-shadow: var(--tw-shadow-colored);
        }
    </style>
{% endblock %}

{% block body %}
<div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
    <div class="container mx-auto max-w-7xl">

        {# 1. Header #}
        <header class="mb-10">
            <h1 class="text-3xl lg:text-4xl font-bold text-gray-900 mb-2 flex items-center">
                <i class="fas fa-user-shield mr-3 text-blue-600"></i> Tableau de Bord Administrateur
            </h1>
            <p class="text-lg text-gray-600">Vue d'ensemble et accès rapides aux modules de gestion.</p>
        </header>

        {# Flash Messages #}
        {% include 'partials/_flash_messages.html.twig' ignore missing %}

        {# 2. Key Statistics Cards - Updated Styling #}
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-10">

            {# Total Events Card #}
            <div class="bg-white rounded-lg shadow-md border border-gray-200 overflow-hidden">
                <div class="p-5 flex justify-between items-start">
                    <div>
                        <div class="text-sm font-medium text-gray-500 uppercase tracking-wider">Événements (Total)</div>
                        <div class="mt-1 text-3xl font-semibold text-gray-900">{{ eventData|length }}</div>
                    </div>
                    <div class="flex-shrink-0 rounded-md p-3 bg-blue-100 text-blue-600">
                        <i class="fas fa-calendar-alt fa-lg"></i> {# Adjusted icon size #}
                    </div>
                </div>
                <div class="bg-gray-50 px-5 py-3">
                    <div class="text-sm">
                        <a href="{{ path('app_admin_events') }}" class="font-medium text-blue-700 hover:text-blue-900 flex justify-between items-center">
                            <span>Voir les détails</span>
                            <i class="fas fa-angle-right ml-1"></i>
                        </a>
                    </div>
                </div>
            </div>

            {# Total Participants Card #}
            <div class="bg-white rounded-lg shadow-md border border-gray-200 overflow-hidden">
                <div class="p-5 flex justify-between items-start">
                    <div>
                        <div class="text-sm font-medium text-gray-500 uppercase tracking-wider">Participants (Total)</div>
                        {% set totalParticipants = 0 %}
                        {% for item in eventData %}
                            {% set totalParticipants = totalParticipants + item.participantCount %}
                        {% endfor %}
                        <div class="mt-1 text-3xl font-semibold text-gray-900">{{ totalParticipants }}</div>
                    </div>
                    <div class="flex-shrink-0 rounded-md p-3 bg-green-100 text-green-600">
                        <i class="fas fa-users fa-lg"></i>
                    </div>
                </div>
                <div class="bg-gray-50 px-5 py-3">
                    <div class="text-sm">
                        {# Link might go to events list or a dedicated participants overview if exists #}
                        <a href="{{ path('app_admin_events') }}" class="font-medium text-green-700 hover:text-green-900 flex justify-between items-center">
                            <span>Voir les détails</span>
                            <i class="fas fa-angle-right ml-1"></i>
                        </a>
                    </div>
                </div>
            </div>

            {# Upcoming Events Card #}
            <div class="bg-white rounded-lg shadow-md border border-gray-200 overflow-hidden">
                <div class="p-5 flex justify-between items-start">
                    <div>
                        <div class="text-sm font-medium text-gray-500 uppercase tracking-wider">Événements à venir</div>
                        {% set upcomingEvents = 0 %}
                        {% for item in eventData %}
                            {% if item.event.statut == 'A_VENIR' %}
                                {% set upcomingEvents = upcomingEvents + 1 %}
                            {% endif %}
                        {% endfor %}
                        <div class="mt-1 text-3xl font-semibold text-gray-900">{{ upcomingEvents }}</div>
                    </div>
                    <div class="flex-shrink-0 rounded-md p-3 bg-yellow-100 text-yellow-600">
                        <i class="fas fa-clock fa-lg"></i>
                    </div>
                </div>
                <div class="bg-gray-50 px-5 py-3">
                    <div class="text-sm">
                        <a href="{{ path('app_admin_events', {'filter': 'upcoming'}) }}" class="font-medium text-yellow-700 hover:text-yellow-900 flex justify-between items-center">
                            <span>Voir les détails</span>
                            <i class="fas fa-angle-right ml-1"></i>
                        </a>
                    </div>
                </div>
            </div>

            {# Placeholder for another key metric - e.g., Total Users #}
            {# Make sure user_count is passed from controller if using this #}
            {% if user_count is defined %}
                <div class="bg-white rounded-lg shadow-md border border-gray-200 overflow-hidden">
                    <div class="p-5 flex justify-between items-start">
                        <div>
                            <div class="text-sm font-medium text-gray-500 uppercase tracking-wider">Utilisateurs</div>
                            <div class="mt-1 text-3xl font-semibold text-gray-900">{{ user_count }}</div>
                        </div>
                        <div class="flex-shrink-0 rounded-md p-3 bg-indigo-100 text-indigo-600">
                            <i class="fas fa-users fa-lg"></i>
                        </div>
                    </div>
                    <div class="bg-gray-50 px-5 py-3">
                        <div class="text-sm">
                            <a href="{{ path('admin_utilisateur_index') }}" class="font-medium text-indigo-700 hover:text-indigo-900 flex justify-between items-center">
                                <span>Gérer les utilisateurs</span>
                                <i class="fas fa-angle-right ml-1"></i>
                            </a>
                        </div>
                    </div>
                </div>
            {% endif %}

        </div>

        {# 3. Management Links Section - Updated Styling #}
        <section>
            <h2 class="text-2xl font-semibold text-gray-800 mb-6">Gestion Rapide</h2>
            <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-5">
                {# Define links array for cleaner iteration #}
                {% set management_links = [
                {'route': 'admin_utilisateur_index', 'label': 'Utilisateurs', 'icon': 'fa-users-cog', 'color': 'blue'},
                {'route': 'admin_trottinette_index', 'label': 'Trottinettes', 'icon': 'fa-motorcycle', 'color': 'green'},
                {'route': 'point_relais_index', 'label': 'Points Relais', 'icon': 'fa-map-pin', 'color': 'teal'},
                {'route': 'admin_maintenance_index', 'label': 'Maintenances', 'icon': 'fa-tools', 'color': 'orange'},
                {'route': 'reservation_index', 'label': 'Réservations', 'icon': 'fa-file-invoice-dollar', 'color': 'cyan'},
                {'route': 'reclamation_index', 'label': 'Réclamations', 'icon': 'fa-bullhorn', 'color': 'pink'},
                {'route': 'app_admin_events', 'label': 'Événements', 'icon': 'fa-calendar-check', 'color': 'indigo'},
                ] %}

                {% for link in management_links %}
                <a href="{{ path(link.route) }}"
                   class="quick-link-card group flex items-center p-5 bg-white rounded-lg shadow-sm hover:shadow-lg transition-shadow duration-200 border border-gray-200 text-gray-700 hover:border-{{link.color}}-300">
                    <div class="flex-shrink-0 mr-4">
                        {# Dynamic icon background color #}
                        <div class="rounded-full p-2.5 bg-{{link.color}}-100 text-{{link.color}}-600">
                            <i class="fas {{ link.icon }} fa-lg"></i>
                        </div>
                    </div>
                    <span class="font-medium group-hover:text-{{link.color}}-700 transition-colors text-base">{{ link.label }}</span>
                    {# Optional: Arrow on hover #}
                    <i class="fas fa-angle-right ml-auto text-gray-400 group-hover:text-{{link.color}}-500 opacity-0 group-hover:opacity-100 transition-opacity"></i>
                </a>
                {% endfor %}
            </div>
        </section>

        {# Add more sections as needed - e.g., Recent Activity, Charts, etc. #}

    </div> {# End Container #}
</div> {# End Page Wrapper #}
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/reservation/edit.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Modifier la Réservation{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
    .button {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0.5rem 1rem;
        border-radius: 0.375rem;
        font-weight: 500;
        text-align: center;
        cursor: pointer;
        transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out;
        border: 1px solid transparent;
        line-height: 1.25;
        font-size: 0.875rem;
        white-space: nowrap;
    }
    .button-primary { background-color: #3b82f6; color: white; }
    .button-primary:hover { background-color: #2563eb; }
    .button-secondary { background-color: #e5e7eb; color: #374151; }
    .button-secondary:hover { background-color: #d1d5db; }
    .form-input, .form-select {
        width: 100%;
        padding: 0.5rem 0.75rem;
        border: 1px solid #d1d5db;
        border-radius: 0.375rem;
        font-size: 0.875rem;
        color: #1f2937;
        background-color: #fff;
        transition: border-color .15s ease-in-out;
    }
    .form-input:focus, .form-select:focus {
        outline: none;
        border-color: #3b82f6;
        box-shadow: 0 0 0 1px #3b82f6;
    }
</style>
{% endblock %}

{% block body %}
<div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
  <div class="container mx-auto max-w-3xl">
    <div class="bg-white rounded-lg shadow-md p-6">

      <h1 class="text-2xl font-bold text-gray-900 mb-6 flex items-center">
        <i class="fas fa-edit text-yellow-500 mr-2"></i> Modifier la Réservation
      </h1>

      {# ✅ Flash messages #}
      {% for label, messages in app.flashes %}
        {% for message in messages %}
          <div class="alert alert-{{ label }} alert-dismissible fade show mb-4" role="alert">
            {{ message }}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Fermer"></button>
          </div>
        {% endfor %}
      {% endfor %}

      {{ form_start(form, { attr: { novalidate: 'novalidate', 'data-turbo': 'false' } }) }}

      {% if form.vars.errors|length > 0 %}
        <div class="alert alert-danger mb-4">
          {{ form_errors(form) }}
        </div>
      {% endif %}

      <div class="space-y-4">

        <div>
          {{ form_label(form.dateDebut, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
          {{ form_widget(form.dateDebut, { attr: { class: 'form-input' } }) }}
          {{ form_errors(form.dateDebut) }}
        </div>

        <div>
          {{ form_label(form.dateFin, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
          {{ form_widget(form.dateFin, { attr: { class: 'form-input' } }) }}
          {{ form_errors(form.dateFin) }}
        </div>

        <div>
          {{ form_label(form.montant, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
          {{ form_widget(form.montant, { attr: { class: 'form-input' } }) }}
          {{ form_errors(form.montant) }}
        </div>

        <div>
          {{ form_label(form.status, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
          {{ form_widget(form.status, { attr: { class: 'form-select' } }) }}
          {{ form_errors(form.status) }}
        </div>

        <div>
          {{ form_label(form.paiement, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
          {{ form_widget(form.paiement, { attr: { class: 'form-select' } }) }}
          {{ form_errors(form.paiement) }}
        </div>

        <div>
          {{ form_label(form.trottinette, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
          {{ form_widget(form.trottinette, { attr: { class: 'form-select' } }) }}
          {{ form_errors(form.trottinette) }}
        </div>

      </div>

      <div class="flex justify-between items-center mt-8">
        <a href="{{ path('reservation_index') }}" class="button button-secondary">
          <i class="fas fa-arrow-left mr-1"></i> Retour
        </a>
        <button type="submit" class="button button-primary">
          <i class="fas fa-save mr-1"></i> Enregistrer
        </button>
      </div>

      {{ form_end(form) }}

    </div>
  </div>
</div>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/reservation/new.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Nouvelle Réservation{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
    .button {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0.5rem 1rem;
        border-radius: 0.375rem;
        font-weight: 500;
        text-align: center;
        cursor: pointer;
        transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out;
        border: 1px solid transparent;
        line-height: 1.25;
        font-size: 0.875rem;
        white-space: nowrap;
    }
    .button-primary { background-color: #3b82f6; color: white; }
    .button-primary:hover { background-color: #2563eb; }
    .button-secondary { background-color: #e5e7eb; color: #374151; }
    .button-secondary:hover { background-color: #d1d5db; }
    .form-input {
        width: 100%;
        padding: 0.5rem 0.75rem;
        border: 1px solid #d1d5db;
        border-radius: 0.375rem;
        font-size: 0.875rem;
        color: #1f2937;
        background-color: #fff;
        transition: border-color .15s ease-in-out;
    }
    .form-input:focus {
        outline: none;
        border-color: #3b82f6;
        box-shadow: 0 0 0 1px #3b82f6;
    }
</style>
{% endblock %}

{% block body %}
<div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
    <div class="container mx-auto max-w-2xl">
        <div class="bg-white rounded-lg shadow-md p-6">
            <h1 class="text-2xl font-bold text-gray-900 mb-6 flex items-center">
                <i class="fas fa-calendar-plus text-blue-600 mr-2"></i> Créer une Nouvelle Réservation
            </h1>

            {{ form_start(form, { attr: { novalidate: 'novalidate', 'data-turbo': 'false' } }) }}

            {% if form.vars.errors|length > 0 %}
                <div class="alert alert-danger mb-4">
                    {{ form_errors(form) }}
                </div>
            {% endif %}

            <div class="space-y-4">
                {{ form_row(form.trottinette, { attr: { class: 'form-input' } }) }}
                {{ form_row(form.dateDebut, { attr: { class: 'form-input' } }) }}
                {{ form_row(form.dateFin, { attr: { class: 'form-input' } }) }}
                {{ form_row(form.montant, { attr: { class: 'form-input' } }) }}
                {{ form_row(form.paiement, { attr: { class: 'form-input' } }) }}
            </div>

            <div class="flex items-center justify-end gap-4 mt-8">
                <a href="{{ path('reservation_index') }}" class="button button-secondary">
                    <i class="fas fa-times mr-1"></i> Annuler
                </a>
                <button type="submit" class="button button-primary">
                    <i class="fas fa-check mr-1"></i> Confirmer la Réservation
                </button>
            </div>

            {{ form_end(form) }}
        </div>
    </div>
</div>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/reservation/index.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Liste des Réservations{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .status-badge {
            padding: 0.25em 0.6em;
            border-radius: 9999px;
            font-size: 0.7rem;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.05em;
            white-space: nowrap;
            line-height: 1;
        }
        .status-confirmed { background-color: #dcfce7; color: #166534; }
        .status-pending { background-color: #fef9c3; color: #854d0e; }
        .status-cancelled { background-color: #fee2e2; color: #991b1b; }
        .form-input, .form-select {
            appearance: none; width: 100%; padding: 0.5rem 0.75rem;
            font-size: 0.875rem; line-height: 1.5; color: #1f2937;
            background-color: #fff; border: 1px solid #d1d5db;
            border-radius: 0.375rem; transition: border-color .15s ease-in-out;
        }
        .form-input:focus, .form-select:focus {
            outline: none; border-color: #3b82f6; box-shadow: 0 0 0 1px #3b82f6;
        }
        .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.5rem 1rem; border-radius: 0.375rem; font-weight: 500; cursor: pointer; transition: all 0.2s; border: 1px solid transparent; }
        .button-primary { background-color: #3b82f6; color: white; }
        .button-primary:hover { background-color: #2563eb; }
        .button-outline-secondary { background-color: transparent; color: #6b7280; border: 1px solid #d1d5db; }
        .button-outline-secondary:hover { background-color: #f3f4f6; }
        .button-outline-danger { background-color: transparent; color: #dc2626; border: 1px solid #ef4444; }
        .button-outline-danger:hover { background-color: #fee2e2; }
        .button-sm { padding: 0.25rem 0.5rem; font-size: 0.75rem; }
    </style>
{% endblock %}

{% block body %}
<div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
    <div class="container mx-auto max-w-7xl">

        {# Header #}
        <div class="flex flex-col sm:flex-row justify-between items-center mb-8 gap-4">
            <h1 class="text-2xl lg:text-3xl font-bold text-gray-900">
                <i class="fas fa-calendar-alt mr-2 text-blue-600"></i>Liste des Réservations
            </h1>
            <div class="flex gap-2">
                <a href="{{ path('reservation_new') }}" class="button button-primary">
                    <i class="fas fa-plus mr-1.5"></i> Nouvelle réservation
                </a>
                <button id="openStatsBtn" class="button button-outline-secondary">
                    <i class="fas fa-chart-pie mr-1.5"></i> Statistiques
                </button>
            </div>
        </div>

        {# Flash Messages #}
        {% include 'partials/_flash_messages.html.twig' ignore missing %}

        {# Search Form #}
        <form method="get" action="{{ path('reservation_index') }}" class="bg-white rounded-lg shadow p-4 mb-6">
            <div class="grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-4 items-end">
                <div>{{ form_row(searchForm.dateDebut, { attr: { class: 'form-input' } }) }}</div>
                <div>{{ form_row(searchForm.dateFin, { attr: { class: 'form-input' } }) }}</div>
                <div>{{ form_row(searchForm.status, { attr: { class: 'form-select' } }) }}</div>
                <div>
                    <button type="submit" class="button button-primary w-full">
                        <i class="fas fa-filter mr-1.5"></i> Filtrer
                    </button>
                </div>
            </div>
        </form>

        {# Table #}
        <div class="bg-white rounded-lg shadow overflow-hidden">
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">ID</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Début</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Fin</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Montant</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Statut</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Paiement</th>
                            <th class="px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        {% for reservation in pagination %}
                        <tr>
                            <td class="px-4 py-3">{{ reservation.id }}</td>
                            <td class="px-4 py-3">{{ reservation.dateDebut ? reservation.dateDebut|date('Y-m-d') : '' }}</td>
                            <td class="px-4 py-3">{{ reservation.dateFin ? reservation.dateFin|date('Y-m-d') : '' }}</td>
                            <td class="px-4 py-3">{{ reservation.montant }}</td>
                            <td class="px-4 py-3">
                                <span class="status-badge status-{{ reservation.status.value|lower }}">
                                    {{ reservation.status.label() }}
                                </span>
                            </td>
                            <td class="px-4 py-3">{{ reservation.paiement.label() }}</td>
                            <td class="px-4 py-3 text-right space-x-1">
                                <a href="{{ path('reservation_show', {id: reservation.id}) }}" class="button button-sm button-outline-secondary" title="Voir">
                                    <i class="fas fa-eye"></i>
                                </a>
                                <a href="{{ path('reservation_edit', {id: reservation.id}) }}" class="button button-sm button-outline-secondary" title="Modifier">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <button type="button" 
                                    class="button button-sm button-outline-danger openDeleteModalBtn"
                                    data-action="{{ path('reservation_delete', {id: reservation.id}) }}"
                                    data-token="{{ csrf_token('delete' ~ reservation.id) }}"
                                    title="Supprimer">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </td>
                        </tr>
                        {% else %}
                        <tr>
                            <td colspan="7" class="text-center py-12 text-gray-500">
                                Aucune réservation trouvée.
                            </td>
                        </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>

        {# Pagination #}
        <div class="mt-6">
            {{ knp_pagination_render(pagination) }}
        </div>

        {# Chart Modal #}
        <div id="statsModal" class="fixed inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center hidden z-50">
            <div class="bg-white p-6 rounded-lg shadow-lg w-full max-w-md">
                <canvas id="statsChart" width="400" height="400"></canvas>
                <button id="closeStatsBtn" class="button button-outline-secondary mt-4 w-full">Fermer</button>
            </div>
        </div>

        {# Delete Modal #}
        <div id="deleteModal" class="fixed inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center hidden z-50">
            <div class="bg-white p-6 rounded-lg shadow-lg w-full max-w-sm">
                <h2 class="text-lg font-semibold mb-4 text-gray-800">Confirmer la suppression</h2>
                <p class="text-sm text-gray-600 mb-6">Êtes-vous sûr de vouloir supprimer cette réservation ?</p>

                <form method="post" id="deleteForm">
                    <input type="hidden" name="_token" id="deleteToken">
                    <div class="flex justify-end gap-2">
                        <button type="button" id="cancelDeleteBtn" class="button button-outline-secondary">Annuler</button>
                        <button type="submit" class="button button-outline-danger">Supprimer</button>
                    </div>
                </form>
            </div>
        </div>

    </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
// Chart Modal Logic
const openStatsBtn = document.getElementById('openStatsBtn');
const closeStatsBtn = document.getElementById('closeStatsBtn');
const statsModal = document.getElementById('statsModal');
let statsChart = null;

openStatsBtn.addEventListener('click', async () => {
    statsModal.classList.remove('hidden');
    const ctx = document.getElementById('statsChart').getContext('2d');

    if (statsChart) statsChart.destroy();

    try {
        const response = await fetch("{{ path('reservation_stats') }}");
        const data = await response.json();

        statsChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: Object.keys(data),
                datasets: [{
                    data: Object.values(data),
                    backgroundColor: [
                        'rgba(75, 192, 192, 0.7)',
                        'rgba(255, 99, 132, 0.7)',
                        'rgba(255, 206, 86, 0.7)'
                    ]
                }]
            }
        });
    } catch (e) {
        console.error(e);
    }
});

closeStatsBtn.addEventListener('click', () => {
    statsModal.classList.add('hidden');
});

// Delete Modal Logic
const deleteModal = document.getElementById('deleteModal');
const deleteForm = document.getElementById('deleteForm');
const deleteTokenInput = document.getElementById('deleteToken');
const cancelDeleteBtn = document.getElementById('cancelDeleteBtn');

document.querySelectorAll('.openDeleteModalBtn').forEach(button => {
    button.addEventListener('click', () => {
        const action = button.getAttribute('data-action');
        const token = button.getAttribute('data-token');

        deleteForm.setAttribute('action', action);
        deleteTokenInput.value = token;

        deleteModal.classList.remove('hidden');
    });
});

cancelDeleteBtn.addEventListener('click', () => {
    deleteModal.classList.add('hidden');
});
</script>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/reservation/show.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Détails de la Réservation{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
    .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.5rem 1rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; white-space: nowrap; }
    .button-primary { background-color: #3b82f6; color: white; border-color: #3b82f6; } .button-primary:hover { background-color: #2563eb; }
    .button-secondary { background-color: #e5e7eb; color: #374151; border-color: #d1d5db; } .button-secondary:hover { background-color: #d1d5db; }
    .button-danger { background-color: #ef4444; color: white; border-color: #ef4444; } .button-danger:hover { background-color: #dc2626; }
</style>
{% endblock %}

{% block body %}
<div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
    <div class="container mx-auto max-w-3xl">
        <div class="bg-white rounded-lg shadow-md p-6">
            <h1 class="text-2xl font-bold text-gray-900 mb-6 flex items-center">
                <i class="fas fa-calendar-check text-blue-600 mr-2"></i> Détails de la Réservation
            </h1>

            <ul class="divide-y divide-gray-200 mb-6">
                <li class="py-4 flex justify-between"><span class="font-medium text-gray-700">ID</span><span>{{ reservation.id }}</span></li>
                <li class="py-4 flex justify-between"><span class="font-medium text-gray-700">Date de début</span><span>{{ reservation.dateDebut ? reservation.dateDebut|date('Y-m-d') : '' }}</span></li>
                <li class="py-4 flex justify-between"><span class="font-medium text-gray-700">Date de fin</span><span>{{ reservation.dateFin ? reservation.dateFin|date('Y-m-d') : '' }}</span></li>
                <li class="py-4 flex justify-between"><span class="font-medium text-gray-700">Montant</span><span>{{ reservation.montant }} €</span></li>
                <li class="py-4 flex justify-between"><span class="font-medium text-gray-700">Status</span><span class="px-2 py-1 bg-blue-100 text-blue-800 rounded-full text-xs">{{ reservation.status.label() }}</span></li>
                <li class="py-4 flex justify-between"><span class="font-medium text-gray-700">Mode de Paiement</span><span class="px-2 py-1 bg-gray-100 text-gray-800 rounded-full text-xs">{{ reservation.paiement.label() }}</span></li>
                <li class="py-4 flex justify-between"><span class="font-medium text-gray-700">Date de création</span><span>{{ reservation.dateCreation ? reservation.dateCreation|date('Y-m-d') : '' }}</span></li>
            </ul>

            <div class="flex flex-col md:flex-row justify-between items-center gap-4">
                <div class="flex gap-2">
                    <a href="{{ path('reservation_edit', {id: reservation.id}) }}" class="button button-primary">
                        <i class="fas fa-edit mr-1"></i> Modifier
                    </a>
                    <button type="button" 
                        class="button button-danger openDeleteModalBtn"
                        data-action="{{ path('reservation_delete', {id: reservation.id}) }}"
                        data-token="{{ csrf_token('delete' ~ reservation.id) }}">
                        <i class="fas fa-trash-alt mr-1"></i> Supprimer
                    </button>
                </div>
                <a href="{{ path('reservation_index') }}" class="button button-secondary">
                    <i class="fas fa-arrow-left mr-1"></i> Retour à la liste
                </a>
            </div>
        </div>
    </div>
</div>

{# Delete Confirmation Modal (Tailwind Style) #}
<div id="deleteModal" class="fixed inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center hidden z-50">
    <div class="bg-white p-6 rounded-lg shadow-lg w-full max-w-sm">
        <h2 class="text-lg font-semibold mb-4 text-gray-800">Confirmer la suppression</h2>
        <p class="text-sm text-gray-600 mb-6">Êtes-vous sûr de vouloir supprimer cette réservation ?</p>

        <form method="post" id="deleteForm">
            <input type="hidden" name="_token" id="deleteToken">
            <div class="flex justify-end gap-2">
                <button type="button" id="cancelDeleteBtn" class="button button-secondary">Annuler</button>
                <button type="submit" class="button button-danger">Supprimer</button>
            </div>
        </form>
    </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const deleteModal = document.getElementById('deleteModal');
        const deleteForm = document.getElementById('deleteForm');
        const deleteTokenInput = document.getElementById('deleteToken');
        const cancelDeleteBtn = document.getElementById('cancelDeleteBtn');

        document.querySelectorAll('.openDeleteModalBtn').forEach(button => {
            button.addEventListener('click', () => {
                const action = button.getAttribute('data-action');
                const token = button.getAttribute('data-token');

                deleteForm.setAttribute('action', action);
                deleteTokenInput.value = token;

                deleteModal.classList.remove('hidden');
            });
        });

        cancelDeleteBtn.addEventListener('click', () => {
            deleteModal.classList.add('hidden');
        });
    });
</script>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/reclamation/view_responses.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Réponses à la Réclamation{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
    .button {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0.4rem 0.75rem;
        border-radius: 0.375rem;
        font-weight: 500;
        text-align: center;
        cursor: pointer;
        transition: all 0.2s ease-in-out;
        font-size: 0.75rem;
        line-height: 1.25;
        white-space: nowrap;
        border: 1px solid transparent;
    }
    .button-primary { background-color: #3b82f6; color: white; }
    .button-primary:hover { background-color: #2563eb; }
    .button-danger { background-color: #ef4444; color: white; }
    .button-danger:hover { background-color: #dc2626; }
    .button-outline-primary { background-color: transparent; color: #3b82f6; border: 1px solid #3b82f6; }
    .button-outline-primary:hover { background-color: #e0f2fe; }
    .badge {
        display: inline-block;
        padding: 0.25em 0.6em;
        font-size: 0.75rem;
        font-weight: 600;
        border-radius: 9999px;
        background-color: #e5e7eb;
        color: #374151;
        text-transform: uppercase;
    }
</style>
{% endblock %}

{% block body %}
<div class="min-h-screen bg-gray-100 p-4 md:p-6">
    <div class="container mx-auto max-w-5xl">
        <div class="bg-white rounded-lg shadow-md p-6">

            <h1 class="text-2xl font-bold text-gray-900 mb-6">
                Réponses à la réclamation : <span class="text-blue-600">{{ reclamation.titre }}</span>
            </h1>

            {% if responses is not empty %}
                <ul class="space-y-4 mb-6">
                    {% for response in responses %}
                        <li class="bg-gray-50 rounded-md p-4 shadow-sm flex justify-between items-start">
                            <div>
                                <p class="text-gray-800 mb-2">{{ response.message }}</p>
                                <div class="text-sm text-gray-500 space-x-2">
                                    <span>Envoyée le {{ response.dateReponse|date('d/m/Y H:i') }}</span>
                                    <span class="badge">{{ response.userType|capitalize }}</span>
                                </div>
                            </div>
                            <div class="flex flex-col gap-2 items-end">
                                <a href="{{ path('edit_response', {'id': response.id}) }}" class="button button-primary">
                                    <i class="fas fa-edit mr-1"></i> Modifier
                                </a>
                                <a href="{{ path('delete_response', {'id': response.id}) }}" class="button button-danger"
                                   onclick="return confirm('Voulez-vous vraiment supprimer cette réponse ?');">
                                    <i class="fas fa-trash-alt mr-1"></i> Supprimer
                                </a>
                            </div>
                        </li>
                    {% endfor %}
                </ul>
            {% else %}
                <div class="text-center text-gray-500 py-10">
                    <i class="fas fa-exclamation-circle text-4xl mb-2"></i>
                    <p>Aucune réponse disponible pour cette réclamation.</p>
                </div>
            {% endif %}

            <div class="text-center mt-6">
                <a href="{{ path('admin_reclamations') }}" class="button button-outline-primary">
                    <i class="fas fa-arrow-left mr-1"></i> Retour à la liste des réclamations
                </a>
            </div>

        </div>
    </div>
</div>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/reclamation/signup.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Sign Up | Trotticare Events{% endblock %}

{% block body %}
    <div class="progress-bar"></div>

    <section class="login-container">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-md-8 col-lg-6">
                    <div class="card login-card shadow fade-in">
                        <div class="login-header text-center text-white mb-4">
                            <div>
                                <h2 class="mb-0 fw-bold">Create An Account</h2>
                                <p class="mb-0">Sign up to join Trotticare Events</p>
                            </div>
                        </div>
                        <div class="card-body p-4">
                            <form id="signupForm" class="slide-up" style="animation-delay: 0.2s;">
                                <div class="form-floating mb-3">
                                    <input type="text" class="form-control" id="nameInput" placeholder="Full Name" required>
                                    <label for="nameInput"><i class="fas fa-user me-2"></i>Full Name</label>
                                </div>
                                <div class="form-floating mb-3">
                                    <input type="email" class="form-control" id="emailInput" placeholder="name@example.com" required>
                                    <label for="emailInput"><i class="fas fa-envelope me-2"></i>Email Address</label>
                                </div>
                                <div class="form-floating mb-3">
                                    <input type="password" class="form-control" id="passwordInput" placeholder="Password" required>
                                    <label for="passwordInput"><i class="fas fa-lock me-2"></i>Password</label>
                                </div>
                                <div class="d-grid">
                                    <button type="submit" class="btn btn-primary btn-login btn-ripple confetti-button">
                                        Sign Up <i class="fas fa-user-plus ms-2"></i>
                                    </button>
                                </div>
                            </form>

                            <div class="text-center slide-up" style="animation-delay: 0.4s;">
                                <p class="mb-0">Already have an account? <a href="{{ path('login') }}" class="text-primary fw-bold hover-underline">Login</a></p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/reclamation/manage_reclamations.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Gestion des Réclamations{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
    .button {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0.4rem 0.75rem;
        border-radius: 0.375rem;
        font-weight: 500;
        text-align: center;
        cursor: pointer;
        transition: all 0.2s ease-in-out;
        font-size: 0.75rem;
        line-height: 1.25;
        white-space: nowrap;
        border: 1px solid transparent;
    }
    .button-danger { background-color: #ef4444; color: white; }
    .button-danger:hover { background-color: #dc2626; }
    .button-info { background-color: #0ea5e9; color: white; }
    .button-info:hover { background-color: #0284c7; }
    .button-success { background-color: #10b981; color: white; }
    .button-success:hover { background-color: #059669; }
</style>
{% endblock %}

{% block body %}
<div class="min-h-screen bg-gray-100 p-4 md:p-6">
    <div class="container mx-auto max-w-6xl">
        <div class="bg-white rounded-lg shadow-md p-6">

            <h1 class="text-2xl font-bold text-gray-900 mb-6">
                <i class="fas fa-clipboard-list text-blue-600 mr-2"></i> Gestion des Réclamations
            </h1>

            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Titre</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Description</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Date de création</th>
                            <th class="px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase">Actions</th>
                        </tr>
                    </thead>

                    <tbody class="bg-white divide-y divide-gray-200">
                        {% for reclamation in reclamations %}
                            <tr class="hover:bg-gray-50">
                                <td class="px-4 py-3 text-sm text-gray-900">{{ reclamation.titre }}</td>
                                <td class="px-4 py-3 text-sm text-gray-700">
                                    {{ reclamation.description|slice(0, 60) ~ '...' }}
                                </td>
                                <td class="px-4 py-3 text-sm text-gray-700">
                                    {{ reclamation.getDateCreation()|date('Y-m-d') }}
                                </td>
                                <td class="px-4 py-3 text-right flex flex-wrap justify-end gap-2">
                                    <a href="{{ path('delete_reclamation', {'id': reclamation.id}) }}" class="button button-danger" onclick="return confirm('Voulez-vous vraiment supprimer cette réclamation ?');">
                                        <i class="fas fa-trash-alt mr-1"></i> Supprimer
                                    </a>
                                    <a href="{{ path('add_response', {'id': reclamation.id}) }}" class="button button-info">
                                        <i class="fas fa-reply mr-1"></i> Répondre
                                    </a>
                                    <a href="{{ path('view_responses', {'id': reclamation.id}) }}" class="button button-success">
                                        <i class="fas fa-comments mr-1"></i> Réponses
                                    </a>
                                </td>
                            </tr>
                        {% else %}
                            <tr>
                                <td colspan="4" class="text-center py-12 text-gray-500">
                                    Aucune réclamation trouvée.
                                </td>
                            </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>

        </div>
    </div>
</div>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/reclamation/edit_reclamation.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Modifier la Réclamation{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
    .button {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0.5rem 1rem;
        border-radius: 0.375rem;
        font-weight: 500;
        text-align: center;
        cursor: pointer;
        transition: all 0.2s ease-in-out;
        border: 1px solid transparent;
        font-size: 0.875rem;
        white-space: nowrap;
    }
    .button-primary { background-color: #3b82f6; color: white; }
    .button-primary:hover { background-color: #2563eb; }
    .button-secondary { background-color: #e5e7eb; color: #374151; }
    .button-secondary:hover { background-color: #d1d5db; }
    .form-input, .form-select, textarea {
        width: 100%;
        padding: 0.5rem 0.75rem;
        border: 1px solid #d1d5db;
        border-radius: 0.375rem;
        font-size: 0.875rem;
        color: #1f2937;
        background-color: #fff;
        transition: border-color .15s ease-in-out;
    }
    .form-input:focus, .form-select:focus, textarea:focus {
        outline: none;
        border-color: #3b82f6;
        box-shadow: 0 0 0 1px #3b82f6;
    }
</style>
{% endblock %}

{% block body %}
<div class="min-h-screen bg-gray-100 p-4 md:p-6">
    <div class="container mx-auto max-w-3xl">
        <div class="bg-white rounded-lg shadow-md p-6">

            <h1 class="text-2xl font-bold text-gray-900 mb-6">
                Modifier la Réclamation : <span class="text-blue-600">{{ reclamation.titre }}</span>
            </h1>

            {{ form_start(form, { attr: { novalidate: 'novalidate', 'data-turbo': 'false' } }) }}

            {% if form.vars.errors|length > 0 %}
                <div class="alert alert-danger mb-4">
                    {{ form_errors(form) }}
                </div>
            {% endif %}

            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">

                <div>
                    {{ form_label(form.titre, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
                    {{ form_widget(form.titre, { attr: { class: 'form-input' } }) }}
                    {{ form_errors(form.titre) }}
                </div>

                <div>
                    {{ form_label(form.user_email, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
                    {{ form_widget(form.user_email, { attr: { class: 'form-input' } }) }}
                    {{ form_errors(form.user_email) }}
                </div>

                <div class="md:col-span-2">
                    {{ form_label(form.description, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
                    {{ form_widget(form.description, { attr: { class: 'form-input', rows: 5 } }) }}
                    {{ form_errors(form.description) }}
                </div>

                <div>
                    {{ form_label(form.type_reclamation, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
                    {{ form_widget(form.type_reclamation, { attr: { class: 'form-select' } }) }}
                    {{ form_errors(form.type_reclamation) }}
                </div>

                <div>
                    {{ form_label(form.id_trottinette, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
                    {{ form_widget(form.id_trottinette, { attr: { class: 'form-input' } }) }}
                    {{ form_errors(form.id_trottinette) }}
                </div>

            </div>

            <div class="flex justify-end gap-4 mt-8">
                <a href="{{ path('reclamation_list') }}" class="button button-secondary">
                    <i class="fas fa-arrow-left mr-1"></i> Annuler
                </a>
                <button type="submit" class="button button-primary">
                    <i class="fas fa-save mr-1"></i> Enregistrer
                </button>
            </div>

            {{ form_end(form) }}

        </div>
    </div>
</div>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/reclamation/edit.html.twig -----
{% extends 'base.html.twig' %}
{% block title %}Modifier Réclamation{% endblock %}

{% block body %}
    <div class="container py-4">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h1 class="card-title mb-4">Modifier Réclamation #{{ reclamation.id }}</h1>

                        {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate'}}) }}
                        
                        <div class="mb-3">
                            {{ form_label(form.titre, 'Titre', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.titre, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.titre) }}
                        </div>

                        <div class="mb-3">
                            {{ form_label(form.description, 'Description', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.description, {'attr': {'class': 'form-control', 'rows': 5}}) }}
                            {{ form_errors(form.description) }}
                        </div>

                        <div class="mb-3">
                            {{ form_label(form.type_reclamation, 'Type de réclamation', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.type_reclamation, {'attr': {'class': 'form-select'}}) }}
                            {{ form_errors(form.type_reclamation) }}
                        </div>

                        <div class="mb-3">
                            {{ form_label(form.user_email, 'Email', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.user_email, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.user_email) }}
                        </div>

                        <div class="mb-3">
                            {{ form_label(form.trottinette, 'Trottinette concernée', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.trottinette, {'attr': {'class': 'form-select'}}) }}
                            {{ form_errors(form.trottinette) }}
                        </div>

                        <div class="d-flex justify-content-between mt-4">
                            <a href="{{ path('reclamation_index') }}" class="btn btn-secondary">
                                <i class="bi bi-arrow-left me-2"></i>Retour à la liste
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-check2 me-2"></i>Mettre à jour
                            </button>
                        </div>
                        
                        {{ form_end(form) }}
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/reclamation/edit_reclamation_front.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Modifier la Réclamation{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
    .button {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0.5rem 1rem;
        border-radius: 0.375rem;
        font-weight: 500;
        text-align: center;
        cursor: pointer;
        transition: all 0.2s ease-in-out;
        border: 1px solid transparent;
        font-size: 0.875rem;
        white-space: nowrap;
    }
    .button-primary { background-color: #3b82f6; color: white; }
    .button-primary:hover { background-color: #2563eb; }
    .button-secondary { background-color: #e5e7eb; color: #374151; }
    .button-secondary:hover { background-color: #d1d5db; }
    .form-input, .form-select, textarea {
        width: 100%;
        padding: 0.5rem 0.75rem;
        border: 1px solid #d1d5db;
        border-radius: 0.375rem;
        font-size: 0.875rem;
        color: #1f2937;
        background-color: #fff;
        transition: border-color .15s ease-in-out;
    }
    .form-input:focus, .form-select:focus, textarea:focus {
        outline: none;
        border-color: #3b82f6;
        box-shadow: 0 0 0 1px #3b82f6;
    }
</style>
{% endblock %}

{% block body %}
<div class="min-h-screen bg-gray-100 p-4 md:p-6">
    <div class="container mx-auto max-w-3xl">
        <div class="bg-white rounded-lg shadow-md p-6">

            <h1 class="text-2xl font-bold text-gray-900 mb-6">
                Modifier la Réclamation :
                <span class="text-blue-600">{{ reclamation.titre }}</span>
            </h1>

            {{ form_start(form, { attr: { novalidate: 'novalidate', 'data-turbo': 'false' } }) }}

            {% if form.vars.errors|length > 0 %}
                <div class="alert alert-danger mb-4">
                    {{ form_errors(form) }}
                </div>
            {% endif %}

            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">

                <div>
                    {{ form_label(form.titre, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
                    {{ form_widget(form.titre, { attr: { class: 'form-input' } }) }}
                    {{ form_errors(form.titre) }}
                </div>

                <div>
                    {{ form_label(form.user_email, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
                    {{ form_widget(form.user_email, { attr: { class: 'form-input' } }) }}
                    {{ form_errors(form.user_email) }}
                </div>

                <div class="md:col-span-2">
                    {{ form_label(form.description, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
                    {{ form_widget(form.description, { attr: { class: 'form-input', rows: 5 } }) }}
                    {{ form_errors(form.description) }}
                </div>

                <div>
                    {{ form_label(form.type_reclamation, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
                    {{ form_widget(form.type_reclamation, { attr: { class: 'form-select' } }) }}
                    {{ form_errors(form.type_reclamation) }}
                </div>

                <div>
                    {{ form_label(form.id_trottinette, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
                    {{ form_widget(form.id_trottinette, { attr: { class: 'form-input' } }) }}
                    {{ form_errors(form.id_trottinette) }}
                </div>

            </div>

            <div class="flex justify-between items-center mt-8">
                <button type="submit" class="button button-primary">
                    <i class="fas fa-save mr-1"></i> Enregistrer les modifications
                </button>
                <a href="{{ path('reclamation_list') }}" class="button button-secondary">
                    <i class="fas fa-arrow-left mr-1"></i> Annuler
                </a>
            </div>

            {{ form_end(form) }}

        </div>
    </div>
</div>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/reclamation/new.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Nouvelle Réclamation{% endblock %}

{% block body %}
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card shadow">
                    <div class="card-header bg-primary text-white">
                        <h2 class="h4 mb-0">Créer une Nouvelle Réclamation</h2>
                    </div>
                    <div class="card-body">
                        {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate'}}) }}

                        <div class="mb-3">
                            {{ form_label(form.type_reclamation, 'Type de Réclamation', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.type_reclamation, {'attr': {'class': 'form-select'}}) }}
                            {{ form_errors(form.type_reclamation) }}
                        </div>

                        <div class="mb-3">
                            {{ form_label(form.user_email, 'Email', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.user_email, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.user_email) }}
                        </div>

                        <div class="mb-3">
                            {{ form_label(form.trottinette, 'Trottinette Concernée', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.trottinette, {'attr': {'class': 'form-select'}}) }}
                            {{ form_errors(form.trottinette) }}
                        </div>

                        <div class="mb-3">
                            {{ form_label(form.titre, 'Sujet', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.titre, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.titre) }}
                        </div>

                        <div class="mb-3">
                            {{ form_label(form.description, 'Description', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.description, {'attr': {'class': 'form-control', 'rows': 5}}) }}
                            {{ form_errors(form.description) }}
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">Envoyer la Réclamation</button>
                            <a href="{{ path('reclamation_index') }}" class="btn btn-secondary">Retour à la liste</a>
                        </div>

                        {{ form_end(form) }}
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/reclamation/show_reclamation.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Détails de la Réclamation{% endblock %}

{% block body %}
<div class="min-h-screen bg-gray-100 p-4 md:p-6">
    <div class="container mx-auto max-w-4xl">

        <div class="bg-white rounded-lg shadow-md p-6">

            <h1 class="text-2xl font-bold text-gray-900 mb-6">
                {{ reclamation.titre }}
            </h1>

            <div class="space-y-4 mb-8">
                <div>
                    <span class="font-semibold text-gray-700">Description:</span>
                    <p class="text-gray-800">{{ reclamation.description }}</p>
                </div>
                <div>
                    <span class="font-semibold text-gray-700">Type de Réclamation:</span>
                    <p class="text-gray-800">{{ reclamation.getTypeReclamation() }}</p>
                </div>
                <div>
                    <span class="font-semibold text-gray-700">Date de Création:</span>
                    <p class="text-gray-800">{{ reclamation.getDateCreation()|date('Y-m-d') }}</p>
                </div>
            </div>

            <h2 class="text-xl font-semibold text-gray-900 mb-4">Réponses</h2>

            {% if reponses is not empty %}
                <ul class="space-y-4">
                    {% for reponse in reponses %}
                        <li class="bg-gray-50 p-4 rounded-md shadow-sm">
                            <p class="text-gray-800 mb-2">{{ reponse.message }}</p>
                            <p class="text-xs text-gray-500">{{ reponse.getDateReponse()|date('Y-m-d') }}</p>
                        </li>
                    {% endfor %}
                </ul>
            {% else %}
                <p class="text-gray-500">Aucune réponse pour cette réclamation.</p>
            {% endif %}

        </div>

    </div>
</div>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/reclamation/index.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Trotticare Events - Home{% endblock %}

{% block body %}
    <div class="progress-bar"></div>

    <section class="hero-section">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-6 fade-in" style="animation-delay: 0.2s;">
                    <h1 class="hero-title text-gradient">Trotticare Events</h1>
                    <p class="hero-subtitle typing-animation"
                       data-text='["Join Our Scooter Adventures!", "Explore The City Together!", "Experience The Freedom!"]'
                       data-speed="100" data-loop="true"></p>
                    <p class="mb-4 slide-up" style="animation-delay: 0.4s;">
                        Join our electric scooter community and participate in exciting events around the city.
                        Discover new routes, meet fellow enthusiasts, and enjoy the ride together!
                    </p>
                    <div class="d-flex flex-wrap gap-3 slide-up" style="animation-delay: 0.6s;">
                        <a href="#" class="btn btn-primary btn-lg btn-ripple">View Events</a>
                        <a href="#" class="btn btn-outline-primary btn-lg">Sign Up</a>
                        <a href="{{ path('create_reclamation') }}" class="btn btn-warning btn-lg">Créer une réclamation</a>
                    </div>
                </div>
                <div class="col-lg-6 mt-5 mt-lg-0 slide-in-right" style="animation-delay: 0.4s;">
                    <img src="{{ asset('images/hero-scooter.png') }}" alt="Electric Scooter" class="img-fluid float">
                </div>
            </div>
        </div>
        <div class="particle-container"></div>
    </section>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/reclamation/create_reclamation.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Créer une Réclamation{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
    .button {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0.5rem 1rem;
        border-radius: 0.375rem;
        font-weight: 500;
        text-align: center;
        cursor: pointer;
        transition: all 0.2s ease-in-out;
        border: 1px solid transparent;
        font-size: 0.875rem;
        white-space: nowrap;
    }
    .button-primary { background-color: #3b82f6; color: white; }
    .button-primary:hover { background-color: #2563eb; }
    .form-input, .form-select {
        width: 100%;
        padding: 0.5rem 0.75rem;
        border: 1px solid #d1d5db;
        border-radius: 0.375rem;
        font-size: 0.875rem;
        color: #1f2937;
        background-color: #fff;
        transition: border-color .15s ease-in-out;
    }
    .form-input:focus, .form-select:focus {
        outline: none;
        border-color: #3b82f6;
        box-shadow: 0 0 0 1px #3b82f6;
    }
</style>
{% endblock %}

{% block body %}
<div class="min-h-screen bg-gray-100 p-4 md:p-6">
    <div class="container mx-auto max-w-3xl">
        <div class="bg-white rounded-lg shadow-md p-6">

            <h1 class="text-2xl font-bold text-gray-900 mb-6">
                <i class="fas fa-plus-circle text-blue-600 mr-2"></i> Créer une nouvelle réclamation
            </h1>

            {{ form_start(form, { attr: { novalidate: 'novalidate', 'data-turbo': 'false' } }) }}

            {% if form.vars.errors|length > 0 %}
                <div class="alert alert-danger mb-4">
                    {{ form_errors(form) }}
                </div>
            {% endif %}

            <div class="space-y-4">

                <div>
                    {{ form_label(form.titre, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
                    {{ form_widget(form.titre, { attr: { class: 'form-input', placeholder: 'Entrez le titre de la réclamation' } }) }}
                    {{ form_errors(form.titre) }}
                </div>

                <div>
                    {{ form_label(form.description, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
                    {{ form_widget(form.description, { attr: { class: 'form-input', placeholder: 'Décrivez votre réclamation' } }) }}
                    {{ form_errors(form.description) }}
                </div>

                <div>
                    {{ form_label(form.type_reclamation, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
                    {{ form_widget(form.type_reclamation, { attr: { class: 'form-select' } }) }}
                    {{ form_errors(form.type_reclamation) }}
                </div>

                <div>
                    {{ form_label(form.user_email, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
                    {{ form_widget(form.user_email, { attr: { class: 'form-input', placeholder: 'Votre email' } }) }}
                    {{ form_errors(form.user_email) }}
                </div>

                <div>
                    {{ form_label(form.id_trottinette, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
                    {{ form_widget(form.id_trottinette, { attr: { class: 'form-input', placeholder: 'ID de la trottinette' } }) }}
                    {{ form_errors(form.id_trottinette) }}
                </div>

            </div>

            <div class="flex justify-end mt-8">
                <button type="submit" class="button button-primary">
                    <i class="fas fa-paper-plane mr-1"></i> Envoyer
                </button>
            </div>

            {{ form_end(form) }}

        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
document.addEventListener("DOMContentLoaded", function () {
    const form = document.querySelector('form');
    form.addEventListener('submit', function (e) {
        let isValid = true;

        const title = document.querySelector('#reclamation_titre');
        const description = document.querySelector('#reclamation_description');
        const email = document.querySelector('#reclamation_user_email');

        if (!title.value || title.value.length < 5) {
            isValid = false;
            alert("Le titre doit contenir au moins 5 caractères.");
        }
        if (!description.value) {
            isValid = false;
            alert("La description ne peut pas être vide.");
        }
        if (!email.value || !email.value.includes('@')) {
            isValid = false;
            alert("L'email est invalide.");
        }

        if (!isValid) {
            e.preventDefault();
        }
    });
});
</script>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/reclamation/show.html.twig -----
{% extends 'base.html.twig' %}
{% block title %}Détails Réclamation{% endblock %}

{% block body %}
    <div class="container py-4">
        <h1>Détails de la Réclamation</h1>
        <ul class="list-group my-4">
            <li class="list-group-item"><strong>ID :</strong> {{ reclamation.id }}</li>
            <li class="list-group-item"><strong>Titre :</strong> {{ reclamation.titre }}</li>
            <li class="list-group-item"><strong>Description :</strong> {{ reclamation.description }}</li>
            <li class="list-group-item"><strong>Type :</strong> {{ reclamation.typeReclamation }}</li>
            <li class="list-group-item"><strong>Email :</strong> {{ reclamation.userEmail }}</li>
            <li class="list-group-item"><strong>Trottinette :</strong> 
                {% if reclamation.trottinette %}
                    {{ reclamation.trottinette.id }}
                {% else %}
                    Non spécifiée
                {% endif %}
            </li>
            <li class="list-group-item"><strong>Date :</strong> {{ reclamation.dateCreation|date('d/m/Y H:i') }}</li>
        </ul>

        <div class="mt-4">
            <h2>Réponses</h2>
            {% if reclamation.reponses|length > 0 %}
                <div class="list-group">
                    {% for reponse in reclamation.reponses %}
                        <div class="list-group-item">
                            <div class="d-flex w-100 justify-content-between">
                                <h5 class="mb-1">
                                    {% if reponse.auteur %}
                                        {{ reponse.auteur.nom }} {{ reponse.auteur.prenom }}
                                    {% else %}
                                        Support Technique
                                    {% endif %}
                                </h5>
                                <small class="text-muted">{{ reponse.dateReponse|date('d/m/Y H:i') }}</small>
                            </div>
                            <p class="mb-1">{{ reponse.message }}</p>
                        </div>
                    {% endfor %}
                </div>
            {% else %}
                <div class="alert alert-info">
                    Aucune réponse n'a été donnée pour le moment.
                </div>
            {% endif %}
        </div>

        <div class="mt-4">
            <a href="{{ path('reclamation_edit', {'id': reclamation.id}) }}" class="btn btn-warning">Modifier</a>
            <a href="{{ path('reclamation_index') }}" class="btn btn-secondary">Retour</a>
        </div>
    </div>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/reclamation/list_reclamations.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Liste des Réclamations{% endblock %}

{% block stylesheets %}
{{ parent() }}
<link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.9/index.global.min.css" rel="stylesheet">
<style>
    .button {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0.4rem 0.75rem;
        border-radius: 0.375rem;
        font-weight: 500;
        text-align: center;
        cursor: pointer;
        transition: all 0.2s ease-in-out;
        font-size: 0.75rem;
        line-height: 1.25;
        white-space: nowrap;
        border: 1px solid transparent;
    }
    .button-warning { background-color: #f59e0b; color: white; }
    .button-warning:hover { background-color: #d97706; }
    .button-danger { background-color: #ef4444; color: white; }
    .button-danger:hover { background-color: #dc2626; }
    .button-info { background-color: #0ea5e9; color: white; }
    .button-info:hover { background-color: #0284c7; }
</style>
{% endblock %}

{% block body %}
<div class="min-h-screen bg-gray-100 p-4 md:p-6">
    <div class="container mx-auto max-w-6xl">
        <div class="bg-white rounded-lg shadow-md p-6">

            <div class="flex justify-between items-center mb-6">
                <h1 class="text-2xl font-bold text-gray-900">
                    <i class="fas fa-clipboard-list text-blue-600 mr-2"></i> Liste des Réclamations
                </h1>
                <a href="{{ path('create_reclamation') }}" class="button button-info">
                    <i class="fas fa-plus mr-1"></i> Créer une Réclamation
                </a>
            </div>

            <form method="get" action="{{ path('reclamation_list') }}" class="bg-white rounded-lg shadow p-4 mb-6">
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 items-end">
                    <div>{{ form_row(searchForm.dateDebut, { attr: { class: 'form-input' } }) }}</div>
                    <div>{{ form_row(searchForm.dateFin, { attr: { class: 'form-input' } }) }}</div>
                    <div>{{ form_row(searchForm.typeReclamation, { attr: { class: 'form-input' } }) }}</div>
                    <div>{{ form_row(searchForm.userEmail, { attr: { class: 'form-input' } }) }}</div>
                    <div>
                        <button type="submit" class="button button-primary w-full">
                            <i class="fas fa-filter mr-1.5"></i> Filtrer
                        </button>
                    </div>
                </div>
            </form>

            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Titre</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Description</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Type de réclamation</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Date de création</th>
                            <th class="px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        {% for reclamation in reclamations %}
                            <tr class="hover:bg-gray-50">
                                <td class="px-4 py-3 text-sm text-gray-900">{{ reclamation.titre }}</td>
                                <td class="px-4 py-3 text-sm text-gray-700">{{ reclamation.description }}</td>
                                <td class="px-4 py-3 text-sm text-gray-700">{{ reclamation.getTypeReclamation() }}</td>
                                <td class="px-4 py-3 text-sm text-gray-700">{{ reclamation.getDateCreation()|date('Y-m-d') }}</td>
                                <td class="px-4 py-3 text-right flex flex-wrap justify-end gap-2">
                                    <a href="{{ path('edit_reclamation_front', {'id': reclamation.id}) }}" class="button button-warning" title="Modifier">
                                        <i class="fas fa-edit mr-1"></i> Modifier
                                    </a>
                                    <a href="{{ path('delete_reclamation_front', {'id': reclamation.id}) }}"
                                       class="button button-danger"
                                       onclick="return confirm('Voulez-vous vraiment supprimer cette réclamation ?');"
                                       title="Supprimer">
                                        <i class="fas fa-trash-alt mr-1"></i> Supprimer
                                    </a>
                                    <a href="{{ path('show_reclamation', {'id': reclamation.id}) }}" class="button button-info" title="Voir">
                                        <i class="fas fa-eye mr-1"></i> Voir
                                    </a>
                                </td>
                            </tr>
                        {% else %}
                            <tr>
                                <td colspan="5" class="text-center py-12 text-gray-500">
                                    Aucune réclamation trouvée.
                                </td>
                            </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>

            <div id="reclamation-calendar" class="mt-10 bg-white rounded-lg shadow-md p-6"></div>

        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.9/index.global.min.js"></script>

{# ✅ Twig-safe preparation of calendar events #}
{% set calendarEvents = [] %}
{% for reclamation in reclamations %}
    {% set calendarEvents = calendarEvents|merge([{
        title: reclamation.titre,
        start: reclamation.dateCreation|date('Y-m-d'),
        url: path('show_reclamation', { id: reclamation.id })
    }]) %}
{% endfor %}

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const calendarEl = document.getElementById('reclamation-calendar');

        // ✅ Safe JSON injection from Twig
        const eventData = JSON.parse("{{ calendarEvents|json_encode|e('js') }}");

        const calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'dayGridMonth',
            locale: 'fr',
            firstDay: 1,
            height: 'auto',
            events: eventData,
            eventClick: function(info) {
                info.jsEvent.preventDefault();
                if (info.event.url) {
                    window.open(info.event.url, '_blank');
                }
            }
        });

        calendar.render();
    });
</script>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/reclamation/edit_response.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Modifier la Réponse{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
    .button {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0.5rem 1rem;
        border-radius: 0.375rem;
        font-weight: 500;
        text-align: center;
        cursor: pointer;
        transition: all 0.2s ease-in-out;
        border: 1px solid transparent;
        font-size: 0.875rem;
        white-space: nowrap;
    }
    .button-primary { background-color: #10b981; color: white; }
    .button-primary:hover { background-color: #059669; }
    .button-secondary { background-color: #e5e7eb; color: #374151; }
    .button-secondary:hover { background-color: #d1d5db; }
    .form-input, .form-select, textarea {
        width: 100%;
        padding: 0.5rem 0.75rem;
        border: 1px solid #d1d5db;
        border-radius: 0.375rem;
        font-size: 0.875rem;
        color: #1f2937;
        background-color: #fff;
        transition: border-color .15s ease-in-out;
    }
    .form-input:focus, .form-select:focus, textarea:focus {
        outline: none;
        border-color: #3b82f6;
        box-shadow: 0 0 0 1px #3b82f6;
    }
</style>
{% endblock %}

{% block body %}
<div class="min-h-screen bg-gray-100 p-4 md:p-6">
    <div class="container mx-auto max-w-xl">
        <div class="bg-white rounded-lg shadow-md p-6">

            <h1 class="text-2xl font-bold text-gray-900 mb-6">
                <i class="fas fa-edit text-yellow-500 mr-2"></i> Modifier la Réponse
            </h1>

            {{ form_start(form, { attr: { novalidate: 'novalidate', 'data-turbo': 'false' } }) }}

            {% if form.vars.errors|length > 0 %}
                <div class="alert alert-danger mb-4">
                    {{ form_errors(form) }}
                </div>
            {% endif %}

            <div class="space-y-4">

                <div>
                    {{ form_label(form.message, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
                    {{ form_widget(form.message, { attr: { class: 'form-input', placeholder: 'Modifier le message...' } }) }}
                    {{ form_errors(form.message) }}
                </div>

                <div>
                    {{ form_label(form.user_type, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
                    {{ form_widget(form.user_type, { attr: { class: 'form-select' } }) }}
                    {{ form_errors(form.user_type) }}
                </div>

            </div>

            <div class="flex justify-end gap-4 mt-8">
                <a href="{{ path('view_responses', {'id': response.reclamation.id}) }}" class="button button-secondary">
                    <i class="fas fa-arrow-left mr-1"></i> Annuler
                </a>
                <button type="submit" class="button button-primary">
                    <i class="fas fa-save mr-1"></i> Modifier la réponse
                </button>
            </div>

            {{ form_end(form) }}

        </div>
    </div>
</div>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/reclamation/admin_reclamations.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Gestion des Réclamations{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
    .button {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0.4rem 0.75rem;
        border-radius: 0.375rem;
        font-weight: 500;
        text-align: center;
        cursor: pointer;
        transition: all 0.2s ease-in-out;
        font-size: 0.75rem;
        line-height: 1.25;
        white-space: nowrap;
        border: 1px solid transparent;
    }
    .button-danger { background-color: #ef4444; color: white; }
    .button-danger:hover { background-color: #dc2626; }
    .button-info { background-color: #0ea5e9; color: white; }
    .button-info:hover { background-color: #0284c7; }
    .button-success { background-color: #10b981; color: white; }
    .button-success:hover { background-color: #059669; }
</style>
{% endblock %}

{% block body %}
<div class="min-h-screen bg-gray-100 p-4 md:p-6">
    <div class="container mx-auto max-w-6xl">
        <div class="bg-white rounded-lg shadow-md p-6">

            <h1 class="text-2xl font-bold text-gray-900 mb-6">
                <i class="fas fa-exclamation-circle text-blue-600 mr-2"></i> Gestion des Réclamations
            </h1>

            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Titre</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Description</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Date de création</th>
                            <th class="px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase">Actions</th>
                        </tr>
                    </thead>

                    <tbody class="bg-white divide-y divide-gray-200">
                        {% for reclamation in reclamations %}
                            <tr class="hover:bg-gray-50">
                                <td class="px-4 py-3 text-sm text-gray-900">{{ reclamation.titre }}</td>
                                <td class="px-4 py-3 text-sm text-gray-700">{{ reclamation.description }}</td>
                                <td class="px-4 py-3 text-sm text-gray-700">{{ reclamation.date_creation|date('Y-m-d') }}</td>
                                <td class="px-4 py-3 text-right flex flex-wrap justify-end gap-2">
                                    <a href="{{ path('delete_reclamation', {'id': reclamation.id}) }}" class="button button-danger" title="Supprimer">
                                        <i class="fas fa-trash-alt mr-1"></i> Supprimer
                                    </a>
                                    <a href="{{ path('add_response', {'id': reclamation.id}) }}" class="button button-info" title="Ajouter une réponse">
                                        <i class="fas fa-reply mr-1"></i> Répondre
                                    </a>
                                    <a href="{{ path('view_responses', {'id': reclamation.id}) }}" class="button button-success" title="Voir les réponses">
                                        <i class="fas fa-comments mr-1"></i> Réponses
                                    </a>
                                </td>
                            </tr>
                        {% else %}
                            <tr>
                                <td colspan="4" class="text-center py-12 text-gray-500">
                                    Aucune réclamation trouvée.
                                </td>
                            </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>

        </div>
    </div>
</div>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/reclamation/login.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Login | Trotticare Events{% endblock %}

{% block body %}
    <div class="progress-bar"></div>

    <section class="login-container">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-md-8 col-lg-6">
                    <div class="card login-card shadow fade-in">
                        <div class="login-header text-center text-white mb-4">
                            <div>
                                <h2 class="mb-0 fw-bold">Welcome Back</h2>
                                <p class="mb-0">Sign in to continue to Trotticare Events</p>
                            </div>
                        </div>
                        <div class="card-body p-4">
                            <!-- Alert for demo purposes -->
                            <div class="alert alert-info alert-dismissible fade show mb-4" role="alert">
                                <strong>Demo Account:</strong> user@example.com / password123
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>

                            <form id="loginForm" class="slide-up" style="animation-delay: 0.2s;">
                                <div class="form-floating mb-3">
                                    <input type="email" class="form-control" id="emailInput" placeholder="name@example.com" required>
                                    <label for="emailInput"><i class="fas fa-envelope me-2"></i>Email Address</label>
                                </div>
                                <div class="form-floating mb-3">
                                    <input type="password" class="form-control" id="passwordInput" placeholder="Password" required>
                                    <label for="passwordInput"><i class="fas fa-lock me-2"></i>Password</label>
                                </div>
                                <div class="d-flex justify-content-between mb-4">
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="rememberMe">
                                        <label class="form-check-label" for="rememberMe">
                                            Remember me
                                        </label>
                                    </div>
                                    <a href="{{ path('app_forgot_password_request') }}" class="font-medium text-blue-600 hover:text-blue-500 hover:underline">Mot de passe oublié ?</a>
                                </div>
                                <div class="d-grid">
                                    <button type="submit" class="btn btn-primary btn-login btn-ripple confetti-button">
                                        Sign In <i class="fas fa-sign-in-alt ms-2"></i>
                                    </button>
                                </div>
                            </form>

                            <div class="text-center my-4 position-relative">
                                <hr class="my-0">
                                <span class="position-absolute top-50 start-50 translate-middle px-3 bg-white text-muted">or sign in with</span>
                            </div>

                            <!-- Social Login -->
                            <div class="social-login mb-4 slide-up" style="animation-delay: 0.4s;">
                                <a href="#" class="facebook"><i class="fab fa-facebook-f"></i></a>
                                <a href="#" class="google"><i class="fab fa-google"></i></a>
                                <a href="#" class="apple"><i class="fab fa-apple"></i></a>
                            </div>

                            <div class="text-center slide-up" style="animation-delay: 0.6s;">
                                <p class="mb-0">Don't have an account? <a href="{{ path('signup') }}" class="text-primary fw-bold hover-underline">Sign up</a></p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/reclamation/repondre.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Répondre à la Réclamation{% endblock %}

{% block body %}
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card shadow">
                    <div class="card-header bg-primary text-white">
                        <h2 class="h4 mb-0">Répondre à la Réclamation: {{ reclamation.titre }}</h2>
                    </div>
                    <div class="card-body">
                        {{ form_start(form) }}

                        <div class="mb-3">
                            {{ form_label(form.message, 'Votre Réponse', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.message, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.message) }}
                        </div>

                        {{ form_end(form) }}
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/reclamation/add_response.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Ajouter une Réponse{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
    .button {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0.5rem 1rem;
        border-radius: 0.375rem;
        font-weight: 500;
        text-align: center;
        cursor: pointer;
        transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out;
        border: 1px solid transparent;
        line-height: 1.25;
        font-size: 0.875rem;
        white-space: nowrap;
    }
    .button-primary { background-color: #3b82f6; color: white; }
    .button-primary:hover { background-color: #2563eb; }
    .form-input {
        width: 100%;
        padding: 0.5rem 0.75rem;
        border: 1px solid #d1d5db;
        border-radius: 0.375rem;
        font-size: 0.875rem;
        color: #1f2937;
        background-color: #fff;
        transition: border-color .15s ease-in-out;
    }
    .form-input:focus {
        outline: none;
        border-color: #3b82f6;
        box-shadow: 0 0 0 1px #3b82f6;
    }
</style>
{% endblock %}

{% block body %}
<div class="min-h-screen bg-gray-100 p-4 md:p-6">
    <div class="container mx-auto max-w-xl">
        <div class="bg-white rounded-lg shadow-md p-6">

            <div class="text-center mb-6">
                <h1 class="text-2xl font-bold text-gray-900 mb-2">
                    <i class="fas fa-comment-alt text-blue-600 mr-1"></i> Ajouter une Réponse
                </h1>
                <p class="text-sm text-gray-600">
                    à la réclamation : <strong>{{ reclamation.titre }}</strong>
                </p>
            </div>

            {{ form_start(form, { attr: { novalidate: 'novalidate', 'data-turbo': 'false' } }) }}

            {% if form.vars.errors|length > 0 %}
                <div class="alert alert-danger mb-4">
                    {{ form_errors(form) }}
                </div>
            {% endif %}

            <div class="mb-6">
                {{ form_label(form.message, null, { label_attr: { class: 'font-medium text-gray-700 mb-1 block' } }) }}
                {{ form_widget(form.message, { attr: { class: 'form-input', placeholder: 'Saisissez votre réponse ici...' } }) }}
                {{ form_errors(form.message) }}
            </div>

            <div class="flex justify-end">
                <button type="submit" class="button button-primary">
                    <i class="fas fa-paper-plane mr-1"></i> Envoyer la Réponse
                </button>
            </div>

            {{ form_end(form) }}

        </div>
    </div>
</div>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/public/home/index.html.twig -----
    {% extends 'base.html.twig' %}

    {% block title %}Accueil - TrottiCare Location{% endblock %}

    {% block body %}
        {# Hero Section #}
        <section class="hero-section bg-gradient-to-r from-green-50 to-blue-50 py-16 lg:py-24"> {# Style .hero-section... #}
            <div class="container">
                <div class="hero-text-wrapper max-w-3xl mx-auto text-center"> {# Style .hero-text-wrapper... #}
                    <h1 class="hero-h1 text-4xl md:text-5xl lg:text-6xl font-bold text-gray-900 mb-6">
                        {{ heroTitle|default('Location de Trottinettes Électriques') }}
                    </h1>
                    <p class="hero-p text-lg md:text-xl text-gray-600 mb-8">
                        {{ heroSubtitle|default('Découvrez un moyen écologique et pratique de vous déplacer.') }}
                    </p>
                    {# Link to where users start renting or view scooters #}
                    <a href="#scooters-nearby" class="button button-hero inline-block">Voir les trottinettes</a> {# Style .button .button-hero #}
                </div>
            </div>
        </section>

        {# Main Content Area #}
        <main class="container main-content-area py-16 lg:py-24"> {# Style .main-content-area... #}

            {# --- Map Section --- #}
            <section id="map-section" class="map-wrapper mb-16 lg:mb-24"> {# Style .map-wrapper... #}
                <h2 class="section-title text-center">Carte des Trottinettes Disponibles</h2> {# Style .section-title... #}
                <div id="leaflet-map-container" class="map-container rounded-lg shadow-lg overflow-hidden" style="height: 450px;"> {# Style .map-container... #}
                    <div class="flex items-center justify-center h-full bg-gray-100 text-gray-500">
                        Chargement de la carte...
                    </div>
                </div>
                <p class="text-center text-sm text-gray-500 mt-4">
                    <span class="inline-block w-3 h-3 rounded-full bg-green-500 mr-1"></span> Disponible (Bonne charge)
                    <span class="inline-block w-3 h-3 rounded-full bg-yellow-500 mr-1 ml-3"></span> Disponible (Charge moyenne)
                    {# <span class="inline-block w-3 h-3 rounded-full bg-red-500 mr-1 ml-3"></span> Disponible (Charge faible) #}
                </p>
                <p class="text-center text-xs text-gray-400 mt-2">Note: Les emplacements peuvent être approximatifs.</p> {# Add disclaimer due to geocoding #}
            </section>

            {# --- Nearby Scooters Section --- #}
            <section id="scooters-nearby" class="mb-16 lg:mb-24">
                <h2 class="section-title text-center">Trottinettes à proximité</h2>
                <div class="scooter-grid grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 lg:gap-8"> {# Style .scooter-grid... #}
                    {% for scooter_data in scooters %}
                        {% include 'scooter/_scooter_card.html.twig' with {
                            'scooter_data': scooter_data,
                            'loop': loop
                         } %}
                    {% else %}
                        <p class="text-center text-gray-600 col-span-full">Aucune trottinette disponible affichée pour le moment.</p>
                    {% endfor %}
                </div>
            </section>

            {# --- Upcoming Events Section --- #}
            <section id="upcoming-events">
                 <div class="events-header flex justify-between items-center mb-8"> {# Style .events-header... #}
                    <h2 class="section-title-inline mb-0">Événements à venir</h2> {# Style .section-title-inline... #}
                    <a href="{{ path('public_event_index') }}"> {# Adjust route #}
                        <button class="button button-secondary">Voir tous les événements</button>
                    </a>
                </div>
                <div class="events-grid grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 lg:gap-8"> {# Style .events-grid... #}
                     {% for event_data in upcoming_events %}
                        {% include 'event/_event_card.html.twig' with {
                            'event_data': event_data
                        } %}
                     {% else %}
                        <p class="text-center text-gray-600 col-span-full">Aucun événement à venir programmé.</p>
                     {% endfor %}
                </div>
            </section>

        </main> {# End Main Content Area #}

    {% endblock %}

    {% block javascripts %}
        {# JavaScript for initializing the Leaflet map on this page #}
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const mapElement = document.getElementById('leaflet-map-container');
                // Check if Leaflet (L) is loaded (should be via Encore)
                if (mapElement && typeof L !== 'undefined') {
                     try {
                        // --- Initialize Map ---
                        const mapCenterLat = {{ mapCenterLat|default(48.8566) }}; // Default to Paris
                        const mapCenterLng = {{ mapCenterLng|default(2.3522) }};
                        const mapZoom = {{ mapZoom|default(12) }};
                        mapElement.innerHTML = ''; // Clear loading message
                        const map = L.map(mapElement).setView([mapCenterLat, mapCenterLng], mapZoom);

                        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OSM</a>',
                            maxZoom: 18,
                        }).addTo(map);

                        // --- Add Markers ---
                        // Controller passes 'markersJson' with lat/lng data
                        const markersData = JSON.parse('{{ markersJson|raw|default("[]") }}');

                        // Function to create custom marker HTML (ensure styles are in CSS)
                        function createCustomIconHtml(colorClass = 'marker-green') {
                            let colorCode = '#22c55e'; // Default green
                            if (colorClass === 'marker-yellow') colorCode = '#eab308';
                            if (colorClass === 'marker-red') colorCode = '#ef4444'; // Example red

                             // More robust SVG icon
                             return `<div class="custom-marker-wrapper">
                                        <svg viewBox="0 0 32 46" width="32" height="46" style="overflow: visible;">
                                          <path d="M16 0C7.163 0 0 7.163 0 16c0 8.837 16 30 16 30s16-21.163 16-30C32 7.163 24.837 0 16 0z" fill="${colorCode}" stroke="#fff" stroke-width="1"/>
                                          <circle cx="16" cy="16" r="7" fill="#fff"/>
                                          <circle cx="16" cy="16" r="4" fill="${colorCode}"/>
                                        </svg>
                                      </div>`;
                         }

                        if (Array.isArray(markersData)) {
                            const markers = [];
                            markersData.forEach(data => {
                                 // !!! Check: Only add if lat/lng are present !!!
                                 if (data && typeof data.lat === 'number' && typeof data.lng === 'number') {
                                     const customIcon = L.divIcon({
                                         className: 'custom-leaflet-div-icon', // Base class for potential styling
                                         html: createCustomIconHtml(data.color || 'marker-green'),
                                         iconSize: [32, 46], // Width/Height of the SVG container
                                         iconAnchor: [16, 46], // Point of the marker bottom-center
                                         popupAnchor: [0, -48] // Popup opening point relative to iconAnchor
                                     });

                                    const marker = L.marker([data.lat, data.lng], { icon: customIcon })
                                         .bindPopup(data.popup || 'Trottinette');
                                    markers.push(marker);
                                 }
                            });
                            // Add markers to the map
                             if (markers.length > 0) {
                                 L.layerGroup(markers).addTo(map);
                                 // Optional: Fit map bounds to markers if desired
                                 // map.fitBounds(L.featureGroup(markers).getBounds().pad(0.1));
                             } else {
                                 console.log("No valid markers to display.");
                                 mapElement.innerHTML = '<p class="text-center text-gray-500 p-4">Aucune trottinette trouvée sur la carte.</p>';
                             }
                         } else {
                            console.error("markersJson is not a valid array:", markersData);
                             mapElement.innerHTML = '<p class="text-center text-red-500 p-4">Erreur lors du chargement des données de la carte.</p>';
                        }

                     } catch (error) {
                        console.error("Failed to initialize Leaflet map:", error);
                        mapElement.innerHTML = "<p style='padding: 20px; text-align: center; color: red;'>Impossible de charger la carte.</p>";
                     }
                } else {
                    if (!mapElement) console.warn("Leaflet map container '#leaflet-map-container' not found.");
                    if (typeof L === 'undefined') console.error("Leaflet library (L) is not loaded. Check your JS imports/scripts in assets/app.js and run Encore.");
                }
            });
        </script>
    {% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/public/trottinette/index.html.twig -----
{# templates/public/trottinette/index.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Nos Trottinettes - TrottiCare{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# FontAwesome or Bootstrap Icons if used #}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        /* --- COPY/ADAPT Styles from maintenance/admin trottinette index --- */
        /* Form Input/Select Styles */
        .form-input, .form-select { appearance: none; display: block; width: 100%; padding: 0.5rem 0.75rem; font-size: 0.875rem; line-height: 1.5; color: #1f2937; background-color: #fff; background-clip: padding-box; border: 1px solid #d1d5db; border-radius: 0.375rem; transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out; }
        .form-select { background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e"); background-position: right 0.5rem center; background-repeat: no-repeat; background-size: 1.5em 1.5em; padding-right: 2.5rem; }
        .form-input:focus, .form-select:focus { outline: none; border-color: #3b82f6; box-shadow: 0 0 0 1px #3b82f6; }
        .form-input.text-sm, .form-select.text-sm { font-size: 0.75rem; padding-top: 0.375rem; padding-bottom: 0.375rem; } /* Smaller filter inputs */
        .search-input { padding-left: 2.5rem; /* Space for icon */ }

        /* Button Styles */
        .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.5rem 1rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; white-space: nowrap; }
        .button-sm { padding: 0.375rem 0.75rem; font-size: 0.75rem; }
        .button-primary { background-color: #3b82f6; color: white; border-color: #3b82f6; } .button-primary:hover { background-color: #2563eb; border-color: #1d4ed8;}
        .button-secondary { background-color: #e5e7eb; color: #374151; border-color: #d1d5db; } .button-secondary:hover { background-color: #d1d5db; border-color: #9ca3af;}
        /* ... other button colors if needed ... */
        .button-reserve { background-color: #10b981; color: white; } .button-reserve:hover { background-color: #059669; }
        .button-qr { background-color: #6366f1; color: white; } .button-qr:hover { background-color: #4f46e5; }
        .button-unavailable { background-color: #9ca3af; color: white; cursor: not-allowed; }
        .button:disabled { opacity: 0.6; cursor: not-allowed; }

        /* Scooter Card Styles (from _scooter_card.html.twig or define here) */
        .scooter-card { display: flex; flex-direction: column; background-color: #fff; border-radius: 0.5rem; box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1); overflow: hidden; border: 1px solid #e5e7eb; height: 100%; }
        .scooter-image-wrapper { position: relative; }
        .scooter-image { width: 100%; height: 160px; object-fit: cover; }
        .battery-indicator { position: absolute; top: 0.5rem; right: 0.5rem; background-color: rgba(0, 0, 0, 0.6); color: white; padding: 0.25rem 0.5rem; border-radius: 9999px; font-size: 0.7rem; font-weight: 500; }
        .scooter-card .p-4 { padding: 1rem; flex-grow: 1; display: flex; flex-direction: column; }
        .scooter-title { font-size: 1rem; font-semibold; color: #111827; margin-bottom: 0.5rem; }
        .scooter-info { font-size: 0.8rem; color: #4b5563; margin-bottom: 1rem; flex-grow: 1; }
        .scooter-info p { margin-bottom: 0.25rem; display: flex; align-items: center; gap: 0.25rem; }
        .scooter-actions { margin-top: auto; /* Pushes actions to bottom */ }

        /* Pagination Container Styles */
        .pagination-container { display: flex; flex-wrap: wrap; justify-content: space-between; align-items: center; margin-top: 1.5rem; padding-top: 1rem; border-top: 1px solid #e5e7eb; }
        .pagination-controls { display: flex; align-items: center; gap: 0.75rem; font-size: 0.875rem; color: #4b5563; margin-top: 0.5rem; }
        .pagination-controls label { margin-bottom: 0; white-space: nowrap; margin-right: 0.25rem; }
        .limit-select { padding: 0.25rem 1.75rem 0.25rem 0.5rem; font-size: 0.875rem; line-height: 1.25; height: auto; min-width: 4.5rem; background-size: 1.2em 1.2em; background-position: right 0.3rem center; border-radius: 0.375rem; border: 1px solid #d1d5db; }

        /* Icons */
        .fas { display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; -webkit-font-smoothing: antialiased; font-family: "Font Awesome 6 Free"; font-weight: 900; }
        .fa-motorcycle:before { content: "\f21c"; } .fa-qrcode:before { content: "\f029"; }
        .fa-info-circle:before { content: "\f05a"; } .fa-search:before { content: "\f002"; }
        .fa-filter:before { content: "\f0b0"; } .fa-sync-alt:before { content: "\f2f1"; }
        .me-1 { margin-right: 0.25rem; } .me-2 { margin-right: 0.5rem; }
        .fa-road:before { content: "\f018"; } /* Autonomy icon */
        /* --- END COPY/ADAPT --- */
    </style>
{% endblock %}



{% block body %}
    <div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
        <div class="container mx-auto max-w-7xl">

            <h1 class="text-3xl font-bold text-gray-900 mb-6 text-center md:text-left">
                Découvrez nos Événements
            </h1>

            {% include 'partials/_flash_messages.html.twig' ignore missing %}

            {# Filter and Sort Controls Card #}
            <div class="mb-8 p-4 bg-white rounded-lg shadow-md border border-gray-200">
                <form method="get" action="{{ path('client_event_index') }}" class="filter-form grid gap-4 items-end">

                    {# Search Input #}
                    <div class="md:col-span-2 lg:col-span-2">
                        <label for="search_id" class="block text-xs font-medium text-gray-600">Rechercher</label>
                        <div class="relative">
                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none"> <svg class="h-4 w-4 text-gray-400" ...> </svg> </div>
                            <input type="search" id="search_id" name="search" class="form-input search-input w-full text-sm" placeholder="Titre, description, lieu..." value="{{ search_term|default('') }}">
                        </div>
                    </div>

                    {# --- Sort Field Dropdown --- #}
                    <div>
                        <label for="sort_field_id" class="block text-xs font-medium text-gray-600">Trier par</label>
                        {# Use the allowed_sorts_map passed from controller #}
                        <select name="sort" id="sort_field_id" class="form-select text-sm w-full" onchange="this.form.submit()">
                            {% for label, dql_path in allowed_sorts_map %}
                                {# The VALUE is now the DQL path, the text is the user-friendly label #}
                                <option value="{{ dql_path }}" {{ dql_path == current_sort_field ? 'selected' : '' }}>
                                    {{ label }}
                                </option>
                            {% endfor %}
                        </select>
                    </div>
                    {# --- End Sort Field Dropdown --- #}

                    {# --- Sort Direction Dropdown --- #}
                    <div>
                        <label for="sort_direction_id" class="block text-xs font-medium text-gray-600">Ordre</label>
                        <select name="direction" id="sort_direction_id" class="form-select text-sm w-full" onchange="this.form.submit()">
                            <option value="asc" {{ current_direction == 'asc' ? 'selected' : '' }}>Croissant</option>
                            <option value="desc" {{ current_direction == 'desc' ? 'selected' : '' }}>Décroissant</option>
                        </select>
                    </div>
                    {# --- End Sort Direction Dropdown --- #}

                    {# --- Filter Buttons (Links) --- #}
                    <div class="flex flex-col items-start md:self-end"> {# Align to bottom on larger screens #}
                        <label class="block text-xs font-medium text-gray-600 mb-1">Filtrer Dates</label>
                        <div class="flex gap-2 flex-wrap w-full">
                            {% set filter_buttons = {'all':'Tous', 'upcoming':'À venir', 'past':'Passés'} %}
                            {% set current_filter_param = app.request.query.get('filter', 'all') %}
                            {% for key, label in filter_buttons %}
                                <a href="{{ path('client_event_index', app.request.query.all|merge({'filter': key, 'page': 1})) }}"
                                   class="button button-sm {{ current_filter_param == key ? 'button-primary' : 'button-secondary' }} flex-grow sm:flex-grow-0">
                                    {{ label }}
                                </a>
                            {% endfor %}
                        </div>
                    </div>
                    {# --- End Filter Buttons --- #}

                    {# Hidden inputs to preserve state when changing sort/direction via form submit #}
                    <input type="hidden" name="filter" value="{{ current_filter|default('all') }}">
                    <input type="hidden" name="search" value="{{ search_term|default('') }}">
                    <input type="hidden" name="limit" value="{{ currentLimit|default(12) }}">

                </form> {# End Filter/Sort Form #}
            </div>

            {# Event Grid & Pagination (No changes needed below this point) #}
            {# ... Results count ... #}
            {% if pagination is defined and pagination.getTotalItemCount > 0 %}
                <div class="text-sm text-gray-600 mb-4"> ... </div>
            {% endif %}

            {# ... Event Grid Loop ... #}
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 events-grid">
                {% if events_data is not empty %}
                    {% for event_data in events_data %}
                        {% include 'client/event/_event_card.html.twig' with event_data %}
                    {% endfor %}
                {% else %}
                    <div class="col-span-full text-center py-16 ..."> ... Aucun événement ... </div>
                {% endif %}
            </div>

            {# --- Pagination Controls Container (No changes needed) --- #}
            {% if pagination is defined and pagination.getTotalItemCount > 0 %}
                <div class="pagination-container mt-8">
                    {# ... KNP Render & Limit Selector ... #}
                </div>
            {% endif %}

        </div> {# End Container #}
    </div> {# End Page Wrapper #}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    {# --- JavaScript for Limit Selector --- #}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const selectElement = document.getElementById('itemsPerPageSelect');
            if (selectElement) {
                selectElement.addEventListener('change', function() {
                    const newLimit = this.value;
                    const currentUrl = new URL(window.location.href);
                    const params = currentUrl.searchParams;
                    params.set('limit', newLimit);
                    params.set('page', '1');
                    currentUrl.search = params.toString();
                    window.location.href = currentUrl.toString();
                });
            }
        });
    </script>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/public/events.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Événements{% endblock %}

{% block body %}
    <div class="container mt-4">
        <div class="row mb-4">
            <div class="col">
                <h1 class="display-4"><i class="fas fa-calendar-alt me-3"></i>Événements à venir</h1>
                <p class="lead">Rejoignez nos événements et aventures en trottinette électrique !</p>
            </div>
        </div>

        {% if upcomingEvents is empty %}
            <div class="alert alert-info">
                <i class="fas fa-info-circle me-2"></i>Aucun événement à venir pour le moment. Revenez plus tard !
            </div>
        {% else %}
            <div class="row g-4 mb-5">
                {% for event in upcomingEvents %}
                    <div class="col-md-6 col-lg-4">
                        <div class="card h-100">
                            <div class="card-body">
                                <h5 class="card-title mb-3">{{ event.titre }}</h5>
                                <div class="mb-3">
                                    <p class="card-text mb-2">
                                        <i class="fas fa-clock me-2 text-primary"></i>
                                        <strong>Début :</strong> {{ event.dateDebut ? event.dateDebut|date('d/m/Y H:i') : 'Non défini' }}
                                    </p>
                                    <p class="card-text mb-2">
                                        <i class="fas fa-hourglass-end me-2 text-primary"></i>
                                        <strong>Fin :</strong> {{ event.dateFin ? event.dateFin|date('d/m/Y H:i') : 'Non défini' }}
                                    </p>
                                    <p class="card-text">
                                        <i class="fas fa-map-marker-alt me-2 text-primary"></i>
                                        <strong>Lieu :</strong> {{ event.lieu ? event.lieu|enum_value : '' }}
                                    </p>
                                    {% if event.gouvernorat is defined and event.gouvernorat %}
                                        <p class="card-text">
                                            <i class="fas fa-map-marker-alt me-2 text-primary"></i>
                                            <strong>Gouvernorat:</strong> {{ event.gouvernorat|enum_value }}
                                        </p>
                                    {% endif %}
                                </div>
                                <a href="{{ path('app_public_event_show', {'id': event.id}) }}" class="btn btn-primary w-100">
                                    <i class="fas fa-info-circle me-2"></i>Voir les détails
                                </a>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            </div>
        {% endif %}

        <div class="row mb-4">
            <div class="col">
                <h2 class="display-6"><i class="fas fa-list me-3"></i>Tous les événements</h2>
            </div>
        </div>

        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Titre</th>
                                <th>Date</th>
                                <th>Lieu</th>
                                <th>Statut</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for event in allEvents %}
                                <tr>
                                    <td>{{ event.titre }}</td>
                                    <td>{{ event.dateDebut ? event.dateDebut|date('d/m/Y H:i') : 'Non défini' }}</td>
                                    <td>{{ event.lieu ? event.lieu|enum_value : '' }}</td>
                                    <td>
                                        {% if event.statut == 'A_VENIR' %}
                                            <span class="badge bg-info">À venir</span>
                                        {% elseif event.statut == 'EN_COURS' %}
                                            <span class="badge bg-success">En cours</span>
                                        {% elseif event.statut == 'TERMINE' %}
                                            <span class="badge bg-secondary">Terminé</span>
                                        {% else %}
                                            <span class="badge bg-danger">Annulé</span>
                                        {% endif %}
                                    </td>
                                    <td>
                                        <a href="{{ path('app_public_event_show', {'id': event.id}) }}" class="btn btn-sm btn-primary">
                                            <i class="fas fa-eye"></i> Détails
                                        </a>
                                    </td>
                                </tr>
                            {% else %}
                                <tr>
                                    <td colspan="5" class="text-center">Aucun événement trouvé</td>
                                </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/public/event_show.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}{{ event.titre }}{% endblock %}

{% block body %}
    <div class="container mt-4">
        <nav aria-label="breadcrumb" class="mb-4">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="{{ path('app_public_events') }}">{{ 'Événements'|trans }}</a></li>
                <li class="breadcrumb-item active" aria-current="page">{{ event.titre }}</li>
            </ol>
        </nav>

        <div class="row">
            <div class="col-lg-8">
                <div class="card mb-4">
                    <div class="card-body">
                        <h1 class="card-title display-5 mb-4">{{ event.titre }}</h1>
                        
                        <div class="event-meta mb-4">
                            <div class="row g-3">
                                <div class="col-md-6">
                                    <div class="d-flex align-items-center">
                                        <i class="fas fa-clock text-primary fa-2x me-3"></i>
                                        <div>
                                            <h6 class="mb-1">{{ 'Date de début'|trans }}</h6>
                                            <p class="mb-0">{{ event.dateDebut ? event.dateDebut|date('d/m/Y H:i') : 'Non défini' }}</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="d-flex align-items-center">
                                        <i class="fas fa-hourglass-end text-primary fa-2x me-3"></i>
                                        <div>
                                            <h6 class="mb-1">{{ 'Date de fin'|trans }}</h6>
                                            <p class="mb-0">{{ event.dateFin ? event.dateFin|date('d/m/Y H:i') : 'Non défini' }}</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="d-flex align-items-center">
                                        <i class="fas fa-map-marker-alt text-primary fa-2x me-3"></i>
                                        <div>
                                            <h6 class="mb-1">{{ 'Lieu'|trans }}</h6>
                                            <p class="mb-0">{{ event.lieu ? event.lieu|enum_value : 'Non défini' }}</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="d-flex align-items-center">
                                        <i class="fas fa-battery-three-quarters text-primary fa-2x me-3"></i>
                                        <div>
                                            <h6 class="mb-1">{{ 'Autonomie minimale de la trottinette'|trans }}</h6>
                                            <p class="mb-0">{{ event.trottinetteMinAutonomie ?? 'Not specified' }}</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="d-flex align-items-center">
                                        <i class="fas fa-users text-primary fa-2x me-3"></i>
                                        <div>
                                            <h6 class="mb-1">{{ 'Participants'|trans }}</h6>
                                            <p class="mb-0">{{ event.participations|length }} inscrits</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="d-flex align-items-center">
                                        <i class="fas fa-tag text-primary fa-2x me-3"></i>
                                        <div>
                                            <h6 class="mb-1">{{ 'Statut'|trans }}</h6>
                                            <p class="mb-0">
                                                {% if event.statut == 'A_VENIR' %}
                                                    <span class="badge bg-info">{{ 'À venir'|trans }}</span>
                                                {% elseif event.statut == 'EN_COURS' %}
                                                    <span class="badge bg-success">{{ 'En cours'|trans }}</span>
                                                {% elseif event.statut == 'TERMINE' %}
                                                    <span class="badge bg-secondary">{{ 'Terminé'|trans }}</span>
                                                {% else %}
                                                    <span class="badge bg-danger">{{ 'Annulé'|trans }}</span>
                                                {% endif %}
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="event-description">
                            <h4 class="mb-3">{{ 'Description de l\'événement'|trans }}</h4>
                            <p class="lead">{{ event.description }}</p>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-lg-4">
                <div class="card sticky-top" style="top: 2rem;">
                    <div class="card-body">
                        {% for message in app.flashes('success') %}
                            <div class="alert alert-success alert-dismissible fade show" role="alert">
                                {{ message }}
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>
                        {% endfor %}
                        {% for message in app.flashes('error') %}
                            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                                {{ message }}
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>
                        {% endfor %}
                        
                        <h5 class="card-title mb-4">{{ 'Join This Event'|trans }}</h5>
                        
                        {% if event.statut == 'A_VENIR' %}
                            <form method="post" action="{{ path('app_public_event_participate', {'id': event.id}) }}">
                                <button type="submit" class="btn btn-primary btn-lg w-100 mb-3">
                                    <i class="fas fa-user-plus me-2"></i>{{ 'Register Now'|trans }}
                                </button>
                            </form>
                        {% elseif event.statut == 'EN_COURS' %}
                            <div class="alert alert-success">
                                <i class="fas fa-info-circle me-2"></i>{{ 'This event is currently in progress!'|trans }}
                            </div>
                        {% elseif event.statut == 'TERMINE' %}
                            <div class="alert alert-secondary">
                                <i class="fas fa-info-circle me-2"></i>{{ 'This event has already ended.'|trans }}
                            </div>
                        {% else %}
                            <div class="alert alert-danger">
                                <i class="fas fa-exclamation-circle me-2"></i>{{ 'This event has been cancelled.'|trans }}
                            </div>
                        {% endif %}
                        
                        <a href="{{ path('app_public_events') }}" class="btn btn-outline-secondary w-100">
                            <i class="fas fa-arrow-left me-2"></i>{{ 'Back to Events'|trans }}
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/public/event/_delete_form.html.twig -----
<form method="post" action="{{ path('app_event_delete', {'id': event.id}) }}" onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer cet événement ?');">
    <input type="hidden" name="_token" value="{{ csrf_token('delete_event_' ~ event.id) }}">
    <button class="btn btn-danger">
        <i class="fas fa-trash-alt me-2"></i>Supprimer
    </button>
</form>


----- /Users/mac/Downloads/my_project_troti-vf/templates/public/event/_event_card.html.twig -----

{# templates/public/event/_event_card.html.twig #}
{% set event = event_data.entity %}
{% set user_status = event_data.user_participation_status|default(null) %}

<div class="event-card bg-white rounded-lg shadow-md overflow-hidden transform transition-all duration-300 hover:shadow-lg hover:-translate-y-1">
    {# Card Header with Enhanced Gradient #}
    <div class="event-card-header h-32 bg-gradient-to-br from-green-500 to-green-700 flex items-center justify-center relative">
        <div class="absolute inset-0 bg-black/10"></div>
        <h3 class="event-card-title text-2xl md:text-3xl font-bold text-white text-center px-4 relative z-10">
            {{ event.titre }}
        </h3>
    </div>

    {# Card Body #}
    <div class="p-6 event-card-body">
        {# Description with Improved Truncation #}
        <p class="event-card-description text-gray-700 mb-4 line-clamp-3 leading-relaxed">
            {{ event.description|striptags }}
        </p>

        {# Metadata Section with Consistent Icons #}
        <div class="event-card-meta space-y-2 mb-6">
            {# Date Début #}
            <div class="event-meta-item flex items-center gap-2 text-gray-600">
                <svg class="w-4 h-4 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                     xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                          d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                <span class="event-meta-text text-sm">
                    {{ event.dateDebut|date('d M Y H:i') }}
                </span>
            </div>

            {# Date Fin #}
            <div class="event-meta-item flex items-center gap-2 text-gray-600">
                <svg class="w-4 h-4 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                     xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                          d="M17 7V3m-4 4V3m-1 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                <span class="event-meta-text text-sm">
                    {{ event.dateFin|date('d M Y H:i') }}
                </span>
            </div>


            {# Durée calculée en jours et heures #}
            <div class="event-meta-item flex items-center gap-2 text-gray-600">
                <svg class="w-4 h-4 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                     xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                          d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
                </svg>
                {% if event.dateDebut and event.dateFin %}
                    {# Calculate difference in seconds #}
                    {% set diff = event.dateFin|date('U') - event.dateDebut|date('U') %}
                    {% set days  = diff // 86400 %}
                    {% set hours = (diff % 86400) // 3600 %}
                    <span class="event-meta-text text-sm">
                        Durée: {{ days }} jour{{ days > 1 ? 's' }} {{ hours }} heure{{ hours > 1 ? 's' }}
                    </span>
                {% else %}
                    <span class="event-meta-text text-sm">Durée: N/A</span>
                {% endif %}
            </div>

            {# Location #}
            <div class="event-meta-item flex items-center gap-2 text-gray-600">
                <svg class="w-4 h-4 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                     xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                          d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.828 0l-4.243-4.243a8 8 0 1111.314 0z"/>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                          d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>
                </svg>
                <span class="event-meta-text text-sm">
                    {{ event.state.label|default('Non défini') }}
                </span>
            </div>

            {# Participants #}
            <div class="event-meta-item flex items-center gap-2 text-gray-600">
                <svg class="w-4 h-4 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                     xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                          d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"/>
                </svg>
                <span class="event-meta-text text-sm">
                    {{ event.participations|length }} participant(s)
                </span>
            </div>
        </div>

        {# Footer Section #}
        <div class="flex items-center justify-between">
            {# Status Badge with Improved Styling #}
            <span class="status-badge status-{{ event.statut|lower }} px-3 py-1 text-xs font-medium uppercase tracking-wide mt-2 mb-2">
                {% if event.statut == 'A_VENIR' %}À venir
                {% elseif event.statut == 'EN_COURS' %}En cours
                {% elseif event.statut == 'TERMINE' %}Terminé
                {% elseif event.statut == 'ANNULE' %}Annulé
                {% endif %}
            </span>

            {# Action Buttons with Consistent Spacing #}
            <div class="flex gap-2 mt-2">
                <a href="{{ path('public_event_show', {'id': event.id}) }}"
                   class="button button-secondary button-small flex items-center gap-1">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                         xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.478 0-8.268-2.943-9.542-7z"/>
                    </svg>
                    Détails
                </a>

                {% if event.statut == 'A_VENIR' %}
                    {% if is_granted('IS_AUTHENTICATED_FULLY') %}
                        {% if user_status == constant('App\\Enum\\ParticipationStatus::INSCRIT') %}
                            <form action="{{ path('app_event_cancel_participation', {'id': event.id}) }}"
                                  method="post" class="d-inline-block">
                                <button type="submit"
                                        class="button button-secondary-outline button-small flex items-center gap-1"
                                        onclick="return confirm('Annuler votre participation ?');">
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                                         xmlns="http://www.w3.org/2000/svg">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                              d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                                    </svg>
                                    Annuler
                                </button>
                            </form>
                        {% elseif user_status == constant('App\\Enum\\ParticipationStatus::ANNULE') %}
                            <form action="{{ path('app_event_participate', {'id': event.id}) }}"
                                  method="post" class="d-inline-block">
                                <button type="submit"
                                        class="button button-primary button-small flex items-center gap-1">
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                                         xmlns="http://www.w3.org/2000/svg">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                              d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m-15.357-2a8.001 8.001 0 0115.357-2m0 0H15"/>
                                    </svg>
                                    Réinscrire
                                </button>
                            </form>
                        {% else %}
                            <form action="{{ path('client_event_participate', {'id': event.id}) }}"
                                  method="post" class="d-inline-block">
                                <button type="submit"
                                        class="button button-primary button-small flex items-center gap-1">
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                                         xmlns="http://www.w3.org/2000/svg">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                              d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"/>
                                    </svg>
                                    Participer
                                </button>
                            </form>
                        {% endif %}
                    {% else %}
                        <a href="{{ path('app_login') }}"
                           class="button button-secondary button-small flex items-center gap-1">
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                                 xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                      d="M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1"/>
                            </svg>
                            Connexion
                        </a>
                    {% endif %}
                {% endif %}
            </div>
        </div>
    </div>
</div>



----- /Users/mac/Downloads/my_project_troti-vf/templates/public/event/edit.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Modifier l'événement{% endblock %}

{% block body %}
    <div class="container mt-4">
        <nav aria-label="breadcrumb" class="mb-4">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="{{ path('app_event_index') }}">Événements</a></li>
                <li class="breadcrumb-item active">Modifier l'événement</li>
            </ol>
        </nav>

        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-body p-4">
                        <h1 class="card-title display-5 mb-4"><i class="fas fa-edit me-3"></i>Modifier l'événement</h1>

                        {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate'}}) }}
                            <div class="row g-4">
                                <div class="col-12">
                                    <div class="form-floating">
                                        {{ form_widget(form.titre, {'attr': {'class': 'form-control', 'placeholder': 'Titre de l\'événement'}}) }}
                                        {{ form_label(form.titre) }}
                                        {{ form_errors(form.titre) }}
                                    </div>
                                </div>

                                <div class="col-12">
                                    <div class="form-floating">
                                        {{ form_widget(form.description, {'attr': {'class': 'form-control', 'placeholder': 'Description de l\'événement', 'style': 'height: 100px'}}) }}
                                        {{ form_label(form.description) }}
                                        {{ form_errors(form.description) }}
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-floating">
                                        {{ form_widget(form.dateDebut, {'attr': {'class': 'form-control', 'placeholder': 'Date de début'}}) }}
                                        {{ form_label(form.dateDebut) }}
                                        {{ form_errors(form.dateDebut) }}
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-floating">
                                        {{ form_widget(form.dateFin, {'attr': {'class': 'form-control', 'placeholder': 'Date de fin'}}) }}
                                        {{ form_label(form.dateFin) }}
                                        {{ form_errors(form.dateFin) }}
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        {{ form_widget(form.statut, {'attr': {'class': 'form-control', 'placeholder': 'statut'}}) }}
                                        {{ form_label(form.statut) }}
                                        {{ form_errors(form.statut) }}
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        {{ form_widget(form.state, {'attr': {'class': 'form-control', 'placeholder': 'State'}, 'choice_value': 'value', 'choice_label': 'value'}) }}
                                        {{ form_label(form.state) }}
                                        {{ form_errors(form.state) }}
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-floating">
                                        {{ form_widget(form.trottinetteMinAutonomie, {'attr': {'class': 'form-control', 'placeholder': 'Autonomie minimale de la trottinette'}}) }}
                                        {{ form_label(form.trottinetteMinAutonomie) }}
                                        {{ form_errors(form.trottinetteMinAutonomie) }}
                                    </div>
                                </div>

                                <div class="col-12 d-flex justify-content-between align-items-center mt-4">
                                    <a href="{{ path('app_admin_events') }}" class="btn btn-secondary btn-lg">
                                        <i class="fas fa-arrow-left me-2"></i>Retour à la liste
                                    </a>
                                    <button type="submit" class="btn btn-primary btn-lg">
                                        <i class="fas fa-save me-2"></i>Enregistrer
                                    </button>
                                </div>
                            </div>
                        {{ form_end(form) }}
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/public/event/new.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Créer un nouvel événement{% endblock %}

{% block body %}
    <div class="container mt-4">
        <nav aria-label="breadcrumb" class="mb-4">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="{{ path('app_event_index') }}">Événements</a></li>
                <li class="breadcrumb-item active">Créer un nouvel événement</li>
            </ol>
        </nav>

        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-body p-4">
                        <h1 class="card-title display-5 mb-4">
                            <i class="fas fa-plus-circle me-3 text-primary"></i>Créer un nouvel événement
                        </h1>

                        {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate'}}) }}
                            <div class="row g-4">
                                <div class="col-12">
                                    <div class="form-floating">
                                        {{ form_widget(form.titre, {'attr': {'class': 'form-control', 'placeholder': 'Titre de l\'événement'}}) }}
                                        {{ form_label(form.titre) }}
                                        {{ form_errors(form.titre) }}
                                    </div>
                                </div>

                                <div class="col-12">
                                    <div class="form-floating">
                                        {{ form_widget(form.description, {'attr': {'class': 'form-control', 'placeholder': 'Description de l\'événement', 'style': 'height: 100px'}}) }}
                                        {{ form_label(form.description) }}
                                        {{ form_errors(form.description) }}
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-floating">
                                        {{ form_widget(form.dateDebut, {'attr': {'class': 'form-control', 'placeholder': 'Date de début'}}) }}
                                        {{ form_label(form.dateDebut) }}
                                        {{ form_errors(form.dateDebut) }}
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-floating">
                                        {{ form_widget(form.dateFin, {'attr': {'class': 'form-control', 'placeholder': 'Date de fin'}}) }}
                                        {{ form_label(form.dateFin) }}
                                        {{ form_errors(form.dateFin) }}
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-floating">
                                        {{ form_widget(form.state, {'attr': {'class': 'form-control', 'placeholder': 'State'}}) }}
                                        {{ form_label(form.state) }}
                                        {{ form_errors(form.state) }}
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-floating">
                                        {{ form_widget(form.trottinetteMinAutonomie, {'attr': {'class': 'form-control', 'placeholder': 'Autonomie minimale de la trottinette'}}) }}
                                        {{ form_label(form.trottinetteMinAutonomie) }}
                                        {{ form_errors(form.trottinetteMinAutonomie) }}
                                    </div>
                                </div>

                                <div class="col-12 d-flex justify-content-between align-items-center mt-4">
                                    <a href="{{ path('app_admin_events') }}" class="btn btn-secondary btn-lg">
                                        <i class="fas fa-arrow-left me-2"></i>Retour à la liste
                                    </a>
                                    <button type="submit" class="btn btn-primary btn-lg">
                                        <i class="fas fa-plus me-2"></i>Créer l'événement
                                    </button>
                                </div>
                            </div>
                        {{ form_end(form) }}
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/public/event/index.html.twig -----
{# templates/public/event/index.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Événements - TrottiCare{% endblock %}

{% block body %}
    <div data-lov-id="src/pages/Events.tsx:76:4" class="min-h-screen bg-gray-50 page-content"> {# Added page-content for flex layout #}
        {# Header is included in base.html.twig #}

        <div data-lov-id="src/pages/Events.tsx:78:6" class="container mx-auto px-4 py-16"> {# Use container class from CSS #}
            <h2 data-lov-id="src/pages/Events.tsx:79:8" class="text-3xl font-bold text-gray-900 mb-8 section-title"> {# Use classes from CSS #}
                Événements
            </h2>

            {# Filter and Search Controls #}
            <div data-lov-id="src/pages/Events.tsx:81:8" class="mb-6 flex flex-col md:flex-row gap-4 items-start md:items-center event-filters"> {# Added custom class #}
                {# Search Form #}
                <form method="get" action="{{ path('public_event_index') }}" class="flex-grow max-w-md"> {# Use flex-grow #}
                    <input type="hidden" name="filter" value="{{ current_filter }}"> {# Keep current filter when searching #}
                    <input data-lov-id="src/pages/Events.tsx:82:10"
                           type="search" {# Use search type #}
                           name="search" {# Add name attribute #}
                           class="search-input" {# Use custom class for styling #}
                           placeholder="Rechercher des événements..."
                           value="{{ search_term|default('') }}">
                    {# Consider adding a submit button or trigger search on input change via JS #}
                    {# <button type="submit" class="button button-secondary">Rechercher</button> #}
                </form>

                {# Filter Buttons (Links that reload the page with query params) #}
                <div data-lov-id="src/pages/Events.tsx:89:10" class="flex gap-2 filter-buttons"> {# Added custom class #}
                    <a href="{{ path('public_event_index', {'filter': 'all', 'search': search_term}) }}"
                       class="button {{ current_filter == 'all' ? 'button-primary' : 'button-secondary' }}"> {# Active state styling #}
                        Tous
                    </a>
                    <a href="{{ path('public_event_index', {'filter': 'upcoming', 'search': search_term}) }}"
                       class="button {{ current_filter == 'upcoming' ? 'button-primary' : 'button-secondary' }}">
                        À venir
                    </a>
                    <a href="{{ path('public_event_index', {'filter': 'past', 'search': search_term}) }}"
                       class="button {{ current_filter == 'past' ? 'button-primary' : 'button-secondary' }}">
                        Passés
                    </a>
                </div>
            </div>

            {# Event Grid #}
            <div data-lov-id="src/pages/Events.tsx:111:8" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 events-grid"> {# Use classes from CSS #}
                {% for event_data in events_data %}
                    {# Pass the whole event_data array to the partial #}
                    {% include 'public/event/_event_card.html.twig' with { 'event_data': event_data } %}
                {% else %}
                    <div class="col-span-full text-center py-10 text-gray-500"> {# Use col-span-full #}
                        <p><i class="fas fa-info-circle fa-2x mb-3"></i></p> {# Example icon #}
                        <p>Aucun événement trouvé correspondant à vos critères.</p>
                    </div>
                {% endfor %}
            </div>

        </div> {# End container #}
    </div> {# End page-content wrapper #}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    {# Optional JS for live search/filter without page reload (more complex) #}
    <script>
        // Example: Basic active state toggling for filter buttons (if not using page reload)
        /*
        document.querySelectorAll('.filter-buttons .button').forEach(button => {
            button.addEventListener('click', function(e) {
                 // Remove active class from all
                 document.querySelectorAll('.filter-buttons .button').forEach(btn => {
                     btn.classList.remove('button-primary');
                     btn.classList.add('button-secondary');
                 });
                 // Add active class to clicked button
                 this.classList.remove('button-secondary');
                 this.classList.add('button-primary');
                 // Add AJAX call or form submission logic here
                 // e.preventDefault(); // Prevent link navigation if using AJAX
            });
        });
        */
    </script>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/public/event/_form.html.twig -----
// ...existing code...
{{ form_row(form.gouvernorat, {
    'label': 'Gouvernorat',
    'attr': {'class': 'form-select'}
}) }}
// ...existing code...



----- /Users/mac/Downloads/my_project_troti-vf/templates/public/event/show.html.twig -----
{# templates/public/event/show.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}{{ event.titre }} - Détails Événement{% endblock %}

{% block body %}
    {# Use same overall wrapper class if needed, or just rely on base layout #}
    <div data-lov-id="src/pages/EventDetails.tsx:76:4" class="min-h-screen bg-gray-50 page-content">
        {# Header is included in base.html.twig #}

        <div data-lov-id="src/pages/EventDetails.tsx:78:6" class="container mx-auto px-4 py-16"> {# Use container class from CSS #}

            {# Back Link #}
            <div data-lov-id="src/pages/EventDetails.tsx:79:8" class="mb-4">
                {# Ensure public_event_index route exists #}
                <a data-lov-id="src/pages/EventDetails.tsx:80:10" class="flex items-center text-blue-600 hover:text-blue-800 back-link" href="{{ path('public_event_index') }}"> {# Added custom class #}
                    {# Chevron Left Icon SVG #}
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-left h-4 w-4"><path d="m15 18-6-6 6-6"></path></svg>
                    <span data-lov-id="src/pages/EventDetails.tsx:82:12">Retour aux événements</span>
                </a>
            </div>

            {# Main Event Card #}
            <div data-lov-id="src/pages/EventDetails.tsx:86:8" class="bg-white rounded-lg shadow-md overflow-hidden">

                {# Card Header #}
                <div data-lov-id="src/pages/EventDetails.tsx:87:10" class="h-48 bg-gradient-to-r from-green-400 to-green-600 flex items-center justify-center p-6 event-detail-header"> {# Added custom class #}
                    <h2 data-lov-id="src/pages/EventDetails.tsx:88:12" class="text-4xl font-bold text-white text-center">
                        {{ event.titre }}
                    </h2>
                </div>

                {# Card Body #}
                <div data-lov-id="src/pages/EventDetails.tsx:91:10" class="p-8 event-detail-body"> {# Added custom class #}

                    {# Metadata Row #}
                    <div data-lov-id="src/pages/EventDetails.tsx:92:12" class="flex flex-col md:flex-row md:items-center justify-between gap-4 mb-8">
                        {# Left Side Metadata #}
                        <div data-lov-id="src/pages/EventDetails.tsx:93:14" class="d-flex gap-3 ">
                            {# Date #}
                            <div data-lov-id="src/pages/EventDetails.tsx:94:16" class="flex items-center gap-3 event-meta-item"> {# Use consistent classes #}
                                {# Calendar Icon SVG #}
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-5 w-5 text-gray-500"><path d="M8 2v4"></path><path d="M16 2v4"></path><rect width="18" height="18" x="3" y="4" rx="2"></rect><path d="M3 10h18"></path></svg>
                                <span data-lov-id="src/pages/EventDetails.tsx:96:18" class="event-meta-text">{{ event.dateDebut ? event.dateDebut|date('d M Y \\à H:i') : 'N/A' }}</span> {# Use meta text class #}
                            </div>
                            {# Duration #}
                            {% if duration %}
                                <div data-lov-id="src/pages/EventDetails.tsx:99:16" class="flex items-center gap-3 event-meta-item">
                                    {# Clock Icon SVG #}
                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-5 w-5 text-gray-500"><circle cx="12" cy="12" r="10"></circle><polyline points="12 6 12 12 16 14"></polyline></svg>
                                    <span data-lov-id="src/pages/EventDetails.tsx:101:18" class="event-meta-text">Durée: {{ duration }}</span>
                                </div>
                            {% endif %}
                            {# Location #}
                            <div data-lov-id="src/pages/EventDetails.tsx:109:16" class="flex items-center gap-2 event-meta-item">
                                {# MapPin Icon SVG #}
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-5 w-5 text-gray-500"><path d="M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0"></path><circle cx="12" cy="10" r="3"></circle></svg>
                                {# Use the state (Gouvernorat) property #}
                                <span data-lov-id="src/pages/EventDetails.tsx:111:18" class="event-meta-text">{{ event.state ? event.state.label : 'Non défini' }}</span>
                            </div>
                            {# Participants #}
                            <div data-lov-id="src/pages/EventDetails.tsx:114:16" class="flex items-center gap-2 event-meta-item">
                                {# Users Icon SVG #}
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-5 w-5 text-gray-500"><path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"></path><circle cx="9" cy="7" r="4"></circle><path d="M22 21v-2a4 4 0 0 0-3-3.87"></path><path d="M16 3.13a4 4 0 0 1 0 7.75"></path></svg>
                                <span data-lov-id="src/pages/EventDetails.tsx:116:18" class="event-meta-text">{{ event.participations|length }} participant(s)</span>
                            </div>
                        </div>
                    <br/>
                        {# Right Side Status Badge #}
                        <div data-lov-id="src/pages/EventDetails.tsx:120:14">
                        <span data-lov-id="src/pages/EventDetails.tsx:121:16" class="status-badge status-{{ event.statut|lower }} mt-3 mb-3"> {# Dynamic class #}
                            {% if event.statut == 'A_VENIR' %}À venir
                            {% elseif event.statut == 'EN_COURS' %}En cours
                            {% elseif event.statut == 'TERMINE' %}Terminé
                            {% elseif event.statut == 'ANNULE' %}Annulé
                            {% else %}{{ event.statut|default('') }}{% endif %}
                        </span>
                        </div>
                        <br/>

                    </div>

                    {# Content Sections #}
                    <div data-lov-id="src/pages/EventDetails.tsx:132:12" class="space-y-6"> {# Use space-y utility #}
                        {# Description #}
                        <div data-lov-id="src/pages/EventDetails.tsx:133:14">
                            <h3 data-lov-id="src/pages/EventDetails.tsx:134:16" class="text-xl font-semibold mb-3 mt-3">Description</h3>
                            <p data-lov-id="src/pages/EventDetails.tsx:135:16" class="text-gray-700 event-description-full"> {# Added custom class #}
                                {{ event.description|nl2br }} {# Use nl2br filter for line breaks #}
                            </p>
                        </div>

                        {# Additional Info (Hardcoded based on example) #}
                        <div data-lov-id="src/pages/EventDetails.tsx:138:14">
                            <h3 data-lov-id="src/pages/EventDetails.tsx:139:16" class="text-xl font-semibold mb-3">Informations Supplémentaires</h3>
                            <ul data-lov-id="src/pages/EventDetails.tsx:140:16" class="list-disc list-inside space-y-2 text-gray-700">
                                {# Display min autonomy from entity if available, else static text #}
                                <li data-lov-id="src/pages/EventDetails.tsx:141:18">
                                    Autonomie minimale requise:
                                    {% if event.trottinetteMinAutonomie is not null and event.trottinetteMinAutonomie > 0 %}
                                        {{ event.trottinetteMinAutonomie }} km
                                    {% else %}
                                        Aucune spécifiée
                                    {% endif %}
                                </li>
                                {# Static info from example - these are not in the DB #}
                                <li data-lov-id="src/pages/EventDetails.tsx:142:18">Tarifs: 10 TND par personne (Exemple)</li>
                                <li data-lov-id="src/pages/EventDetails.tsx:143:18">Équipement de sécurité fourni</li>
                                <li data-lov-id="src/pages/EventDetails.tsx:144:18">Groupe limité à 20 participants maximum (Exemple)</li>
                            </ul>
                        </div>

                        {# Participation Button Section #}
                        <div data-lov-id="src/pages/EventDetails.tsx:149:16" class="pt-4">
                            {% if is_granted('IS_AUTHENTICATED_FULLY') %}
                                {% if event.statut == 'A_VENIR' %}

                                    {# ---> START OF CHANGE <--- #}
                                    {% if user_participation_status == constant('App\\Enum\\ParticipationStatus::INSCRIT') %}
                                        {# User IS participating - Show "Already Participating" and Download Button #}
                                        <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 rounded-md" role="alert">
                                            <p class="font-bold flex items-center">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                                                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                                                </svg>
                                                Vous participez déjà !
                                            </p>
                                            <p class="text-sm mt-1">Vous êtes bien inscrit(e) à cet événement.</p>
                                        </div>
                                        <div class="mt-4">
                                            {# Ensure the 'participation' variable is passed from the controller if needed for the route #}
                                            <a href="{{ path('public_event_download_ticket', {'id': event.id}) }}"
                                               target="_blank" {# Open PDF in new tab #}
                                               class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                                                {# Example Icon (Download) #}
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                                    <path stroke-linecap="round" stroke-linejoin="round" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
                                                </svg>
                                                Télécharger votre billet (PDF)
                                            </a>
                                        </div>


                                    {% elseif user_participation_status == constant('App\\Enum\\ParticipationStatus::ANNULE') %}
                                        {# Cancelled - show Re-participate button #}
                                        <form action="{{ path('app_event_participate', {id: event.id}) }}" method="post" class="d-inline-block me-2">
                                            <button type="submit" class="button button-primary">Réinscrire</button>
                                            <span class="badge bg-secondary ms-2">Participation annulée</span>
                                        </form>
                                    {% else %}
                                        {# Not participated yet - show Participate button #}
                                        <form action="{{ path('app_event_participate', {id: event.id}) }}" method="post" class="d-inline-block me-2">
                                            <button type="submit" class="button button-primary button-large"> {# Larger button #}
                                                Participer à cet événement
                                            </button>
                                        </form>
                                    {% endif %}
                                {% else %}
                                    {# Event not upcoming (in progress, past, cancelled) #}
                                    <button class="button button-primary button-large" disabled>
                                        {% if event.statut == 'EN_COURS' %}Événement en cours
                                        {% elseif event.statut == 'TERMINE' %}Événement terminé
                                        {% elseif event.statut == 'ANNULE' %}Événement annulé
                                        {% else %}Participation non disponible{% endif %}
                                    </button>
                                {% endif %}
                            {% else %}
                                {# User not logged in #}
                                <button data-lov-id="src/pages/EventDetails.tsx:150:18" class="button button-primary button-large" disabled>
                                    Participer à cet événement
                                </button>
                                <p data-lov-id="src/pages/EventDetails.tsx:157:28" class="text-sm text-gray-500 mt-2">
                                    <a href="{{ path('app_login') }}" class="text-blue-600 hover:underline">Connectez-vous</a> pour participer.
                                </p>
                            {% endif %}
                        </div>
                    </div>

                    {# Participants List Section #}
                    <div data-lov-id="src/pages/EventDetails.tsx:162:12" class="mt-12">
                        <h3 data-lov-id="src/pages/EventDetails.tsx:163:14" class="text-xl font-semibold mb-4">
                            Liste des participants ({{ event.participations.count }})
                        </h3>
                        {% if event.participations is not empty %}
                            <ul class="list-group"> {# Example list styling #}
                                {% for participation in event.participations %}
                                    {# Only show inscribed participants publicly? Or all? Decide here. #}
                                    {% if participation.statut == constant('App\\Enum\\ParticipationStatus::INSCRIT') %}
                                        <li class="list-group-item">
                                            {% if participation.utilisateur %}
                                                {{ participation.utilisateur.prenom }} {{ participation.utilisateur.nom | slice(0, 1) }}. {# Show initial for privacy #}
                                            {% else %}
                                                Participant anonyme
                                            {% endif %}
                                        </li>
                                    {% endif %}
                                {% endfor %}
                            </ul>
                        {% else %}
                            <p data-lov-id="src/pages/EventDetails.tsx:184:16" class="text-gray-500">Aucun participant inscrit pour le moment.</p>
                        {% endif %}
                    </div>

                </div> {# End Card Body #}
            </div> {# End Main Card #}
        </div> {# End Container #}
    </div> {# End page wrapper #}
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/public/event/ticket_pdf.html.twig -----
{# templates/public/event/ticket_pdf.html.twig #}
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <title>Billet pour {{ event.titre }}</title>
    <style>
        body {
            font-family: DejaVu Sans, sans-serif; /* Use a font supporting UTF-8 characters well in wkhtmltopdf */
            font-size: 12px;
            line-height: 1.4;
            color: #333;
            margin: 0;
            padding: 0;
        }
        .ticket-container {
            width: 90%;
            max-width: 600px; /* Adjust as needed */
            margin: 20px auto;
            border: 1px solid #ccc;
            border-radius: 8px;
            padding: 25px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            background-color: #fff;
        }
        .ticket-header {
            text-align: center;
            margin-bottom: 25px;
            border-bottom: 1px dashed #ccc;
            padding-bottom: 15px;
        }
        .ticket-header h1 {
            margin: 0 0 5px 0;
            font-size: 20px;
            color: #0056b3; /* Example primary color */
        }
        .ticket-header p {
            margin: 0;
            font-size: 14px;
            color: #555;
        }

        .ticket-section {
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px dashed #eee;
        }
        .ticket-section:last-child {
            border-bottom: none;
            margin-bottom: 0;
            padding-bottom: 0;
        }

        .ticket-section h2 {
            font-size: 16px;
            color: #333;
            margin-top: 0;
            margin-bottom: 10px;
            border-bottom: 1px solid #eee;
            padding-bottom: 5px;
        }

        .details-list dt {
            font-weight: bold;
            color: #444;
            width: 120px; /* Adjust label width */
            float: left;
            clear: left;
            margin-bottom: 5px;
        }
        .details-list dd {
            margin-left: 130px; /* Should be > dt width */
            margin-bottom: 5px;
            color: #555;
        }
        /* Clearfix for the float */
        .details-list::after {
            content: "";
            display: table;
            clear: both;
        }

        .qr-code-section {
            text-align: center;
            margin-top: 20px;
        }
        .qr-code-section img {
            display: block;
            margin: 10px auto;
            max-width: 150px; /* Match size from controller */
            height: auto;
            border: 1px solid #eee; /* Optional border */
            padding: 5px;
        }

        .ticket-footer {
            margin-top: 25px;
            text-align: center;
            font-size: 11px;
            color: #888;
        }

    </style>
</head>
<body>
<div class="ticket-container">

    <div class="ticket-header">
        <h1>{{ event.titre }}</h1>
        <p>Votre Billet Électronique</p>
    </div>

    <div class="ticket-section event-details">
        <h2>Détails de l'Événement</h2>
        <dl class="details-list">
            <dt>Date Début:</dt>
            <dd>{{ event.dateDebut ? event.dateDebut|date('d/m/Y H:i') : 'N/A' }}</dd>

            <dt>Date Fin:</dt>
            <dd>{{ event.dateFin ? event.dateFin|date('d/m/Y H:i') : 'N/A' }}</dd>

            <dt>Lieu:</dt>
            <dd>{{ event.state ? event.state.label : (event.state ? event.state.value : 'Non défini') }}</dd>
        </dl>
    </div>

    <div class="ticket-section participant-details">
        <h2>Informations Participant</h2>
        <dl class="details-list">
            <dt>Nom:</dt>
            <dd>{{ user.fullName }}</dd> {# Assuming fullName method exists #}

            <dt>Email:</dt>
            <dd>{{ user.email }}</dd> {# Use email or another identifier #}

            <dt>N° Billet:</dt>
            <dd><strong>EVT-{{ event.id }}-{{ participation.id }}</strong></dd> {# Unique ticket ID #}
        </dl>
    </div>

    <div class="ticket-section qr-code-section">
        <h2>Votre Code QR</h2>
        <p style="font-size: 11px; color: #666;">Présentez ce code à l'entrée de l'événement.</p>
        {# Embed the base64 encoded QR code image #}
        {# Use the 'raw' filter because the string contains special characters #}
        <img src="{{ qrCodeBase64 | raw }}" alt="QR Code Billet">
    </div>

    <div class="ticket-footer">
        Merci de votre participation ! - TrottiCare Events
    </div>

</div>
</body>
</html>


----- /Users/mac/Downloads/my_project_troti-vf/templates/public/event/participants.html.twig -----
{% extends 'base.html.twig' %} {# Or your admin base template if different #}

{% block title %}Participants - {{ event.titre }}{% endblock %}

{% block body %}
    <div class="container mt-4">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h1 class="h3">Participants pour : <span class="fw-normal">{{ event.titre }}</span></h1>
            {# Adjust the back link if needed based on where admins/partners view events #}
            <a href="{{ path(app.user and is_granted('ROLE_ADMIN') ? 'app_admin_events' : 'app_admin_events') }}" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left"></i> Retour aux événements
            </a>
        </div>

        <div class="card shadow-sm">
            <div class="card-header d-flex justify-content-between align-items-center">
                <span><i class="bi bi-people-fill me-2"></i>Liste des Participants</span>
                <span class="badge bg-primary rounded-pill">{{ participants|length }}</span>
            </div>
            <div class="card-body p-0"> {# Remove padding for full-width table #}
                {% if participants is not empty %}
                    <div class="table-responsive"> {# Add responsiveness #}
                        <table class="table table-striped table-hover mb-0"> {# Remove bottom margin #}
                            <thead class="table-light">
                            <tr>
                                <th scope="col">Nom Complet</th>
                                <th scope="col">Email</th>
                                <th scope="col">Téléphone</th>
                                <th scope="col">Date d'Inscription</th>
                                <th scope="col">Statut</th> {# Added Status Column #}
                            </tr>
                            </thead>
                            <tbody>
                            {# Use a more descriptive loop variable name like 'participation' #}
                            {% for participation in participants %}
                                <tr>
                                    <td>
                                        {# Access the user THROUGH the participation object #}
                                        {# Use null-safe operator (?.) in case utilisateur is null #}
                                        {# Or use an if check #}
                                        {% if participation.utilisateur %}
                                            {{ participation.utilisateur.fullName }} {# Use the helper method #}
                                            {# Or: {{ participation.utilisateur.prenom }} {{ participation.utilisateur.nom }} #}
                                        {% else %}
                                            <span class="text-muted fst-italic">Utilisateur Supprimé</span>
                                        {% endif %}
                                    </td>
                                    <td>
                                        {# Access the user's email #}
                                        {{ participation.utilisateur.email ?? '-' }} {# Null coalescing operator #}
                                    </td>
                                    <td>
                                        {# Access the user's telephone #}
                                        {{ participation.utilisateur.telephone ?? '-' }}
                                    </td>
                                    <td>
                                        {{ participation.dateInscription ? participation.dateInscription|date('d/m/Y H:i') : 'N/A' }}
                                    </td>
                                    <td>
                                        {# Display participation status #}
                                        {% if participation.statut == constant('App\\Enum\\ParticipationStatus::INSCRIT') %} {# <--- CORRECTED HERE #}
                                            <span class="badge bg-success">{{ participation.statut.value|replace({'_': ' '})|capitalize }}</span>
                                        {% elseif participation.statut == constant('App\\Enum\\ParticipationStatus::ANNULE') %} {# <--- CORRECTED HERE #}
                                            <span class="badge bg-danger">{{ participation.statut.value|replace({'_': ' '})|capitalize }}</span>
                                        {% else %}
                                            <span class="badge bg-secondary">{{ participation.statut ? participation.statut.value|replace({'_': ' '})|capitalize : 'Inconnu' }}</span>
                                        {% endif %}
                                    </td>
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>
                    </div>
                {% else %}
                    <div class="card-body"> {# Add padding back if table is empty #}
                        <p class="text-center text-muted mb-0">Aucun participant inscrit pour cet événement.</p>
                    </div>
                {% endif %}
            </div>
            {# Optional: Add Export to PDF/CSV button here later #}
            {# <div class="card-footer text-end">
             <a href="#" class="btn btn-sm btn-primary disabled">Exporter PDF</a>
         </div> #}
        </div>
    </div>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/scooter/_scooter_card.html.twig -----
{# templates/scooter/_scooter_card.html.twig #}
{# Expects a 'scooter_data' variable (array with 'entity', 'distanceString', 'pricePerMinute', 'image_url') #}
{% set scooter = scooter_data.entity %} {# Extract the entity for easier access #}

<div class="scooter-card">
    <div class="scooter-image-wrapper">
        {# Use a consistent placeholder or implement logic for specific images #}
        <img class="scooter-image" src="{{ scooter_data.image_url|default(asset('images/electric-scooter.jpg')) }}" alt="{{ scooter.modele|default('Trottinette') }}">
        <div class="battery-indicator">🔋 {{ scooter.batterie|default('N/A') }}%</div>
    </div>
    <h3 class="scooter-title">{{ scooter.modele|default('Trottinette Électrique') }}</h3>
    <div class="scooter-info">
        <p>📍 {{ scooter_data.distanceString|default(scooter.localisation)|default('Emplacement inconnu') }}</p>
        {# Autonomy - ADDED HERE #}
        <p class="text-sm text-gray-600 flex items-center gap-1 mb-1">
            <i class="fas fa-road text-blue-500 text-xs w-4 text-center"></i> {# Example Icon #}
            <span>{{ scooter.autonomie|default('N/A') }}</span> {# Display autonomy #}
        </p>
        <p>💶 {{ scooter_data.pricePerMinute|default('N/A') }}</p> {# Ensure price format is correct, e.g., TND/min #}
    </div>

    {# --- Button Logic --- #}
    {% set is_available = scooter.etat is defined and scooter.etat.value == 'DISPONIBLE' %} {# Check Enum value #}
    {% set can_rent = is_granted('ROLE_USER') %} {# Check if user is logged in and has client role #}
    {% set is_logged_in = is_granted('IS_AUTHENTICATED_FULLY') %}

    <div class="scooter-actions mt-auto space-y-2"> {# Use space-y-2 for spacing #}
        {% if is_available %}
            {# --- Reserve Button --- #}
            {% if can_rent %}
                {# User is logged in as client - Link to reservation page #}
                {# Ensure 'client_reservation_new' route exists and takes 'trottinetteId' #}
                <a href="{{ path('reservation_new', {'trottinetteId': scooter.id}) }}" class="button button-reserve w-full">
                    Réserver
                </a>
            {% elseif is_logged_in %}
                {# Logged in, but not a client (e.g., Admin, Partenaire) - Disable #}
                <button class="button button-reserve w-full" disabled title="Seuls les clients peuvent réserver">
                    Réserver
                </button>
            {% else %}
                {# Not logged in - Link to login page #}
                <a href="{{ path('app_login') }}" class="button button-reserve w-full">
                    Se connecter pour Réserver
                </a>
            {% endif %}

            {# --- QR Code Button --- #}
            {% if can_rent %}
                {# User is logged in as client - Link to QR scan page #}
                {# Ensure 'client_qr_scan' route exists #}
                <a href="{{ path('client_qr_scan', {'scooterId': scooter.id}) }}" {# Pass ID if scanner needs it #}
                   class="button button-qr w-full">
                    <i class="fas fa-qrcode me-1"></i> Louer via QR Code
                </a>
            {% elseif is_logged_in %}
                {# Logged in, but not a client - Disable #}
                <button class="button button-qr w-full" disabled title="Seuls les clients peuvent louer via QR">
                    <i class="fas fa-qrcode me-1"></i> Louer via QR Code
                </button>
            {% else %}
                {# Not logged in - Link to login page #}
                <a href="{{ path('app_login') }}" class="button button-qr w-full">
                    <i class="fas fa-qrcode me-1"></i> Se connecter pour Louer
                </a>
            {% endif %}

        {% else %}
            {# Scooter not available - Show unavailable status #}
            <button class="button button-unavailable w-full" disabled>
                {{ scooter.etat ? scooter.etat.value|replace({'_': ' '})|capitalize : 'Indisponible' }}
            </button>
            {# Optionally hide the QR code button entirely when unavailable #}
            <button class="button button-qr w-full" disabled>
                <i class="fas fa-qrcode me-1"></i> Louer via QR Code
            </button>
        {% endif %}
    </div>
    {# --- End Button Logic --- #}
</div>


----- /Users/mac/Downloads/my_project_troti-vf/templates/partenaire/dashboard/index.html.twig -----
{# templates/partenaire/dashboard/index.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Tableau de Bord Partenaire - TrottiCare{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# Optional: Add FontAwesome if not globally included #}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        .dashboard-card { transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out; height: 100%; }
        .dashboard-card:hover { transform: translateY(-4px); box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.08), 0 4px 6px -4px rgba(0, 0, 0, 0.08); }
        .dashboard-card .card-body { display: flex; flex-direction: column; }
        .dashboard-card .mt-auto { margin-top: auto; } /* Push actions to bottom */
    </style>
{% endblock %}


{% block body %}
    <div class="container mx-auto px-4 py-8 md:py-12 page-content">

        {# ==== HEADER ==== #}
        <header class="mb-8">
            <h1 class="text-3xl font-bold text-gray-900 mb-1">Tableau de Bord Partenaire</h1>
            <p class="text-lg text-gray-600">Bienvenue, {{ partenaire.prenom|default('Partenaire') }} ! Gérez vos ressources.</p>
            {% include 'partials/_flash_messages.html.twig' %}
        </header>

        {# ==== STATS ==== #}
        <div class="row g-4 mb-6">
            <div class="col-md-4">
                <div class="card shadow-sm border-start border-primary border-4 h-100">
                    <div class="card-body d-flex align-items-center">
                        <i class="fas fa-motorcycle fa-3x text-primary me-4"></i>
                        <div>
                            <div class="text-muted text-xs text-uppercase mb-1">Mes Trottinettes</div>
                            <div class="h4 mb-0 font-bold text-gray-800">{{ trottinettes_count|default('0') }}</div>
                        </div>
                    </div>
                </div>
            </div>
            {# Add more relevant stats like 'Events Organized' or 'Active Maintenances' #}
            {# <div class="col-md-4">...</div> #}
        </div>


        {# ==== QUICK ACTIONS ==== #}
        <h2 class="text-2xl font-semibold text-gray-800 mb-4">Actions Rapides</h2>
        <div class="row g-4">

            {# Manage Scooters Card #}
            <div class="col-md-6 col-lg-4 d-flex">
                <a href="{{ path('partenaire_trottinette_index') }}" class="dashboard-card-link w-100"> {# Adjust route #}
                    <div class="card shadow-sm dashboard-card">
                        <div class="card-body text-center">
                            <i class="fas fa-motorcycle fa-3x text-primary mb-3"></i>
                            <h5 class="card-title">Gérer mes Trottinettes</h5>
                            <p class="card-text text-sm text-gray-600">Voir, ajouter ou modifier les trottinettes de votre flotte.</p>
                            <div class="mt-auto">
                                <span class="button button-secondary button-small">Gérer</span>
                            </div>
                        </div>
                    </div>
                </a>
            </div>

            {# Manage Events Card #}
            <div class="col-md-6 col-lg-4 d-flex">
                <a href="{{ path('partenaire_event_index') }}" class="dashboard-card-link w-100"> {# Adjust route #}
                    <div class="card shadow-sm dashboard-card">
                        <div class="card-body text-center">
                            <i class="fas fa-calendar-alt fa-3x text-info mb-3"></i>
                            <h5 class="card-title">Gérer mes Événements</h5>
                            <p class="card-text text-sm text-gray-600">Créer de nouveaux événements ou voir les participations.</p>
                            <div class="mt-auto">
                                <span class="button button-secondary button-small">Gérer</span>
                            </div>
                        </div>
                    </div>
                </a>
            </div>

            {# Maintenance Card #}
            <div class="col-md-6 col-lg-4 d-flex">
                <a href="{{ path('partenaire_maintenance_index') }}" class="dashboard-card-link w-100"> {# Adjust route #}
                    <div class="card shadow-sm dashboard-card">
                        <div class="card-body text-center">
                            <i class="fas fa-tools fa-3x text-warning mb-3"></i>
                            <h5 class="card-title">Suivi Maintenance</h5>
                            <p class="card-text text-sm text-gray-600">Consulter l'état des maintenances pour vos trottinettes.</p>
                            <div class="mt-auto">
                                <span class="button button-secondary button-small">Consulter</span>
                            </div>
                        </div>
                    </div>
                </a>
            </div>

            {# Link to Profile #}
            <div class="col-md-6 col-lg-4 d-flex">
                <a href="{{ path('app_client_profile_view') }}" class="dashboard-card-link w-100"> {# Partners likely share client profile view #}
                    <div class="card shadow-sm dashboard-card">
                        <div class="card-body text-center">
                            <i class="fas fa-user-edit fa-3x text-secondary mb-3"></i>
                            <h5 class="card-title">Mon Profil</h5>
                            <p class="card-text text-sm text-gray-600">Modifier vos informations personnelles.</p>
                            <div class="mt-auto">
                                <span class="button button-secondary button-small">Modifier</span>
                            </div>
                        </div>
                    </div>
                </a>
            </div>

        </div> {# End row #}
    </div>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/_header.html.twig -----
{# templates/_header.html.twig #}
<header class="header"> {# Ensure .header styles are in your app.css #}
    <div class="container header-container"> {# Ensure .container, .header-container styles... #}
        <div class="logo-area"> {# Ensure .logo-area styles... #}
            <a href="{{ path('app_home') }}"> {# Adjust route name if needed #}
                <span class="logo-text">Trotti-Care</span> {# Ensure .logo-text styles... #}
            </a>
        </div>
        <nav class="navigation"> {# Ensure .navigation styles... #}
             <a class="nav-link" href="{{ path('app_home') }}">Accueil</a> {# Ensure .nav-link styles... #}
            {% if is_granted('ROLE_ADMIN') %}
            <a href="{{ path('app_admin_events') }}" class="nav-link">Événements</a> {# Style .button, .button-secondary #}
            <a href="{{ path('admin_trottinette_index') }}" class="nav-link">Torttinette</a> {# Style .button, .button-secondary #}
            <a href="{{ path('admin_maintenance_index') }}" class="nav-link">Maintenance</a> {# Style .button, .button-secondary #}
            <a href="{{ path('admin_utilisateur_index') }}" class="nav-link">Utilisateurs</a> {# Style .button, .button-secondary #}
            <a href="{{ path('point_relais_index') }}" class="nav-link">Point Relais</a> {# Style .button, .button-secondary #}
            <a href="{{ path('reservation_index') }}" class="nav-link">Reservation</a> {# Style .button, .button-secondary #}
                <a href="{{ path('chat') }}" class="nav-link">Chatbot</a> {# Style .button, .button-secondary #}
                <a href="{{ path('reclamation_list') }}" class="nav-link">Reclamation</a> {# Style .button, .button-secondary #}

            {% elseif is_granted('ROLE_USER') %}
                <a href="/voicetochat/" class="nav-link"> chat vocale help</a> {# Style .button, .button-secondary #}
                <a href="/voicetochat/tt.html" class="nav-link"> 3d </a> {# Style .button, .button-secondary #}
                <a href="http://127.0.0.1:60261/" class="nav-link"> 3d representation </a> {# Style .button, .button-secondary #}

                <a href="{{ path('client_event_index') }}" class="nav-link">Événements</a> {# Style .button, .button-secondary #}
            {% endif %}

        </nav>
        <div class="header-actions"> {# Wrap buttons if needed for layout #}
            {% if is_granted('IS_AUTHENTICATED_FULLY') %}
                {# User is logged in - Show appropriate links based on role #}
                {% if is_granted('ROLE_ADMIN') %}
                    <a href="{{ path('admin_dashboard') }}" class="button button-secondary">Admin</a> {# Style .button, .button-secondary #}

                {% elseif is_granted('ROLE_PARTENAIRE') %}
                     <a href="{{ path('partenaire_dashboard') }}" class="button button-secondary">Partenaire</a>
                {% else %} {# Assuming ROLE_USER is the default client role #}
                     <a href="{{ path('client_dashboard') }}" class="button button-secondary">Mon Espace</a>
                {% endif %}
                 <a href="{{ path('app_logout') }}" class="button button-secondary-outline">Déconnexion</a> {# Example style #}
            {% else %}
                {# User is not logged in #}
                <a href="{{ path('app_login') }}" class="button button-primary">Se Connecter</a> {# Style .button, .button-primary #}
                {# Optional registration link #}
                {# <a href="{{ path('app_register') }}" class="button button-secondary">S'inscrire</a> #}
            {% endif %}
        </div>
    </div>
</header>


----- /Users/mac/Downloads/my_project_troti-vf/templates/maintenance/calendar.html.twig -----
{# templates/maintenance/calendar.html.twig #}
{% extends 'base.html.twig' %} {# Use your admin base template #}

{% block title %}Calendrier des Maintenances - Admin{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# --- FullCalendar CSS (CDN Example) --- #}
    <link href='https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css' rel='stylesheet'>
    <link href='https://cdn.jsdelivr.net/npm/@fullcalendar/core@6.1.11/main.min.css' rel='stylesheet' />
    <link href='https://cdn.jsdelivr.net/npm/@fullcalendar/daygrid@6.1.11/main.min.css' rel='stylesheet' />
    <link href='https://cdn.jsdelivr.net/npm/@fullcalendar/timegrid@6.1.11/main.min.css' rel='stylesheet' />
    <link href='https://cdn.jsdelivr.net/npm/@fullcalendar/list@6.1.11/main.min.css' rel='stylesheet' />
    {# --- End FullCalendar CSS --- #}

    <style>
        /* Basic styling for the calendar container and modal */
        #maintenance-calendar-container {
            height: 85vh; /* Make calendar take most of the viewport height */
            width: 100%;
        }
        /* Adjust FullCalendar default styles if needed */
        .fc-event { cursor: pointer; border-width: 1px; } /* Make events clickable */
        .fc-daygrid-event { white-space: normal !important; /* Allow text wrapping */ }

        /* Simple Modal Styling (Tailwind Example) */
        #eventDetailModal { display: none; /* Hidden by default */ }
        #eventDetailModal.is-open { display: flex; }
    </style>
{% endblock %}

{% block body %}
    <div class="min-h-screen bg-gray-100 p-4 md:p-6">
        <div class="container mx-auto">

            {# Header with Title and Back Button #}
            <div class="flex flex-col sm:flex-row justify-between items-center mb-6 gap-3">
                <h1 class="text-2xl md:text-3xl font-bold text-gray-800 flex items-center">
                    <i class="fas fa-calendar-alt mr-2 text-blue-600"></i>Calendrier des Maintenances
                </h1>
                <a href="{{ path('admin_maintenance_index') }}" class="button button-secondary button-sm">
                    <i class="fas fa-arrow-left mr-1.5"></i> Retour à la liste
                </a>
            </div>

            {# Calendar Container #}
            <div class="bg-white rounded-lg shadow-md p-4 border border-gray-200">
                <div id="maintenance-calendar-container">
                    <div id="maintenance-calendar">
                        {# Calendar will be rendered here by JS #}
                        <div class="text-center text-gray-500 p-10">Chargement du calendrier...</div>
                    </div>
                </div>
            </div>

        </div> {# End Container #}
    </div> {# End Page Wrapper #}

    {# --- Modal for Event Details (Tailwind Example) --- #}
    <div id="eventDetailModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full justify-center items-center z-50">
        <div class="relative mx-auto p-5 border w-full max-w-md shadow-lg rounded-md bg-white">
            <div class="mt-3 text-center">
                <h3 class="text-lg leading-6 font-medium text-gray-900" id="modalTitle">Détails Maintenance</h3>
                <div class="mt-2 px-7 py-3 text-left text-sm text-gray-700 space-y-2">
                    <p><strong>Trottinette:</strong> <span id="modalTrottinette"></span></p>
                    <p><strong>Description:</strong> <span id="modalDescription"></span></p>
                    <p><strong>Début:</strong> <span id="modalStartDate"></span></p>
                    <p><strong>Fin:</strong> <span id="modalEndDate"></span></p>
                    <p><strong>Statut:</strong> <span id="modalStatus"></span></p>
                </div>
                <div class="items-center px-4 py-3">
                    <a href="#" id="modalDetailsLink" class="button button-primary button-sm mr-2">Voir Détails</a>
                    <button id="closeModalButton" class="button button-secondary button-sm">
                        Fermer
                    </button>
                </div>
            </div>
        </div>
    </div>
    {# --- End Modal --- #}

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    {# --- FullCalendar JS (CDN Example) --- #}
    {# Make sure Core is first #}
    <script src='https://cdn.jsdelivr.net/npm/@fullcalendar/core@6.1.11/index.global.min.js'></script>
    <script src='https://cdn.jsdelivr.net/npm/@fullcalendar/interaction@6.1.11/index.global.min.js'></script> {# Needed for clicking/selecting #}
    <script src='https://cdn.jsdelivr.net/npm/@fullcalendar/daygrid@6.1.11/index.global.min.js'></script>
    <script src='https://cdn.jsdelivr.net/npm/@fullcalendar/timegrid@6.1.11/index.global.min.js'></script>
    <script src='https://cdn.jsdelivr.net/npm/@fullcalendar/list@6.1.11/index.global.min.js'></script>
    <script src='https://cdn.jsdelivr.net/npm/@fullcalendar/core@6.1.11/locales/fr.global.min.js'></script> {# French locale #}
    {# --- End FullCalendar JS --- #}

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const calendarEl = document.getElementById('maintenance-calendar');
            const modal = document.getElementById('eventDetailModal');
            const closeModalButton = document.getElementById('closeModalButton');
            const modalTitle = document.getElementById('modalTitle');
            const modalTrottinette = document.getElementById('modalTrottinette');
            const modalDescription = document.getElementById('modalDescription');
            const modalStartDate = document.getElementById('modalStartDate');
            const modalEndDate = document.getElementById('modalEndDate');
            const modalStatus = document.getElementById('modalStatus');
            const modalDetailsLink = document.getElementById('modalDetailsLink');

            // Hide modal initially
            modal.style.display = 'none';

            // Close modal functionality
            const closeModal = () => { modal.style.display = 'none'; };
            closeModalButton.addEventListener('click', closeModal);
            modal.addEventListener('click', function(event) {
                // Close if clicked outside the modal content
                if (event.target === modal) {
                    closeModal();
                }
            });

            // Get data passed from controller
            try {
                const maintenanceEvents = {{ calendarEvents|json_encode|raw }};

                const calendar = new FullCalendar.Calendar(calendarEl, {
                    locale: 'fr', // Set French locale
                    headerToolbar: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek' // Different views
                    },
                    initialView: 'dayGridMonth', // Start with month view
                    editable: false, // Don't allow dragging/resizing in this view
                    selectable: false, // Don't allow selecting date ranges
                    navLinks: true, // Allow clicking day/week names to navigate views
                    dayMaxEvents: true, // Allow "more" link when too many events
                    events: maintenanceEvents, // Load events from controller data

                    eventClick: function(info) {
                        info.jsEvent.preventDefault(); // Don't follow the URL directly if one exists

                        const props = info.event.extendedProps;
                        const start = info.event.start ? info.event.start.toLocaleString('fr-FR', {dateStyle: 'short', timeStyle: 'short'}) : 'N/A';

                        // Populate modal
                        modalTitle.textContent = `Maintenance #${info.event.id}`;
                        modalTrottinette.textContent = `${props.trottinetteModele || '?'} (${props.trottinetteNumeroSerie || 'N/A'})` ;
                        modalDescription.textContent = props.description || 'Aucune';
                        modalStartDate.textContent = start;
                        modalEndDate.textContent = props.dateFinFormatted || 'En cours';
                        modalStatus.textContent = props.statut ? props.statut.replace('_', ' ') : 'Inconnu';
                        modalDetailsLink.href = props.detailsUrl || '#'; // Set the details link URL

                        // Show modal
                        modal.style.display = 'flex';
                    },

                    // Optional: Customize event rendering further if needed
                    eventContent: function(arg) {
                        // Customize how event title appears in grid views
                        let italicEl = document.createElement('i');
                        italicEl.innerHTML = arg.event.title; // Title from controller

                        let arrayOfDomNodes = [ italicEl ];
                        // You could add more info here for timegrid views etc.
                        // Example: if (arg.view.type === 'timeGridWeek') { ... }
                        return { domNodes: arrayOfDomNodes }
                    }
                });

                calendar.render();
                // Handle window resize to reflow calendar
                window.addEventListener('resize', () => calendar.updateSize());

            } catch (e) {
                console.error("Error parsing maintenance events JSON or initializing calendar:", e);
                calendarEl.innerHTML = '<p class="text-red-500 text-center p-10">Erreur lors du chargement du calendrier.</p>';
            }
        });
    </script>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/maintenance/edit.html.twig -----
{# templates/admin/maintenance/edit.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Modifier Maintenance #{{ maintenance.id }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# Ensure Tailwind base styles are loaded via base.html.twig #}
    <style>
        /* Reusable form input/select/textarea styles (adapt from previous) */
        .form-input, .form-select, .form-textarea {
            appearance: none; display: block; width: 100%;
            padding: 0.5rem 0.75rem; font-size: 0.875rem; line-height: 1.5;
            color: #1f2937; background-color: #fff; background-clip: padding-box;
            border: 1px solid #d1d5db; border-radius: 0.375rem;
            transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        }
        .form-textarea { min-height: 80px; /* Adjust as needed */ }
        .form-select {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
            background-position: right 0.5rem center; background-repeat: no-repeat;
            background-size: 1.5em 1.5em; padding-right: 2.5rem;
        }
        .form-input:focus, .form-select:focus, .form-textarea:focus {
            outline: none; border-color: #3b82f6;
            box-shadow: 0 0 0 1px #3b82f6; /* ring-1 ring-blue-500 */
        }
        /* Error state styling */
        .border-error { border-color: #ef4444 !important; /* red-500 */ }
        .ring-error { box-shadow: 0 0 0 1px #ef4444 !important; /* ring-red-500 */ }
        .form-error-message {
            display: block; /* Show when errors exist */
            margin-top: 0.25rem; /* mt-1 */
            font-size: 0.75rem; /* text-xs */
            color: #dc2626; /* red-600 */
        }

        /* Reusable Button Styles (adapt from previous) */
        .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.625rem 1.25rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; white-space: nowrap; }
        .button-primary { background-color: #3b82f6; color: white; border-color: #3b82f6; } .button-primary:hover { background-color: #2563eb; border-color: #1d4ed8;}
        .button-secondary { background-color: #e5e7eb; color: #374151; border-color: #d1d5db; } .button-secondary:hover { background-color: #d1d5db; border-color: #9ca3af;}

        /* FontAwesome Icons */
        .fas { display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; -webkit-font-smoothing: antialiased; font-family: "Font Awesome 6 Free"; font-weight: 900; }
        .fa-save:before { content: "\f0c7"; }
        .fa-arrow-left:before { content: "\f060"; }
        .mr-2 { margin-right: 0.5rem; }
    </style>
{% endblock %}

{% block body %}
    <div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
        <div class="container mx-auto max-w-3xl">

            {# 1. Header #}
            <h1 class="text-2xl lg:text-3xl font-bold text-gray-900 mb-6">
                Modifier la Maintenance #{{ maintenance.id }}
            </h1>

            {# 2. Flash Messages #}
            {% include 'partials/_flash_messages.html.twig' ignore missing %}

            {# 3. Form Card #}
            <div class="bg-white rounded-lg shadow p-6 md:p-8">
                {# Use the action from the form object itself #}
                {{ form_start(form, {'attr': {'novalidate': 'novalidate'}}) }}

                {# General Form Error Summary #}
                {% if form.vars.submitted and not form.vars.valid and form.vars.errors|length > 0 %}
                    <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-5" role="alert">
                        <strong class="font-bold">Erreurs détectées :</strong>
                        <ul class="mt-2 list-disc list-inside text-sm">
                            {{ form_errors(form) }}
                        </ul>
                    </div>
                {% endif %}

                {# Render form fields using Tailwind classes #}
                <div class="space-y-5">

                    {# Trottinette Field (Usually disabled on edit, but shown for context) #}
                    {% if form.trottinette is defined %}
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Trottinette Concernée</label>
                            <input type="text" class="form-input bg-gray-100 cursor-not-allowed" value="{{ maintenance.trottinette ? maintenance.trottinette.modele ~ ' (' ~ maintenance.trottinette.numeroSerie ~ ')' : 'N/A' }}" disabled readonly>
                            {# Hide the actual select field visually but keep it for submission if needed, or remove from edit form type #}
                            {# {{ form_widget(form.trottinette, {'attr': {'class': 'hidden'}}) }} #}
                        </div>
                    {% endif %}

                    {# Description Field #}
                    <div>
                        {{ form_label(form.description, 'Description *', {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                        {% set widget_attrs = {'class': 'form-textarea' } %}
                        {% if form.vars.submitted and not form.description.vars.valid %}
                            {% set widget_attrs = widget_attrs|merge({'class': 'form-textarea border-error focus:ring-error focus:border-error'}) %}
                        {% endif %}
                        {{ form_widget(form.description, {'attr': widget_attrs|merge({'rows': 4}) }) }}
                        {% if form.vars.submitted and not form.description.vars.valid %}
                            <p class="form-error-message">{{ form_errors(form.description) }}</p>
                        {% endif %}
                    </div>

                    {# Date Debut Field #}
                    <div>
                        {{ form_label(form.dateDebut, 'Date et Heure de Début *', {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                        {% set widget_attrs = {'class': 'form-input' } %}
                        {% if form.vars.submitted and not form.dateDebut.vars.valid %}
                            {% set widget_attrs = widget_attrs|merge({'class': 'form-input border-error focus:ring-error focus:border-error'}) %}
                        {% endif %}
                        {{ form_widget(form.dateDebut, {'attr': widget_attrs}) }}
                        {% if form.vars.submitted and not form.dateDebut.vars.valid %}
                            <p class="form-error-message">{{ form_errors(form.dateDebut) }}</p>
                        {% endif %}
                    </div>

                    {# Date Fin Field #}
                    <div>
                        {{ form_label(form.dateFin, 'Date et Heure de Fin (Optionnel)', {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                        {% set widget_attrs = {'class': 'form-input' } %}
                        {% if form.vars.submitted and not form.dateFin.vars.valid %}
                            {% set widget_attrs = widget_attrs|merge({'class': 'form-input border-error focus:ring-error focus:border-error'}) %}
                        {% endif %}
                        {{ form_widget(form.dateFin, {'attr': widget_attrs}) }}
                        {% if form.vars.submitted and not form.dateFin.vars.valid %}
                            <p class="form-error-message">{{ form_errors(form.dateFin) }}</p>
                        {% endif %}
                        <p class="mt-1 text-xs text-gray-500">Laissez vide si la maintenance est toujours en cours.</p>
                    </div>

                    {# Statut Field #}
                    <div>
                        {{ form_label(form.statut, 'Statut *', {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                        {% set widget_attrs = {'class': 'form-select' } %}
                        {% if form.vars.submitted and not form.statut.vars.valid %}
                            {% set widget_attrs = widget_attrs|merge({'class': 'form-select border-error focus:ring-error focus:border-error'}) %}
                        {% endif %}
                        {{ form_widget(form.statut, {'attr': widget_attrs}) }}
                        {% if form.vars.submitted and not form.statut.vars.valid %}
                            <p class="form-error-message">{{ form_errors(form.statut) }}</p>
                        {% endif %}
                    </div>

                    {# Type Field #}
                    {% if form.type is defined %}
                        <div>
                            {{ form_label(form.type, 'Type de Maintenance', {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                            {% set widget_attrs = {'class': 'form-select' } %}
                            {% if form.vars.submitted and not form.type.vars.valid %}
                                {% set widget_attrs = widget_attrs|merge({'class': 'form-select border-error focus:ring-error focus:border-error'}) %}
                            {% endif %}
                            {{ form_widget(form.type, {'attr': widget_attrs}) }}
                            {% if form.vars.submitted and not form.type.vars.valid %}
                                <p class="form-error-message">{{ form_errors(form.type) }}</p>
                            {% endif %}
                        </div>
                    {% endif %}

                    {# Removed cout and technicien rendering #}

                </div>

                {# Form Actions/Buttons #}
                <div class="mt-8 pt-5 border-t border-gray-200 flex justify-between items-center">
                    <a href="{{ path('admin_maintenance_index') }}" class="button button-secondary">
                        <i class="fas fa-arrow-left mr-2"></i>Retour à la liste
                    </a>
                    <button type="submit" class="button button-primary">
                        <i class="fas fa-save mr-2"></i>{{ button_label|default('Enregistrer les modifications') }}
                    </button>
                </div>

                {{ form_end(form) }}
            </div>

        </div> {# End Container #}
    </div> {# End Page Wrapper #}
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/maintenance/new.html.twig -----
{# templates/admin/maintenance/new.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Nouvelle Maintenance{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# Ensure Tailwind base styles are loaded via base.html.twig #}
    <style>
        /* Reusable form input/select/textarea styles (adapt from previous) */
        .form-input, .form-select, .form-textarea {
            appearance: none; display: block; width: 100%;
            padding: 0.5rem 0.75rem; font-size: 0.875rem; line-height: 1.5;
            color: #1f2937; background-color: #fff; background-clip: padding-box;
            border: 1px solid #d1d5db; border-radius: 0.375rem;
            transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        }
        .form-textarea { min-height: 80px; /* Adjust as needed */ }
        .form-select {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
            background-position: right 0.5rem center; background-repeat: no-repeat;
            background-size: 1.5em 1.5em; padding-right: 2.5rem;
        }
        .form-input:focus, .form-select:focus, .form-textarea:focus {
            outline: none; border-color: #3b82f6;
            box-shadow: 0 0 0 1px #3b82f6; /* ring-1 ring-blue-500 */
        }
        /* Error state styling */
        .border-error { border-color: #ef4444 !important; /* red-500 */ }
        .ring-error { box-shadow: 0 0 0 1px #ef4444 !important; /* ring-red-500 */ }
        .form-error-message {
            display: block; /* Show when errors exist */
            margin-top: 0.25rem; /* mt-1 */
            font-size: 0.75rem; /* text-xs */
            color: #dc2626; /* red-600 */
        }

        /* Reusable Button Styles (adapt from previous) */
        .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.625rem 1.25rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; white-space: nowrap; }
        .button-primary { background-color: #3b82f6; color: white; border-color: #3b82f6; } .button-primary:hover { background-color: #2563eb; border-color: #1d4ed8;}
        .button-secondary { background-color: #e5e7eb; color: #374151; border-color: #d1d5db; } .button-secondary:hover { background-color: #d1d5db; border-color: #9ca3af;}

        /* FontAwesome Icons */
        .fas { display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; -webkit-font-smoothing: antialiased; font-family: "Font Awesome 6 Free"; font-weight: 900; }
        .fa-save:before { content: "\f0c7"; }
        .fa-arrow-left:before { content: "\f060"; }
        .mr-2 { margin-right: 0.5rem; }
    </style>
{% endblock %}

{% block body %}
    <div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
        <div class="container mx-auto max-w-3xl">

            {# 1. Header #}
            <h1 class="text-2xl lg:text-3xl font-bold text-gray-900 mb-6">
                Créer une nouvelle Maintenance
            </h1>

            {# 2. Flash Messages #}
            {% include 'partials/_flash_messages.html.twig' ignore missing %}

            {# 3. Form Card #}
            <div class="bg-white rounded-lg shadow p-6 md:p-8">
                {{ form_start(form, {'attr': {'novalidate': 'novalidate'}}) }}

                {# General Form Error Summary #}
                {% if form.vars.submitted and not form.vars.valid and form.vars.errors|length > 0 %}
                    <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-5" role="alert">
                        <strong class="font-bold">Erreurs détectées :</strong>
                        <ul class="mt-2 list-disc list-inside text-sm">
                            {{ form_errors(form) }}
                            {# Optionally list individual field errors here too if needed #}
                        </ul>
                    </div>
                {% endif %}

                {# Render form fields using Tailwind classes #}
                <div class="space-y-5"> {# Vertical spacing between fields #}

                    {# Trottinette Field (ensure this is in your MaintenanceType) #}
                    {% if form.trottinette is defined %}
                        <div>
                            {{ form_label(form.trottinette, 'Trottinette Concernée *', {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                            {% set widget_attrs = {'class': 'form-select' } %}
                            {% if form.vars.submitted and not form.trottinette.vars.valid %}
                                {% set widget_attrs = widget_attrs|merge({'class': 'form-select border-error focus:ring-error focus:border-error'}) %}
                            {% endif %}
                            {{ form_widget(form.trottinette, {'attr': widget_attrs}) }}
                            {% if form.vars.submitted and not form.trottinette.vars.valid %}
                                <p class="form-error-message">{{ form_errors(form.trottinette) }}</p>
                            {% endif %}
                            <p class="mt-1 text-xs text-gray-500">Sélectionnez la trottinette qui nécessite une maintenance.</p>
                        </div>
                    {% endif %}

                    {# Description Field #}
                    <div>
                        {{ form_label(form.description, 'Description *', {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                        {% set widget_attrs = {'class': 'form-textarea' } %} {# Use form-textarea class #}
                        {% if form.vars.submitted and not form.description.vars.valid %}
                            {% set widget_attrs = widget_attrs|merge({'class': 'form-textarea border-error focus:ring-error focus:border-error'}) %}
                        {% endif %}
                        {{ form_widget(form.description, {'attr': widget_attrs|merge({'rows': 4}) }) }}
                        {% if form.vars.submitted and not form.description.vars.valid %}
                            <p class="form-error-message">{{ form_errors(form.description) }}</p>
                        {% endif %}
                    </div>

                    {# Date Debut Field #}
                    <div>
                        {{ form_label(form.dateDebut, 'Date et Heure de Début *', {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                        {% set widget_attrs = {'class': 'form-input' } %}
                        {% if form.vars.submitted and not form.dateDebut.vars.valid %}
                            {% set widget_attrs = widget_attrs|merge({'class': 'form-input border-error focus:ring-error focus:border-error'}) %}
                        {% endif %}
                        {{ form_widget(form.dateDebut, {'attr': widget_attrs}) }}
                        {% if form.vars.submitted and not form.dateDebut.vars.valid %}
                            <p class="form-error-message">{{ form_errors(form.dateDebut) }}</p>
                        {% endif %}
                    </div>

                    {# Date Fin Field (Optional) #}
                    <div>
                        {{ form_label(form.dateFin, 'Date et Heure de Fin (Optionnel)', {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                        {% set widget_attrs = {'class': 'form-input' } %}
                        {% if form.vars.submitted and not form.dateFin.vars.valid %}
                            {% set widget_attrs = widget_attrs|merge({'class': 'form-input border-error focus:ring-error focus:border-error'}) %}
                        {% endif %}
                        {{ form_widget(form.dateFin, {'attr': widget_attrs}) }}
                        {% if form.vars.submitted and not form.dateFin.vars.valid %}
                            <p class="form-error-message">{{ form_errors(form.dateFin) }}</p>
                        {% endif %}
                        <p class="mt-1 text-xs text-gray-500">Laissez vide si la maintenance est toujours en cours.</p>
                    </div>

                    {# Statut Field #}
                    <div>
                        {{ form_label(form.statut, 'Statut *', {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                        {% set widget_attrs = {'class': 'form-select' } %}
                        {% if form.vars.submitted and not form.statut.vars.valid %}
                            {% set widget_attrs = widget_attrs|merge({'class': 'form-select border-error focus:ring-error focus:border-error'}) %}
                        {% endif %}
                        {{ form_widget(form.statut, {'attr': widget_attrs}) }}
                        {% if form.vars.submitted and not form.statut.vars.valid %}
                            <p class="form-error-message">{{ form_errors(form.statut) }}</p>
                        {% endif %}
                    </div>

                    {# Type Field (Assuming it's added to MaintenanceType) #}
                    {% if form.type is defined %}
                        <div>
                            {{ form_label(form.type, 'Type de Maintenance', {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                            {% set widget_attrs = {'class': 'form-select' } %}
                            {% if form.vars.submitted and not form.type.vars.valid %}
                                {% set widget_attrs = widget_attrs|merge({'class': 'form-select border-error focus:ring-error focus:border-error'}) %}
                            {% endif %}
                            {{ form_widget(form.type, {'attr': widget_attrs}) }}
                            {% if form.vars.submitted and not form.type.vars.valid %}
                                <p class="form-error-message">{{ form_errors(form.type) }}</p>
                            {% endif %}
                        </div>
                    {% endif %}

                    {# Removed cout and technicien fields as they are not in the provided form type #}
                    {# {% if form.cout is defined %} ... {% endif %} #}
                    {# {% if form.technicien is defined %} ... {% endif %} #}

                </div>

                {# Form Actions/Buttons #}
                <div class="mt-8 pt-5 border-t border-gray-200 flex justify-between items-center">
                    <a href="{{ path('admin_maintenance_index') }}" class="button button-secondary">
                        <i class="fas fa-arrow-left mr-2"></i>Retour à la liste
                    </a>
                    <button type="submit" class="button button-primary">
                        <i class="fas fa-save mr-2"></i>{{ button_label|default('Enregistrer') }}
                    </button>
                </div>

                {{ form_end(form) }}
            </div>

        </div> {# End Container #}
    </div> {# End Page Wrapper #}
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/maintenance/index.html.twig -----
{# templates/maintenance/index.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Gestion des Maintenances - Admin{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# Ensure Tailwind base styles are loaded via base.html.twig #}
    <style>
        /* Reusable Status Badge Styles */
        .status-badge { padding: 0.25em 0.6em; border-radius: 9999px; font-size: 0.7rem; font-weight: 500; text-transform: uppercase; letter-spacing: 0.05em; white-space: nowrap; line-height: 1; display: inline-block; } /* Added display inline-block */
        .status-en_cours { background-color: #fef9c3; color: #854d0e; } /* yellow */
        .status-terminee { background-color: #dcfce7; color: #166534; } /* green */
        .status-annulee { background-color: #fee2e2; color: #991b1b; } /* red */

        /* Basic form input/select styles (reuse/adapt from user template) */
        .form-input, .form-select { appearance: none; display: block; width: 100%; padding: 0.5rem 0.75rem; font-size: 0.875rem; line-height: 1.5; color: #1f2937; background-color: #fff; background-clip: padding-box; border: 1px solid #d1d5db; border-radius: 0.375rem; transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out; }
        .form-select { background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e"); background-position: right 0.5rem center; background-repeat: no-repeat; background-size: 1.5em 1.5em; padding-right: 2.5rem; }
        .form-input:focus, .form-select:focus { outline: none; border-color: #3b82f6; box-shadow: 0 0 0 1px #3b82f6; /* ring-1 ring-blue-500 */ }
        /* Specific height for form elements in filter bar if needed */
        .filter-form .form-input, .filter-form .form-select { height: 2.25rem; /* h-9 */ }

        /* Reusable Button Styles (reuse/adapt from user template) */
        .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.5rem 1rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; white-space: nowrap; }
        .button-sm { padding: 0.375rem 0.75rem; font-size: 0.75rem; }
        .button-primary { background-color: #3b82f6; color: white; border-color: #3b82f6; } .button-primary:hover { background-color: #2563eb; border-color: #1d4ed8;}
        .button-secondary { background-color: #e5e7eb; color: #374151; border-color: #d1d5db; } .button-secondary:hover { background-color: #d1d5db; border-color: #9ca3af;}
        .button-info { background-color: #0ea5e9; color: white; border-color: #0ea5e9; } .button-info:hover { background-color: #0284c7; border-color: #0369a1; }
        .button-warning { background-color: #f59e0b; color: white; border-color: #f59e0b; } .button-warning:hover { background-color: #d97706; border-color: #b45309; }
        .button-danger { background-color: #ef4444; color: white; border-color: #ef4444; } .button-danger:hover { background-color: #dc2626; border-color: #b91c1c; }
        .button-outline-primary { color: #3b82f6; border-color: #3b82f6; background-color: transparent;} .button-outline-primary:hover { background-color: #eff6ff; }
        .button-outline-secondary { color: #6b7280; border-color: #d1d5db; background-color: transparent;} .button-outline-secondary:hover { background-color: #f3f4f6; }
        .button-outline-danger { color: #dc2626; border-color: #ef4444; background-color: transparent;} .button-outline-danger:hover { background-color: #fee2e2; }
        .button:disabled { opacity: 0.6; cursor: not-allowed; }

        /* FontAwesome Icons (reuse/adapt from user template) */
        .fas { display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; -webkit-font-smoothing: antialiased; font-family: "Font Awesome 6 Free"; font-weight: 900; }
        .fa-tools:before { content: "\f7d9"; }
        .fa-plus:before { content: "\2b"; }
        .fa-calendar-alt:before { content: "\f073"; }
        .fa-filter:before { content: "\f0b0"; }
        .fa-sync-alt:before { content: "\f2f1"; } /* Reset icon */
        .fa-eye:before { content: "\f06e"; }
        .fa-edit:before { content: "\f044"; }
        .fa-trash:before { content: "\f1f8"; }
        .mr-1 { margin-right: 0.25rem; }
        .mr-1\.5 { margin-right: 0.375rem; }
        .mr-2 { margin-right: 0.5rem; }

        /* --- Pagination Styles --- */
        .pagination-container {
            display: flex;
            flex-wrap: wrap; /* Allow wrapping on smaller screens */
            justify-content: space-between; /* Space out links and controls */
            align-items: center;
            margin-top: 1.5rem; /* mt-6 */
            padding-top: 1rem; /* pt-4 */
            border-top: 1px solid #e5e7eb; /* border-t border-gray-200 */
        }

        /* KNP Paginator default classes (adapt if using a different template) */
        .pagination { display: flex; padding-left: 0; list-style: none; border-radius: .25rem; margin: 0; /* Remove default margin */ }
        .page-item .page-link { position: relative; display: block; padding: .5rem .75rem; margin-left: -1px; line-height: 1.25; color: #3b82f6; background-color: #fff; border: 1px solid #dee2e6; transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out; }
        .page-item:first-child .page-link { margin-left: 0; border-top-left-radius: .25rem; border-bottom-left-radius: .25rem; }
        .page-item:last-child .page-link { border-top-right-radius: .25rem; border-bottom-right-radius: .25rem; }
        .page-item.disabled .page-link { color: #6c757d; pointer-events: none; cursor: auto; background-color: #fff; border-color: #dee2e6; }
        .page-item.active .page-link { z-index: 3; color: #fff; background-color: #3b82f6; border-color: #3b82f6; }
        .page-link:hover { z-index: 2; color: #2563eb; text-decoration: none; background-color: #e9ecef; border-color: #dee2e6; }

        /* Pagination summary and limit selector styles */
        .pagination-controls {
            display: flex;
            align-items: center;
            gap: 0.75rem; /* space-x-3 */
            font-size: 0.875rem; /* text-sm */
            color: #4b5563; /* text-gray-600 */
            margin-top: 0.5rem; /* Add some space when wrapped */
        }
        .pagination-controls label {
            margin-bottom: 0; /* Override default label margin */
            white-space: nowrap;
            margin-right: 0.25rem; /* mr-1 */
        }
        /* Make the select smaller */
        .limit-select {
            padding: 0.25rem 1.75rem 0.25rem 0.5rem; /* Adjust padding for size and arrow */
            font-size: 0.875rem; /* text-sm */
            line-height: 1.25;
            height: auto; /* Override filter-form height if needed */
            min-width: 4.5rem; /* Give it some minimum width */
            background-size: 1.2em 1.2em; /* Adjust arrow size */
            background-position: right 0.3rem center;
            border-radius: 0.375rem; /* Match other inputs */
            border: 1px solid #d1d5db; /* Match other inputs */
        }
        /* Reusable Status Badge Styles */
        .status-badge { padding: 0.25em 0.6em; border-radius: 9999px; font-size: 0.7rem; font-weight: 500; text-transform: uppercase; letter-spacing: 0.05em; white-space: nowrap; line-height: 1; display: inline-block; }
        .status-en_cours { background-color: #fef9c3; color: #854d0e; } /* yellow */
        .status-terminee { background-color: #dcfce7; color: #166534; } /* green */
        .status-annulee { background-color: #fee2e2; color: #991b1b; } /* red */

        /* Basic form input/select styles (KEEP THESE) */
        .form-input, .form-select { appearance: none; display: block; width: 100%; padding: 0.5rem 0.75rem; font-size: 0.875rem; line-height: 1.5; color: #1f2937; background-color: #fff; background-clip: padding-box; border: 1px solid #d1d5db; border-radius: 0.375rem; transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out; }
        .form-select { background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e"); background-position: right 0.5rem center; background-repeat: no-repeat; background-size: 1.5em 1.5em; padding-right: 2.5rem; }
        .form-input:focus, .form-select:focus { outline: none; border-color: #3b82f6; box-shadow: 0 0 0 1px #3b82f6; /* ring-1 ring-blue-500 */ }
        .filter-form .form-input, .filter-form .form-select { height: 2.25rem; /* h-9 */ }

        /* Reusable Button Styles (KEEP THESE) */
        .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.5rem 1rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; white-space: nowrap; }
        .button-sm { padding: 0.375rem 0.75rem; font-size: 0.75rem; }
        .button-primary { background-color: #3b82f6; color: white; border-color: #3b82f6; } .button-primary:hover { background-color: #2563eb; border-color: #1d4ed8;}
        .button-secondary { background-color: #e5e7eb; color: #374151; border-color: #d1d5db; } .button-secondary:hover { background-color: #d1d5db; border-color: #9ca3af;}
        .button-info { background-color: #0ea5e9; color: white; border-color: #0ea5e9; } .button-info:hover { background-color: #0284c7; border-color: #0369a1; }
        .button-warning { background-color: #f59e0b; color: white; border-color: #f59e0b; } .button-warning:hover { background-color: #d97706; border-color: #b45309; }
        .button-danger { background-color: #ef4444; color: white; border-color: #ef4444; } .button-danger:hover { background-color: #dc2626; border-color: #b91c1c; }
        .button-outline-primary { color: #3b82f6; border-color: #3b82f6; background-color: transparent;} .button-outline-primary:hover { background-color: #eff6ff; }
        .button-outline-secondary { color: #6b7280; border-color: #d1d5db; background-color: transparent;} .button-outline-secondary:hover { background-color: #f3f4f6; }
        .button-outline-danger { color: #dc2626; border-color: #ef4444; background-color: transparent;} .button-outline-danger:hover { background-color: #fee2e2; }
        .button:disabled { opacity: 0.6; cursor: not-allowed; }

        /* FontAwesome Icons (KEEP THESE) */
        .fas { display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; -webkit-font-smoothing: antialiased; font-family: "Font Awesome 6 Free"; font-weight: 900; }
        .fa-tools:before { content: "\f7d9"; }
        .fa-plus:before { content: "\2b"; }
        .fa-calendar-alt:before { content: "\f073"; }
        .fa-filter:before { content: "\f0b0"; }
        .fa-sync-alt:before { content: "\f2f1"; } /* Reset icon */
        .fa-eye:before { content: "\f06e"; }
        .fa-edit:before { content: "\f044"; }
        .fa-trash:before { content: "\f1f8"; }
        .mr-1 { margin-right: 0.25rem; }
        .mr-1\.5 { margin-right: 0.375rem; }
        .mr-2 { margin-right: 0.5rem; }

        /* --- REMOVE Pagination specific styles --- */
        /* .pagination { ... } */
        /* .page-item .page-link { ... } */
        /* .page-item.disabled .page-link { ... } */
        /* .page-item.active .page-link { ... } */
        /* .page-link:hover { ... } */
        /* --- END REMOVE --- */

        /* Styles for limit selector container (KEEP THESE) */
        .pagination-container {
            display: flex; flex-wrap: wrap; justify-content: space-between; align-items: center;
            margin-top: 1.5rem; padding-top: 1rem; border-top: 1px solid #e5e7eb;
        }
        .pagination-controls { display: flex; align-items: center; gap: 0.75rem; font-size: 0.875rem; color: #4b5563; margin-top: 0.5rem; }
        .pagination-controls label { margin-bottom: 0; white-space: nowrap; margin-right: 0.25rem; }
        .limit-select { padding: 0.25rem 1.75rem 0.25rem 0.5rem; font-size: 0.875rem; line-height: 1.25; height: auto; min-width: 4.5rem; background-size: 1.2em 1.2em; background-position: right 0.3rem center; border-radius: 0.375rem; border: 1px solid #d1d5db; }
        /* END KEEP */
    </style>
{% endblock %}

{% block body %}
    <div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
        <div class="container mx-auto max-w-7xl">

            {# 1. Header Section #}
            <div class="flex flex-col sm:flex-row justify-between items-center mb-8 gap-4">
                <h1 class="text-2xl lg:text-3xl font-bold text-gray-900">
                    <i class="fas fa-tools mr-2 text-blue-600"></i>Gestion des Maintenances
                </h1>
                <div>
                    <a href="{{ path('admin_maintenance_new') }}" class="button button-primary mr-2">
                        <i class="fas fa-plus mr-1.5"></i> Nouvelle maintenance
                    </a>
                    <a href="{{ path('admin_maintenance_calendar') }}" class="button button-info">
                        <i class="fas fa-calendar-alt mr-1.5"></i> Planning
                    </a>
                </div>
            </div>

            {# 2. Status Cards #}
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
                {# In Progress Card #}
                <div class="bg-white rounded-lg shadow-md border border-gray-200 p-6 flex items-center gap-4">
                    <div class="flex-shrink-0 rounded-full p-3 bg-yellow-100 text-yellow-600">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" /></svg>
                    </div>
                    <div>
                        <div class="text-sm text-gray-500 uppercase tracking-wider">En cours</div>
                        <div class="text-2xl font-bold text-gray-900">{{ countEnCours|default(0) }}</div>
                    </div>
                </div>
                {# Completed Card #}
                <div class="bg-white rounded-lg shadow-md border border-gray-200 p-6 flex items-center gap-4">
                    <div class="flex-shrink-0 rounded-full p-3 bg-green-100 text-green-600">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M5 13l4 4L19 7" /></svg>
                    </div>
                    <div>
                        <div class="text-sm text-gray-500 uppercase tracking-wider">Terminées</div>
                        <div class="text-2xl font-bold text-gray-900">{{ countTerminee|default(0) }}</div>
                    </div>
                </div>
                {# Cancelled Card #}
                <div class="bg-white rounded-lg shadow-md border border-gray-200 p-6 flex items-center gap-4">
                    <div class="flex-shrink-0 rounded-full p-3 bg-red-100 text-red-600">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" /></svg>
                    </div>
                    <div>
                        <div class="text-sm text-gray-500 uppercase tracking-wider">Annulées</div>
                        <div class="text-2xl font-bold text-gray-900">{{ countAnnulee|default(0) }}</div>
                    </div>
                </div>
            </div>

            {# 3. Flash Messages #}
            {% include 'partials/_flash_messages.html.twig' ignore missing %}

            {# 4. Filter Form #}
            <div class="bg-white rounded-lg shadow p-4 mb-6">
                {{ form_start(filterForm, {'attr': {'class': 'grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 items-end filter-form'}}) }}
                <div class="sm:col-span-2 md:col-span-2 lg:col-span-2">
                    <label for="{{ filterForm.search.vars.id }}" class="sr-only">Rechercher</label>
                    {{ form_widget(filterForm.search) }}
                    {{ form_errors(filterForm.search) }}
                </div>
                <div>
                    <label for="{{ filterForm.statut.vars.id }}" class="sr-only">État</label>
                    {{ form_widget(filterForm.statut) }}
                    {{ form_errors(filterForm.statut) }}
                </div>
                <div class="flex gap-2">
                    <button type="submit" class="button button-primary button-sm flex-grow">
                        <i class="fas fa-filter mr-1"></i>Filtrer
                    </button>
                    <a href="{{ path('admin_maintenance_index') }}" class="button button-secondary button-sm flex-grow" title="Réinitialiser">
                        <i class="fas fa-sync-alt mr-1"></i>Réinitialiser
                    </a>
                </div>
                {{ form_end(filterForm) }}
            </div>


            {# 5. Table Section #}
            <div class="bg-white rounded-lg shadow overflow-hidden">
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                        <tr>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Trottinette ID</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Description</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Début</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Fin</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Statut</th>
                            <th class="px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                        </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                        {% for maintenance in pagination %}
                            <tr class="hover:bg-gray-50">
                                <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-500">{{ maintenance.id }}</td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-600">
                                    {% if maintenance.trottinetteId %}
                                        {# Assuming admin_trottinette_show route exists #}
                                        <a href="{{ path('admin_trottinette_show', {'id': maintenance.trottinetteId}) }}" class="text-blue-600 hover:underline" title="Voir trottinette {{ maintenance.trottinetteId }}">
                                            {{ maintenance.trottinetteId }}
                                        </a>
                                    {% else %}
                                        N/A
                                    {% endif %}
                                </td>
                                <td class="px-4 py-3 text-sm text-gray-600 max-w-xs truncate" title="{{ maintenance.description }}">
                                    {{ maintenance.description|length > 60 ? maintenance.description|slice(0, 60) ~ '...' : maintenance.description|default('N/A') }}
                                </td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-600">{{ maintenance.dateDebut ? maintenance.dateDebut|date('d/m/Y H:i') : '' }}</td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-600">{{ maintenance.dateFin ? maintenance.dateFin|date('d/m/Y H:i') : 'N/A' }}</td>
                                <td class="px-4 py-3 whitespace-nowrap text-sm">
                                    {# Ensure status is not null before processing #}
                                    {% if maintenance.statut %}
                                        {% set status_class = 'status-' ~ (maintenance.statut|lower|replace({'_': '-'})) %}
                                        <span class="status-badge {{ status_class }}">
                                             {{ maintenance.statut|replace({'_': ' '})|capitalize }}
                                        </span>
                                    {% else %}
                                        <span class="status-badge status-unknown">Inconnu</span> {# Fallback style #}
                                    {% endif %}
                                </td>
                                <td class="px-4 py-3 whitespace-nowrap text-right text-sm font-medium space-x-1">
                                    <a href="{{ path('admin_maintenance_show', {'id': maintenance.id}) }}" class="button button-sm button-info text-white" title="Voir"> <i class="fas fa-eye"></i> </a>
                                    <a href="{{ path('admin_maintenance_edit', {'id': maintenance.id}) }}" class="button button-sm button-warning text-white" title="Modifier"> <i class="fas fa-edit"></i> </a>
                                    <form method="post" action="{{ path('admin_maintenance_delete', {'id': maintenance.id}) }}" onsubmit="return confirm('Supprimer la maintenance #{{ maintenance.id }} ?');" class="inline-block">
                                        <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ maintenance.id) }}">
                                        <button type="submit" class="button button-sm button-outline-danger" title="Supprimer"> <i class="fas fa-trash"></i> </button>
                                    </form>
                                </td>
                            </tr>
                        {% else %}
                            <tr>
                                <td colspan="7" class="text-center py-12 px-6 text-gray-500"> {# Adjusted colspan #}
                                    <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                                        <path vector-effect="non-scaling-stroke" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z" />
                                    </svg>
                                    <h3 class="mt-2 text-sm font-medium text-gray-900">Aucune maintenance trouvée</h3>
                                    <p class="mt-1 text-sm text-gray-500">Essayez de modifier vos filtres ou créez une nouvelle maintenance.</p>
                                    {% if filterForm.vars.value.search is not empty or filterForm.vars.value.statut is not empty %}
                                        <div class="mt-6">
                                            <a href="{{ path('admin_maintenance_index') }}" class="button button-sm button-secondary">
                                                Réinitialiser les filtres
                                            </a>
                                        </div>
                                    {% endif %}
                                </td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div> {# End Table Section #}

            {# 6. Pagination Container (as before, but without the old CSS) #}
            {% if pagination is defined and pagination.getTotalItemCount > 0 %}
                <div class="pagination-container"> {# Wrapper for links and controls #}
                    <div> {# Div to keep links together #}
                        {% if pagination.pageCount > 1 %}
                            {{ knp_pagination_render(pagination) }} {# This will now use the Tailwind template #}
                        {% endif %}
                    </div>
                    <div class="pagination-controls"> {# Controls group #}
                        <span> {# Item count text #}
                            {% set firstItem = pagination.firstItemNumber|default(0) %}
                            {% set lastItem = pagination.lastItemNumber|default(0) %}
                            {% set totalItems = pagination.getTotalItemCount|default(0) %}
                            Affichage de {{ firstItem }}-{{ lastItem }} sur {{ totalItems }}
                         </span>
                        <div class="inline-flex items-center"> {# Limit Selector #}
                            <label for="itemsPerPageSelect" class="whitespace-nowrap">par page:</label>
                            <select id="itemsPerPageSelect" class="form-select limit-select">
                                {% for limitOption in allowedLimits %}
                                    <option value="{{ limitOption }}" {{ limitOption == currentLimit ? 'selected' : '' }}>
                                        {{ limitOption }}
                                    </option>
                                {% endfor %}
                            </select>
                        </div>
                    </div>
                </div>
            {% endif %}

        </div> {# End Container #}
    </div> {# End Page Wrapper #}
{% endblock %}

{% block javascripts %}
    {{ parent() }} {# Include scripts from base template if any #}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const selectElement = document.getElementById('itemsPerPageSelect');
            if (selectElement) {
                selectElement.addEventListener('change', function() {
                    const newLimit = this.value;
                    const currentUrl = new URL(window.location.href);
                    const params = currentUrl.searchParams;

                    // Set the new limit parameter
                    params.set('limit', newLimit);
                    // IMPORTANT: Reset to page 1 when changing the number of items per page
                    params.set('page', '1');

                    // Reconstruct the URL and navigate
                    currentUrl.search = params.toString();
                    window.location.href = currentUrl.toString();
                });
            }
        });
    </script>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/maintenance/_form.html.twig -----
{{ form_start(form) }}
    // ...existing code...
    {{ form_row(form.type) }}
    // ...existing code...
{{ form_end(form) }}



----- /Users/mac/Downloads/my_project_troti-vf/templates/maintenance/show.html.twig -----
{# templates/admin/maintenance/show.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Détails Maintenance #{{ maintenance.id }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# Ensure Tailwind base styles are loaded via base.html.twig #}
    <style>
        /* Reusable Status Badge Styles (reuse/adapt) */
        .status-badge {
            padding: 0.25em 0.6em; border-radius: 9999px; /* pill */
            font-size: 0.75rem; /* text-sm */ font-weight: 500; /* font-medium */
            text-transform: uppercase; letter-spacing: 0.05em;
            white-space: nowrap; line-height: 1;
        }
        /* Maintenance Statuses */
        .status-en_cours { background-color: #fef9c3; color: #854d0e; } /* yellow */
        .status-terminee { background-color: #dcfce7; color: #166534; } /* green */
        .status-annulee { background-color: #fee2e2; color: #991b1b; } /* red */
        /* Trottinette Statuses */
        .status-disponible { background-color: #dcfce7; color: #166534; }
        .status-en_location { background-color: #fef9c3; color: #854d0e; }
        .status-en_maintenance { background-color: #fee2e2; color: #991b1b; }

        /* Basic Button Styles (reuse/adapt) */
        .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.5rem 1rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; white-space: nowrap; }
        .button-sm { padding: 0.375rem 0.75rem; font-size: 0.75rem; }
        .button-warning { background-color: #f59e0b; color: white; border-color: #f59e0b; } .button-warning:hover { background-color: #d97706; border-color: #b45309; }
        .button-secondary { background-color: #e5e7eb; color: #374151; border-color: #d1d5db; } .button-secondary:hover { background-color: #d1d5db; border-color: #9ca3af;}

        /* FontAwesome Icons */
        .fas { display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; -webkit-font-smoothing: antialiased; font-family: "Font Awesome 6 Free"; font-weight: 900; }
        .fa-info-circle:before { content: "\f05a"; }
        .fa-edit:before { content: "\f044"; }
        .fa-arrow-left:before { content: "\f060"; }
        .fa-calendar-day:before { content: "\f783"; }
        .fa-calendar-check:before { content: "\f274"; }
        .fa-hashtag:before { content: "\23"; }
        .fa-motorcycle:before { content: "\f21c"; } /* Trottinette Icon */
        .fa-file-alt:before { content: "\f15c"; } /* Description Icon */
        .fa-tag:before { content: "\f02b"; } /* Status Icon */
        .fa-wrench:before { content: "\f0ad"; } /* Type Icon */
        .me-1 { margin-right: 0.25rem; }
        .me-2 { margin-right: 0.5rem; }
    </style>
{% endblock %}

{% block body %}
    <div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
        <div class="container mx-auto max-w-5xl">

            {# 1. Header & Main Actions #}
            <div class="flex flex-col sm:flex-row justify-between items-center mb-8 gap-4">
                <h1 class="text-2xl lg:text-3xl font-bold text-gray-900">
                    Détails Maintenance #{{ maintenance.id }}
                </h1>
                <div class="flex-shrink-0 flex gap-2">
                    <a href="{{ path('admin_maintenance_edit', {'id': maintenance.id}) }}" class="button button-warning button-sm">
                        <i class="fas fa-edit me-1"></i> Modifier
                    </a>
                    <a href="{{ path('admin_maintenance_index') }}" class="button button-secondary button-sm">
                        <i class="fas fa-arrow-left me-1"></i> Retour à la liste
                    </a>
                </div>
            </div>

            {# Flash Messages #}
            {% include 'partials/_flash_messages.html.twig' ignore missing %}

            {# 2. Main Content Grid #}
            <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 lg:gap-8">

                {# Left Column: Maintenance & Trottinette Details #}
                <div class="lg:col-span-2 space-y-6">

                    {# Maintenance Details Card #}
                    <div class="bg-white rounded-lg shadow overflow-hidden border border-gray-200">
                        <div class="px-6 py-4 border-b border-gray-200">
                            <h3 class="text-lg font-medium text-gray-900 flex items-center">
                                <i class="fas fa-info-circle me-2 text-blue-600"></i>Informations Maintenance
                            </h3>
                        </div>
                        <div class="p-6">
                            <dl class="grid grid-cols-1 sm:grid-cols-2 gap-x-6 gap-y-4">
                                {# Maintenance Type #}
                                <div class="sm:col-span-1">
                                    <dt class="text-xs uppercase text-gray-500 tracking-wider flex items-center"><i class="fas fa-wrench fa-fw me-2"></i>Type</dt>
                                    <dd class="mt-1 text-sm font-medium text-gray-800">{{ maintenance.type ? maintenance.type|replace({'_': ' '})|capitalize : 'N/A' }}</dd>
                                </div>
                                {# Maintenance Status #}
                                <div class="sm:col-span-1">
                                    <dt class="text-xs uppercase text-gray-500 tracking-wider flex items-center"><i class="fas fa-tag fa-fw me-2"></i>Statut</dt>
                                    <dd class="mt-1 text-sm">
                                     <span class="status-badge status-{{ maintenance.statut|lower }}">
                                         {{ maintenance.statut|replace({'_': ' '})|capitalize }}
                                    </span>
                                    </dd>
                                </div>
                                {# Start Date #}
                                <div class="sm:col-span-1">
                                    <dt class="text-xs uppercase text-gray-500 tracking-wider flex items-center"><i class="fas fa-calendar-day fa-fw me-2"></i>Début</dt>
                                    <dd class="mt-1 text-sm font-medium text-gray-800">{{ maintenance.dateDebut|date('d/m/Y H:i') }}</dd>
                                </div>
                                {# End Date #}
                                <div class="sm:col-span-1">
                                    <dt class="text-xs uppercase text-gray-500 tracking-wider flex items-center"><i class="fas fa-calendar-check fa-fw me-2"></i>Fin</dt>
                                    <dd class="mt-1 text-sm font-medium text-gray-800">{{ maintenance.dateFin ? maintenance.dateFin|date('d/m/Y H:i') : 'En cours' }}</dd>
                                </div>
                            </dl>
                        </div>
                    </div>

                    {# Trottinette Details Card #}
                    <div class="bg-white rounded-lg shadow overflow-hidden border border-gray-200">
                        <div class="px-6 py-4 border-b border-gray-200">
                            <h3 class="text-lg font-medium text-gray-900 flex items-center">
                                <i class="fas fa-motorcycle me-2 text-blue-600"></i>Informations Trottinette
                            </h3>
                        </div>
                        <div class="p-6">
                            {% if maintenance.trottinette %}
                                <dl class="grid grid-cols-1 sm:grid-cols-2 gap-x-6 gap-y-4">
                                    <div class="sm:col-span-1">
                                        <dt class="text-xs uppercase text-gray-500 tracking-wider flex items-center"><i class="fas fa-hashtag fa-fw me-2"></i>ID</dt>
                                        <dd class="mt-1 text-sm font-medium text-gray-800">
                                            <a href="{{ path('admin_trottinette_show', {'id': maintenance.trottinette.id}) }}" class="text-blue-600 hover:underline">
                                                #{{ maintenance.trottinette.id }}
                                            </a>
                                        </dd>
                                    </div>
                                    <div class="sm:col-span-1">
                                        <dt class="text-xs uppercase text-gray-500 tracking-wider flex items-center"><i class="fas fa-tag fa-fw me-2"></i>Modèle</dt>
                                        <dd class="mt-1 text-sm font-medium text-gray-800">{{ maintenance.trottinette.modele }}</dd>
                                    </div>
                                    <div class="sm:col-span-1">
                                        <dt class="text-xs uppercase text-gray-500 tracking-wider flex items-center"><i class="fas fa-fingerprint fa-fw me-2"></i>N° Série</dt>
                                        <dd class="mt-1 text-sm font-medium text-gray-800">{{ maintenance.trottinette.numeroSerie }}</dd>
                                    </div>
                                    <div class="sm:col-span-1">
                                        <dt class="text-xs uppercase text-gray-500 tracking-wider flex items-center"><i class="fas fa-traffic-light fa-fw me-2"></i>État Actuel</dt>
                                        <dd class="mt-1 text-sm">
                                         <span class="status-badge status-{{ maintenance.trottinette.etat.value|lower }}">
                                            {{ maintenance.trottinette.etat.value|replace({'_': ' '})|capitalize }}
                                        </span>
                                        </dd>
                                    </div>
                                </dl>
                            {% else %}
                                <p class="text-sm text-center text-gray-500 italic">Information trottinette non disponible.</p>
                            {% endif %}
                        </div>
                    </div>

                </div>

                {# Right Column: Description #}
                <div class="lg:col-span-1">
                    <div class="bg-white rounded-lg shadow overflow-hidden border border-gray-200">
                        <div class="px-6 py-4 border-b border-gray-200">
                            <h3 class="text-lg font-medium text-gray-900 flex items-center">
                                <i class="fas fa-file-alt me-2 text-blue-600"></i>Description Maintenance
                            </h3>
                        </div>
                        <div class="p-6">
                            <p class="text-sm text-gray-700 leading-relaxed">
                                {{ maintenance.description|nl2br|default('Aucune description fournie.') }}
                            </p>
                        </div>
                    </div>
                </div>

            </div> {# End Main Grid #}

        </div> {# End Container #}
    </div> {# End Page Wrapper #}
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/participation/details.html.twig -----
{# templates/participation/details.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Détails Participation - {{ event.titre }}{% endblock %}

{% block body %}
    <div class="min-h-screen bg-gray-100 p-4 md:p-8">
        <div class="container mx-auto max-w-2xl bg-white rounded-lg shadow-md p-6 md:p-8 border border-gray-200">

            <h1 class="text-2xl font-bold text-gray-800 mb-4 text-center border-b pb-3">
                Confirmation d'Inscription
            </h1>

            <div class="text-center mb-6">
                <p class="text-lg text-green-700 font-semibold">
                    <i class="bi bi-check-circle-fill me-2"></i>Inscription Confirmée!
                </p>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                {# Participant Details #}
                <div class="bg-gray-50 p-4 rounded-lg border">
                    <h2 class="text-lg font-semibold text-gray-700 mb-3 border-b pb-2"><i class="bi bi-person-fill me-2"></i>Participant</h2>
                    <dl class="text-sm space-y-1">
                        <div class="flex justify-between">
                            <dt class="text-gray-500">Nom:</dt>
                            <dd class="font-medium text-gray-800">{{ user.fullName }}</dd>
                        </div>
                        <div class="flex justify-between">
                            <dt class="text-gray-500">Email:</dt>
                            <dd class="font-medium text-gray-800">{{ user.email }}</dd>
                        </div>
                        <div class="flex justify-between">
                            <dt class="text-gray-500">N° Participation:</dt>
                            <dd class="font-medium text-gray-800">#{{ participation.id }}</dd>
                        </div>
                        <div class="flex justify-between">
                            <dt class="text-gray-500">Date d'inscription:</dt>
                            <dd class="font-medium text-gray-800">{{ participation.dateInscription|date('d/m/Y H:i') }}</dd>
                        </div>
                        <div class="flex justify-between">
                            <dt class="text-gray-500">Statut:</dt>
                            <dd>
                                {% if participation.statut == constant('App\\Enum\\ParticipationStatus::INSCRIT') %}
                                    <span class="px-2 py-0.5 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">Inscrit</span>
                                {% else %}
                                    <span class="px-2 py-0.5 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">Annulé</span>
                                {% endif %}
                            </dd>
                        </div>
                    </dl>
                </div>

                {# Event Details #}
                <div class="bg-gray-50 p-4 rounded-lg border">
                    <h2 class="text-lg font-semibold text-gray-700 mb-3 border-b pb-2"><i class="bi bi-calendar-event me-2"></i>Événement</h2>
                    <dl class="text-sm space-y-1">
                        <div class="flex justify-between">
                            <dt class="text-gray-500">Titre:</dt>
                            <dd class="font-medium text-gray-800">{{ event.titre }}</dd>
                        </div>
                        <div class="flex justify-between">
                            <dt class="text-gray-500">Début:</dt>
                            <dd class="font-medium text-gray-800">{{ event.dateDebut|date('d/m/Y H:i') }}</dd>
                        </div>
                        <div class="flex justify-between">
                            <dt class="text-gray-500">Fin:</dt>
                            <dd class="font-medium text-gray-800">{{ event.dateFin|date('d/m/Y H:i') }}</dd>
                        </div>
                        <div class="flex justify-between">
                            <dt class="text-gray-500">Lieu:</dt>
                            <dd class="font-medium text-gray-800">{{ event.state ? event.state.label : '-' }}</dd>
                        </div>
                    </dl>
                </div>
            </div>

            <div class="text-center mt-6">
                <a href="{{ path('client_event_show', {'id': event.id}) }}" class="button button-outline-secondary">
                    <i class="bi bi-arrow-left me-1"></i> Retour à l'événement
                </a>
            </div>

        </div>
    </div>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/event/_delete_form.html.twig -----
<form method="post" action="{{ path('app_event_delete', {'id': event.id}) }}" onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer cet événement ?');">
    <input type="hidden" name="_token" value="{{ csrf_token('delete_event_' ~ event.id) }}">
    <button class="btn btn-danger">
        <i class="fas fa-trash-alt me-2"></i>Supprimer
    </button>
</form>


----- /Users/mac/Downloads/my_project_troti-vf/templates/event/_event_card.html.twig -----
{# templates/public/event/_event_card.html.twig #}
{# Expects 'event_data' variable (array with 'entity', 'duration', 'location', 'user_participation_status') #}
{% set event = event_data.entity %}
{% set user_status = event_data.user_participation_status|default(null) %}
{% set location_display = event_data.location|default('-') %}
{% set duration_display = event_data.duration|default(null) %}

{# ---- STYLES NEEDED FOR THIS CARD --- #}
{# (These should ideally be in your global CSS or base template styles) #}
{% block stylesheets %}
    {# Only include if not already globally available #}
    <style>
        /* Reusable Button Styles */
        .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.5rem 1rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; white-space: nowrap; }
        .button-sm { padding: 0.375rem 0.75rem; font-size: 0.75rem; }
        .button-primary { background-color: #3b82f6; color: white; border-color: #3b82f6; } .button-primary:hover { background-color: #2563eb; border-color: #1d4ed8;}
        .button-secondary { background-color: #e5e7eb; color: #374151; border-color: #d1d5db; } .button-secondary:hover { background-color: #d1d5db; border-color: #9ca3af;}
        .button-outline-danger { color: #dc2626; border-color: #ef4444; background-color: transparent;} .button-outline-danger:hover { background-color: #fee2e2; }
        .button-outline-secondary { color: #6b7280; border-color: #d1d5db; background-color: transparent;} .button-outline-secondary:hover { background-color: #f3f4f6; }

        /* Status Badge Styles */
        .status-badge { padding: 0.25em 0.6em; border-radius: 9999px; font-size: 0.7rem; font-weight: 500; text-transform: uppercase; letter-spacing: 0.05em; white-space: nowrap; line-height: 1; }
        .status-a_venir { background-color: #dbeafe; color: #1e40af; } /* blue */
        .status-en_cours { background-color: #dcfce7; color: #166534; } /* green */
        .status-termine { background-color: #f3f4f6; color: #374151; } /* gray */
        .status-annule { background-color: #fee2e2; color: #991b1b; } /* red */
        .badge-green { background-color: #dcfce7; color: #166534; } /* For 'Inscrit' */

        /* Ensure SVGs render correctly */
        svg { display: inline-block; vertical-align: middle; }
    </style>
{% endblock %}

{% if event %} {# Only render card if event exists #}
    <div class="event-card flex flex-col bg-white rounded-lg shadow-lg overflow-hidden transition-all duration-300 hover:shadow-xl hover:-translate-y-1 border border-gray-200">

        {# Card Header with Gradient and Title #}
        <div class="h-32 bg-gradient-to-br from-blue-500 to-indigo-600 flex items-center justify-center relative p-4">
            {# Optional overlay for better text contrast #}
            {# <div class="absolute inset-0 bg-black/20"></div> #}
            <h3 class="text-xl font-bold text-white text-center line-clamp-2 relative z-10">
                {{ event.titre }}
            </h3>
        </div>

        {# Card Body #}
        <div class="p-5 flex flex-col flex-grow"> {# Use flex-grow to push footer down #}

            {# Description (Truncated) #}
            <p class="text-sm text-gray-600 mb-4 line-clamp-3 leading-relaxed flex-grow"> {# Use flex-grow to take available space #}
                {{ event.description|striptags|default('Aucune description fournie.') }}
            </p>

            {# Metadata Section #}
            <div class="space-y-2 mb-5 text-xs text-gray-600">
                {# Date Début #}
                <div class="flex items-center gap-2">
                    <svg class="w-3.5 h-3.5 flex-shrink-0 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/></svg>
                    <span class="font-medium">{{ event.dateDebut|date('d M Y, H:i') }}</span>
                </div>
                <div class="flex items-center gap-2">
                    <svg class="w-3.5 h-3.5 flex-shrink-0 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.828 0l-4.243-4.243a8 8 0 1111.314 0z"/><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/></svg>
                    <span class="font-medium">Min Autonomie:{{ event.trottinetteMinAutonomie }}</span>
                </div>
                {# Duration (if available) #}
                {% if duration_display %}
                    <div class="flex items-center gap-2">
                        <svg class="w-3.5 h-3.5 flex-shrink-0 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/></svg>
                        <span>Durée: {{ duration_display }}</span>
                    </div>
                {% endif %}

                {# Location #}
                <div class="flex items-center gap-2">
                    <svg class="w-3.5 h-3.5 flex-shrink-0 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.828 0l-4.243-4.243a8 8 0 1111.314 0z"/><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/></svg>
                    <span>{{ location_display }}</span>
                </div>

                {# Participants Count #}
                <div class="flex items-center gap-2">
                    <svg class="w-3.5 h-3.5 flex-shrink-0 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z"/></svg>
                    <span>{{ event.participations|length }} participant{{ event.participations|length > 1 ? 's' : '' }}</span>
                </div>
            </div>

            {# Footer Section - Aligned to bottom #}
            <div class="mt-auto pt-4 border-t border-gray-100 flex items-center justify-between gap-2">
                {# Status Badge #}
                <span class="status-badge status-{{ event.statut|lower }}">
                {% if event.statut == 'A_VENIR' %}À venir
                {% elseif event.statut == 'EN_COURS' %}En cours
                {% elseif event.statut == 'TERMINE' %}Terminé
                {% elseif event.statut == 'ANNULE' %}Annulé
                {% else %}{{ event.statut }}{% endif %}
            </span>

                {# Action Buttons #}
                <div class="flex gap-2 flex-shrink-0">
                    {# Details Button is always shown #}
                    {# Use appropriate route for client view #}
                    <a href="{{ path('client_event_show', {'id': event.id}) }}"
                       class="button button-secondary button-sm flex items-center gap-1 text-xs" title="Voir les détails">
                        {# Eye Icon SVG #}
                        <svg class="w-3.5 h-3.5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.478 0-8.268-2.943-9.542-7z"></path></svg>
                        Détails
                    </a>

                    {# Conditional Participation Buttons #}
                    {% if event.statut == 'A_VENIR' %}
                        {% if is_granted('IS_AUTHENTICATED_FULLY') %}
                            {# Check against the ParticipationStatus Enum #}
                            {% if user_status == constant('App\\Enum\\ParticipationStatus::INSCRIT') %}
                                {# --- Cancel Button --- #}
                                {# Use client route #}
                                <form action="{{ path('client_event_cancel_participation', {'id': event.id}) }}" method="post" class="inline-block">
                                    {# Consider adding CSRF token here for security #}
                                    {# <input type="hidden" name="_token" value="{{ csrf_token('cancel_' ~ app.user.id ~ '_' ~ event.id) }}"> #}
                                    <button type="submit"
                                            class="button button-outline-danger button-sm flex items-center gap-1 text-xs"
                                            onclick="return confirm('Annuler votre participation ?');"
                                            title="Se désinscrire">
                                        {# X Circle Icon SVG #}
                                        <svg class="w-3.5 h-3.5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
                                        <span>Annuler</span> {# Use span for potentially hiding text on small screens #}
                                    </button>
                                </form>
                            {% else %} {# Covers both NULL (not participated) and ANNULE status #}
                                {# --- Participate/Re-register Button --- #}
                                {# Use client route #}
                                <form action="{{ path('client_event_participate', {'id': event.id}) }}" method="post" class="inline-block">
                                    {# Consider adding CSRF token #}
                                    {# <input type="hidden" name="_token" value="{{ csrf_token('participate_' ~ event.id) }}"> #}
                                    <button type="submit"
                                            class="button button-primary button-sm flex items-center gap-1 text-xs"
                                            title="{{ user_status == constant('App\\Enum\\ParticipationStatus::ANNULE') ? 'Se réinscrire' : 'Participer' }}">
                                        {% if user_status == constant('App\\Enum\\ParticipationStatus::ANNULE') %}
                                            {# Refresh Icon SVG #}
                                            <svg class="w-3.5 h-3.5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m-15.357-2a8.001 8.001 0 0115.357-2m0 0H15"></path></svg>
                                            <span>Réinscrire</span>
                                        {% else %}
                                            {# User Plus Icon SVG #}
                                            <svg class="w-3.5 h-3.5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"></path></svg>
                                            <span>Participer</span>
                                        {% endif %}
                                    </button>
                                </form>
                            {% endif %}
                        {% else %}
                            {# --- Login Button --- #}
                            <a href="{{ path('app_login') }}" {# Or app_login_page #}
                               class="button button-secondary button-sm flex items-center gap-1 text-xs"
                               title="Connectez-vous pour participer">
                                {# Login Icon SVG #}
                                <svg class="w-3.5 h-3.5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1"></path></svg>
                                <span>Connexion</span>
                            </a>
                        {% endif %}
                    {% endif %} {# End check for event.statut == 'A_VENIR' #}
                </div> {# End Actions flex container #}
            </div> {# End Footer #}
        </div> {# End Card Body #}
    </div> {# End Card #}
{% endif %} {# End check event exists #}


----- /Users/mac/Downloads/my_project_troti-vf/templates/event/edit.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Modifier l'événement{% endblock %}

{% block body %}
    <div class="container mt-4">
        <nav aria-label="breadcrumb" class="mb-4">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="{{ path('app_event_index') }}">Événements</a></li>
                <li class="breadcrumb-item active">Modifier l'événement</li>
            </ol>
        </nav>

        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-body p-4">
                        <h1 class="card-title display-5 mb-4"><i class="fas fa-edit me-3"></i>Modifier l'événement</h1>

                        {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate'}}) }}
                            <div class="row g-4">
                                <div class="col-12">
                                    <div class="form-floating">
                                        {{ form_widget(form.titre, {'attr': {'class': 'form-control', 'placeholder': 'Titre de l\'événement'}}) }}
                                        {{ form_label(form.titre) }}
                                        {{ form_errors(form.titre) }}
                                    </div>
                                </div>

                                <div class="col-12">
                                    <div class="form-floating">
                                        {{ form_widget(form.description, {'attr': {'class': 'form-control', 'placeholder': 'Description de l\'événement', 'style': 'height: 100px'}}) }}
                                        {{ form_label(form.description) }}
                                        {{ form_errors(form.description) }}
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-floating">
                                        {{ form_widget(form.dateDebut, {'attr': {'class': 'form-control', 'placeholder': 'Date de début'}}) }}
                                        {{ form_label(form.dateDebut) }}
                                        {{ form_errors(form.dateDebut) }}
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-floating">
                                        {{ form_widget(form.dateFin, {'attr': {'class': 'form-control', 'placeholder': 'Date de fin'}}) }}
                                        {{ form_label(form.dateFin) }}
                                        {{ form_errors(form.dateFin) }}
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        {{ form_widget(form.statut, {'attr': {'class': 'form-control', 'placeholder': 'statut'}}) }}
                                        {{ form_label(form.statut) }}
                                        {{ form_errors(form.statut) }}
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        {{ form_widget(form.state, {'attr': {'class': 'form-control', 'placeholder': 'State'}, 'choice_value': 'value', 'choice_label': 'value'}) }}
                                        {{ form_label(form.state) }}
                                        {{ form_errors(form.state) }}
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-floating">
                                        {{ form_widget(form.trottinetteMinAutonomie, {'attr': {'class': 'form-control', 'placeholder': 'Autonomie minimale de la trottinette'}}) }}
                                        {{ form_label(form.trottinetteMinAutonomie) }}
                                        {{ form_errors(form.trottinetteMinAutonomie) }}
                                    </div>
                                </div>

                                <div class="col-12 d-flex justify-content-between align-items-center mt-4">
                                    <a href="{{ path('app_admin_events') }}" class="btn btn-secondary btn-lg">
                                        <i class="fas fa-arrow-left me-2"></i>Retour à la liste
                                    </a>
                                    <button type="submit" class="btn btn-primary btn-lg">
                                        <i class="fas fa-save me-2"></i>Enregistrer
                                    </button>
                                </div>
                            </div>
                        {{ form_end(form) }}
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/event/new.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Créer un nouvel événement{% endblock %}

{% block body %}
    <div class="container mt-4">
        <nav aria-label="breadcrumb" class="mb-4">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="{{ path('app_event_index') }}">Événements</a></li>
                <li class="breadcrumb-item active">Créer un nouvel événement</li>
            </ol>
        </nav>

        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-body p-4">
                        <h1 class="card-title display-5 mb-4">
                            <i class="fas fa-plus-circle me-3 text-primary"></i>Créer un nouvel événement
                        </h1>

                        {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate'}}) }}
                            <div class="row g-4">
                                <div class="col-12">
                                    <div class="form-floating">
                                        {{ form_widget(form.titre, {'attr': {'class': 'form-control', 'placeholder': 'Titre de l\'événement'}}) }}
                                        {{ form_label(form.titre) }}
                                        {{ form_errors(form.titre) }}
                                    </div>
                                </div>

                                <div class="col-12">
                                    <div class="form-floating">
                                        {{ form_widget(form.description, {'attr': {'class': 'form-control', 'placeholder': 'Description de l\'événement', 'style': 'height: 100px'}}) }}
                                        {{ form_label(form.description) }}
                                        {{ form_errors(form.description) }}
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-floating">
                                        {{ form_widget(form.dateDebut, {'attr': {'class': 'form-control', 'placeholder': 'Date de début'}}) }}
                                        {{ form_label(form.dateDebut) }}
                                        {{ form_errors(form.dateDebut) }}
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-floating">
                                        {{ form_widget(form.dateFin, {'attr': {'class': 'form-control', 'placeholder': 'Date de fin'}}) }}
                                        {{ form_label(form.dateFin) }}
                                        {{ form_errors(form.dateFin) }}
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-floating">
                                        {{ form_widget(form.state, {'attr': {'class': 'form-control', 'placeholder': 'State'}}) }}
                                        {{ form_label(form.state) }}
                                        {{ form_errors(form.state) }}
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-floating">
                                        {{ form_widget(form.trottinetteMinAutonomie, {'attr': {'class': 'form-control', 'placeholder': 'Autonomie minimale de la trottinette'}}) }}
                                        {{ form_label(form.trottinetteMinAutonomie) }}
                                        {{ form_errors(form.trottinetteMinAutonomie) }}
                                    </div>
                                </div>

                                <div class="col-12 d-flex justify-content-between align-items-center mt-4">
                                    <a href="{{ path('app_admin_events') }}" class="btn btn-secondary btn-lg">
                                        <i class="fas fa-arrow-left me-2"></i>Retour à la liste
                                    </a>
                                    <button type="submit" class="btn btn-primary btn-lg">
                                        <i class="fas fa-plus me-2"></i>Créer l'événement
                                    </button>
                                </div>
                            </div>
                        {{ form_end(form) }}
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/event/index.html.twig -----
{# templates/public/event/index.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Événements - TrottiCare{% endblock %}

{% block body %}
    <div data-lov-id="src/pages/Events.tsx:76:4" class="min-h-screen bg-gray-50 page-content"> {# Added page-content for flex layout #}
        {# Header is included in base.html.twig #}

        <div data-lov-id="src/pages/Events.tsx:78:6" class="container mx-auto px-4 py-16"> {# Use container class from CSS #}
            <h2 data-lov-id="src/pages/Events.tsx:79:8" class="text-3xl font-bold text-gray-900 mb-8 section-title"> {# Use classes from CSS #}
                Événements
            </h2>

            {# Filter and Search Controls #}
            <div data-lov-id="src/pages/Events.tsx:81:8" class="mb-6 flex flex-col md:flex-row gap-4 items-start md:items-center event-filters"> {# Added custom class #}
                {# Search Form #}
                <form method="get" action="{{ path('public_event_index') }}" class="flex-grow max-w-md"> {# Use flex-grow #}
                    <input type="hidden" name="filter" value="{{ current_filter }}"> {# Keep current filter when searching #}
                    <input data-lov-id="src/pages/Events.tsx:82:10"
                           type="search" {# Use search type #}
                           name="search" {# Add name attribute #}
                           class="search-input" {# Use custom class for styling #}
                           placeholder="Rechercher des événements..."
                           value="{{ search_term|default('') }}">
                    {# Consider adding a submit button or trigger search on input change via JS #}
                    {# <button type="submit" class="button button-secondary">Rechercher</button> #}
                </form>

                {# Filter Buttons (Links that reload the page with query params) #}
                <div data-lov-id="src/pages/Events.tsx:89:10" class="flex gap-2 filter-buttons"> {# Added custom class #}
                    <a href="{{ path('public_event_index', {'filter': 'all', 'search': search_term}) }}"
                       class="button {{ current_filter == 'all' ? 'button-primary' : 'button-secondary' }}"> {# Active state styling #}
                        Tous
                    </a>
                    <a href="{{ path('public_event_index', {'filter': 'upcoming', 'search': search_term}) }}"
                       class="button {{ current_filter == 'upcoming' ? 'button-primary' : 'button-secondary' }}">
                        À venir
                    </a>
                    <a href="{{ path('public_event_index', {'filter': 'past', 'search': search_term}) }}"
                       class="button {{ current_filter == 'past' ? 'button-primary' : 'button-secondary' }}">
                        Passés
                    </a>
                </div>
            </div>

            {# Event Grid #}
            <div data-lov-id="src/pages/Events.tsx:111:8" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 events-grid"> {# Use classes from CSS #}
                {% for event_data in events_data %}
                    {# Pass the whole event_data array to the partial #}
                    {% include 'public/event/_event_card.html.twig' with { 'event_data': event_data } %}
                {% else %}
                    <div class="col-span-full text-center py-10 text-gray-500"> {# Use col-span-full #}
                        <p><i class="fas fa-info-circle fa-2x mb-3"></i></p> {# Example icon #}
                        <p>Aucun événement trouvé correspondant à vos critères.</p>
                    </div>
                {% endfor %}
            </div>

        </div> {# End container #}
    </div> {# End page-content wrapper #}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    {# Optional JS for live search/filter without page reload (more complex) #}
    <script>
        // Example: Basic active state toggling for filter buttons (if not using page reload)
        /*
        document.querySelectorAll('.filter-buttons .button').forEach(button => {
            button.addEventListener('click', function(e) {
                 // Remove active class from all
                 document.querySelectorAll('.filter-buttons .button').forEach(btn => {
                     btn.classList.remove('button-primary');
                     btn.classList.add('button-secondary');
                 });
                 // Add active class to clicked button
                 this.classList.remove('button-secondary');
                 this.classList.add('button-primary');
                 // Add AJAX call or form submission logic here
                 // e.preventDefault(); // Prevent link navigation if using AJAX
            });
        });
        */
    </script>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/event/_form.html.twig -----
// ...existing code...
{{ form_row(form.gouvernorat, {
    'label': 'Gouvernorat',
    'attr': {'class': 'form-select'}
}) }}
// ...existing code...



----- /Users/mac/Downloads/my_project_troti-vf/templates/event/show.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}{{ event.titre }} - Détails de l'événement{% endblock %}

{% block body %}
    <div class="container mt-4">
        {# Breadcrumb Navigation #}
        <nav aria-label="breadcrumb" class="mb-4">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="{{ path('app_event_index') }}">Événements</a></li>
                <li class="breadcrumb-item active" aria-current="page">{{ event.titre|slice(0, 50) ~ (event.titre|length > 50 ? '...' : '') }}</li> {# Truncate long titles #}
            </ol>
        </nav>

        <div class="row">
            {# Main Event Details Column #}
            <div class="col-lg-8">
                <div class="card shadow-sm mb-4">
                    <div class="card-body">
                        {# Event Title #}
                        <h1 class="card-title display-6 mb-3">{{ event.titre }}</h1>

                        {# Event Metadata #}
                        <div class="event-meta mb-4 border-top border-bottom py-3">
                            <div class="row g-3">
                                <div class="col-md-6">
                                    <div class="d-flex align-items-center">
                                        {# Use Bootstrap Icons consistently #}
                                        <i class="bi bi-calendar-event text-primary fs-3 me-3"></i>
                                        <div>
                                            <h6 class="mb-1 text-muted">Date de début</h6>
                                            <p class="mb-0 fw-bold">{{ event.dateDebut ? event.dateDebut|date('d M Y \\à H:i') : 'Non définie' }}</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="d-flex align-items-center">
                                        <i class="bi bi-calendar-check text-primary fs-3 me-3"></i>
                                        <div>
                                            <h6 class="mb-1 text-muted">Date de fin</h6>
                                            <p class="mb-0 fw-bold">{{ event.dateFin ? event.dateFin|date('d M Y \\à H:i') : 'Non définie' }}</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="d-flex align-items-center">
                                        <i class="bi bi-geo-alt-fill text-primary fs-3 me-3"></i>
                                        <div>
                                            <h6 class="mb-1 text-muted">Lieu (Gouvernorat)</h6>
                                            {# Use the 'state' property which holds the GouvernoratEnum #}
                                            <p class="mb-0 fw-bold">{{ event.state ? event.state.label : 'Non défini' }}</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="d-flex align-items-center">
                                        <i class="bi bi-battery-charging text-primary fs-3 me-3"></i>
                                        <div>
                                            <h6 class="mb-1 text-muted">Autonomie minimale requise</h6>
                                            <p class="mb-0 fw-bold">
                                                {% if event.trottinetteMinAutonomie is not null and event.trottinetteMinAutonomie > 0 %}
                                                    {{ event.trottinetteMinAutonomie }} km
                                                {% else %}
                                                    Aucune
                                                {% endif %}
                                            </p>
                                        </div>
                                    </div>
                                </div>
                                {# Removed redundant gouvernorat check as it's now the 'lieu' field #}
                            </div>
                        </div>

                        {# Event Description #}
                        <div class="description mb-4">
                            <h5 class="mb-2">Description</h5>
                            {# Use nl2br filter to render line breaks from the textarea input #}
                            <p class="mb-0">{{ event.description|nl2br }}</p>
                        </div>

                        {# Action Buttons Footer #}
                        <div class="card-footer bg-transparent border-top pt-3 d-flex flex-wrap justify-content-between align-items-center gap-2"> {# Added gap-2 #}
                            {# Back Button #}
                            <a href="{{ path('app_admin_events') }}" class="btn btn-sm btn-outline-secondary">
                                <i class="bi bi-arrow-left me-1"></i>Retour à la liste
                            </a>

                            {# Admin/Partenaire Actions - Consider conditional display with is_granted if security is added back #}
                            <div>
                                {# Edit Button - Visible to relevant roles #}
                                {# {% if is_granted('ROLE_ADMIN') or (is_granted('ROLE_PARTENAIRE') and event.organisateur == app.user) %} #}
                                <a href="{{ path('app_event_edit', {'id': event.id}) }}" class="btn btn-sm btn-primary me-2">
                                    <i class="bi bi-pencil-fill me-1"></i>Modifier
                                </a>
                                {# {% endif %} #}

                                {# Participants Button - Visible to relevant roles #}
                                {# {% if is_granted('ROLE_ADMIN') %} #}
                                <a href="{{ path('app_event_participants', {'id': event.id}) }}" class="btn btn-sm btn-info">
                                    <i class="bi bi-people-fill me-1"></i>Voir les participants
                                </a>
                                {# {% endif %} #}
                            </div>

                            {# Client Participation Actions #}
                            <div>
                                {% if app.user %} {# Only show buttons if a user concept exists #}
                                    {% if user_participation and user_participation.statut == constant('App\\Enum\\ParticipationStatus::INSCRIT') %} {# <--- CORRECTED HERE #}
                                        {# User is participating - Show Cancel Button #}
                                        {# WARNING: No CSRF protection if removed! #}
                                        <form action="{{ path('app_event_cancel_participation', {'id': event.id}) }}" method="post" onsubmit="return confirm('Voulez-vous vraiment annuler votre participation ?');" class="d-inline">
                                            {# <input type="hidden" name="_token" value="{{ csrf_token('cancel'~event.id~app.user.id) }}"> #} {# CSRF Removed/Optional #}
                                            <button type="submit" class="btn btn-sm btn-outline-danger">
                                                <i class="bi bi-x-circle me-1"></i> Annuler Participation
                                            </button>
                                            <span class="badge bg-success ms-1 align-middle">Inscrit</span>
                                        </form>
                                    {% else %}
                                        {# User is NOT actively participating (might be cancelled or never joined) - Show Participate Button #}
                                        {# WARNING: No CSRF protection if removed! #}
                                        <form action="{{ path('app_event_participate', {'id': event.id}) }}" method="post" class="d-inline">
                                            {# <input type="hidden" name="_token" value="{{ csrf_token('participate'~event.id) }}"> #} {# CSRF Removed/Optional #}
                                            <button type="submit" class="btn btn-sm btn-success">
                                                {% if user_participation and user_participation.statut == constant('App\\Enum\\ParticipationStatus::ANNULE') %} {# <--- CORRECTED HERE #}
                                                    <i class="bi bi-arrow-clockwise me-1"></i> Réactiver Participation
                                                {% else %}
                                                    <i class="bi bi-check-circle me-1"></i> Participer
                                                {% endif %}
                                            </button>
                                        </form>
                                        {% if user_participation and user_participation.statut == constant('App\\Enum\\ParticipationStatus::ANNULE') %} {# <--- CORRECTED HERE #}
                                            <span class="badge bg-secondary ms-1 align-middle">Annulé</span>
                                        {% endif %}
                                    {% endif %}
                                {% else %}
                                    {# Optionally show a message or login link for non-logged-in users #}
                                    <a href="{{ path('app_login') }}" class="btn btn-sm btn-outline-primary">Connectez-vous pour participer</a>
                                {% endif %}
                            </div>
                        </div> {# End Card Footer #}
                    </div> {# End Card Body #}
                </div> {# End Card #}
            </div> {# End Main Column #}

            {# Sidebar Column #}
            <div class="col-lg-4">
                <div class="card shadow-sm">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="bi bi-gear-fill me-2"></i>Actions Administrateur</h5> {# Assuming delete is admin action #}
                    </div>
                    <div class="card-body text-center">
                        {# Delete Form - Consider conditional display with is_granted if security is added back #}
                        {# {% if is_granted('ROLE_ADMIN') %} #}
                        {% if event.id is defined and event.id %} {# Ensure event.id exists before including delete form #}
                            {{ include('event/_delete_form.html.twig') }}
                        {% else %}
                            <p class="text-muted">Impossible de supprimer cet événement (ID manquant).</p>
                        {% endif %}
                        {# {% else %}
                        <p class="text-muted">Aucune action administrateur disponible.</p>
                    {% endif %} #}
                    </div>
                </div>
                {# You could add more sidebar cards here - e.g., map snippet, related events #}
            </div> {# End Sidebar Column #}
        </div> {# End Row #}
    </div> {# End Container #}
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/event/participants.html.twig -----
{% extends 'base.html.twig' %} {# Or your admin base template if different #}

{% block title %}Participants - {{ event.titre }}{% endblock %}

{% block body %}
    <div class="container mt-4">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h1 class="h3">Participants pour : <span class="fw-normal">{{ event.titre }}</span></h1>
            {# Adjust the back link if needed based on where admins/partners view events #}
            <a href="{{ path(app.user and is_granted('ROLE_ADMIN') ? 'app_admin_events' : 'app_admin_events') }}" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left"></i> Retour aux événements
            </a>
        </div>

        <div class="card shadow-sm">
            <div class="card-header d-flex justify-content-between align-items-center">
                <span><i class="bi bi-people-fill me-2"></i>Liste des Participants</span>
                <span class="badge bg-primary rounded-pill">{{ participants|length }}</span>
            </div>
            <div class="card-body p-0"> {# Remove padding for full-width table #}
                {% if participants is not empty %}
                    <div class="table-responsive"> {# Add responsiveness #}
                        <table class="table table-striped table-hover mb-0"> {# Remove bottom margin #}
                            <thead class="table-light">
                            <tr>
                                <th scope="col">Nom Complet</th>
                                <th scope="col">Email</th>
                                <th scope="col">Téléphone</th>
                                <th scope="col">Date d'Inscription</th>
                                <th scope="col">Statut</th> {# Added Status Column #}
                            </tr>
                            </thead>
                            <tbody>
                            {# Use a more descriptive loop variable name like 'participation' #}
                            {% for participation in participants %}
                                <tr>
                                    <td>
                                        {# Access the user THROUGH the participation object #}
                                        {# Use null-safe operator (?.) in case utilisateur is null #}
                                        {# Or use an if check #}
                                        {% if participation.utilisateur %}
                                            {{ participation.utilisateur.fullName }} {# Use the helper method #}
                                            {# Or: {{ participation.utilisateur.prenom }} {{ participation.utilisateur.nom }} #}
                                        {% else %}
                                            <span class="text-muted fst-italic">Utilisateur Supprimé</span>
                                        {% endif %}
                                    </td>
                                    <td>
                                        {# Access the user's email #}
                                        {{ participation.utilisateur.email ?? '-' }} {# Null coalescing operator #}
                                    </td>
                                    <td>
                                        {# Access the user's telephone #}
                                        {{ participation.utilisateur.telephone ?? '-' }}
                                    </td>
                                    <td>
                                        {{ participation.dateInscription ? participation.dateInscription|date('d/m/Y H:i') : 'N/A' }}
                                    </td>
                                    <td>
                                        {# Display participation status #}
                                        {% if participation.statut == constant('App\\Enum\\ParticipationStatus::INSCRIT') %} {# <--- CORRECTED HERE #}
                                            <span class="badge bg-success">{{ participation.statut.value|replace({'_': ' '})|capitalize }}</span>
                                        {% elseif participation.statut == constant('App\\Enum\\ParticipationStatus::ANNULE') %} {# <--- CORRECTED HERE #}
                                            <span class="badge bg-danger">{{ participation.statut.value|replace({'_': ' '})|capitalize }}</span>
                                        {% else %}
                                            <span class="badge bg-secondary">{{ participation.statut ? participation.statut.value|replace({'_': ' '})|capitalize : 'Inconnu' }}</span>
                                        {% endif %}
                                    </td>
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>
                    </div>
                {% else %}
                    <div class="card-body"> {# Add padding back if table is empty #}
                        <p class="text-center text-muted mb-0">Aucun participant inscrit pour cet événement.</p>
                    </div>
                {% endif %}
            </div>
            {# Optional: Add Export to PDF/CSV button here later #}
            {# <div class="card-footer text-end">
             <a href="#" class="btn btn-sm btn-primary disabled">Exporter PDF</a>
         </div> #}
        </div>
    </div>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/client/dashboard/index.html.twig -----
{# templates/client/dashboard/index.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Mon Tableau de Bord - TrottiCare{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# Ensure Tailwind is loaded via base.html.twig #}
    <style>
        /* Reusable Button Styles (adapt from previous examples) */
        .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.5rem 1rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; white-space: nowrap; }
        .button-sm { padding: 0.375rem 0.75rem; font-size: 0.75rem; }
        .button-secondary { background-color: #e5e7eb; color: #374151; border-color: #d1d5db; } .button-secondary:hover { background-color: #d1d5db; border-color: #9ca3af;}
        .button-outline-primary { color: #3b82f6; border-color: #3b82f6; background-color: transparent;} .button-outline-primary:hover { background-color: #eff6ff; }
        .button-outline-secondary { color: #6b7280; border-color: #d1d5db; background-color: transparent;} .button-outline-secondary:hover { background-color: #f3f4f6; }
        .button-outline-danger { color: #dc2626; border-color: #ef4444; background-color: transparent;} .button-outline-danger:hover { background-color: #fee2e2; }
        .button-outline-info { color: #0ea5e9; border-color: #0ea5e9; background-color: transparent;} .button-outline-info:hover { background-color: #f0f9ff; }
        .button:disabled { opacity: 0.6; cursor: not-allowed; }

        /* Reusable Status Badge Styles */
        .status-badge { padding: 0.25em 0.6em; border-radius: 9999px; font-size: 0.7rem; font-weight: 500; text-transform: uppercase; letter-spacing: 0.05em; white-space: nowrap; line-height: 1; }
        .badge-green { background-color: #dcfce7; color: #166534; }
        .badge-red { background-color: #fee2e2; color: #991b1b; }
        .badge-yellow { background-color: #fef9c3; color: #854d0e; }
        .badge-gray { background-color: #f3f4f6; color: #374151; }
        .badge-blue { background-color: #dbeafe; color: #1e40af; }
        .badge-teal { background-color: #ccfbf1; color: #0f766e; } /* Example for point relais */
        .badge-light-muted { background-color: #f3f4f6; color: #6b7280; font-weight: 400;}

        /* FontAwesome Icons */
        .fas { display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; -webkit-font-smoothing: antialiased; font-family: "Font Awesome 6 Free"; font-weight: 900; }
        .fa-qrcode:before { content: "\f029"; } .fa-map-marked-alt:before { content: "\f5a0"; }
        .fa-user-circle:before { content: "\f2bd"; } .fa-motorcycle:before { content: "\f21c"; }
        .fa-info-circle:before { content: "\f05a"; } .fa-battery-three-quarters:before { content: "\f241"; }
        .fa-store:before { content: "\f54e"; } .fa-calendar-times:before { content: "\f273"; }
        .fa-cog:before { content: "\f013"; } .fa-calendar-alt:before { content: "\f073"; }
        .fa-map-marker-alt:before { content: "\f3c5"; } .fa-clock:before { content: "\f017"; }
        .fa-check-circle:before { content: "\f058"; }
        .me-1 { margin-right: 0.25rem; } .me-2 { margin-right: 0.5rem; }
        .mb-1 { margin-bottom: 0.25rem; } .mb-2 { margin-bottom: 0.5rem; }
        .fa-lg { font-size: 1.33333em; line-height: 0.75em; vertical-align: -.0667em; }
        .fa-2x { font-size: 2em; }

    </style>
{% endblock %}

{% block body %}
    <div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
        <div class="container mx-auto max-w-7xl">

            {# ==== HEADER ==== #}
            <header class="mb-8">
                <div class="flex flex-col md:flex-row justify-between items-start md:items-center gap-4">
                    <div>
                        <h1 class="text-2xl lg:text-3xl font-bold text-gray-900 mb-1">Salut, {{ utilisateur.prenom }} ! 👋</h1>
                        <p class="text-base lg:text-lg text-gray-600">Vos locations et événements en cours.</p>
                    </div>
                    {# Action Buttons - styled consistently #}
                    <div class="flex flex-wrap gap-2 mt-3 md:mt-0 flex-shrink-0">
                        <a href="{{ path('client_qr_scan') }}" class="button button-secondary button-sm">
                            <i class="fas fa-qrcode me-1"></i> Scanner QR
                        </a>
                        <a href="{{ path('client_map_display') }}" class="button button-secondary button-sm">
                            <i class="fas fa-map-marked-alt me-1"></i> Voir Carte
                        </a>
                        <a href="{{ path('app_client_profile_view') }}" class="button button-secondary button-sm">
                            <i class="fas fa-user-circle me-1"></i> Mon Profil
                        </a>
                    </div>
                </div>
                {% include 'partials/_flash_messages.html.twig' ignore missing %}
            </header>

            {# ==== MAIN GRID ==== #}
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 lg:gap-8">

                {# ---- RENTED SCOOTERS CARD ---- #}
                <section class="bg-white rounded-lg shadow-md border border-gray-200 flex flex-col">
                    {# Card Header #}
                    <div class="px-5 py-3 border-b border-gray-200 bg-blue-50 text-blue-800 flex items-center gap-2">
                        <i class="fas fa-motorcycle fa-lg"></i>
                        <h2 class="text-base font-semibold mb-0">Mes Locations Actives</h2>
                    </div>

                    {# Card Body (List or Message) #}
                    <div class="flex-grow"> {# Allows list to take space or message to center #}
                        {% if user_reservations is empty %}
                            <div class="p-6 text-center text-gray-500 flex flex-col items-center justify-center h-full">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-gray-400 mb-3" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="1"> <path stroke-linecap="round" stroke-linejoin="round" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" /> </svg>
                                <p class="text-sm">Vous n'avez aucune location en cours.</p>
                            </div>
                        {% else %}
                            <ul class="divide-y divide-gray-200"> {# Use ul/li for list semantics #}
                                {% for reservation in user_reservations %}
                                    {% set trottinette = reservation.trottinette %}
                                    <li class="p-4 flex gap-4 items-center hover:bg-gray-50 transition duration-150">
                                        {# Image Placeholder #}
                                        <img src="{{ asset('images/scooter-placeholder.png') }}" class="rounded w-20 h-16 object-cover flex-shrink-0 bg-gray-200" alt="{{ trottinette.modele }}">

                                        {# Info Section #}
                                        <div class="flex-grow">
                                            <div class="flex justify-between items-start mb-1">
                                                <h3 class="text-sm font-semibold text-gray-800 leading-tight">{{ trottinette.modele|default('Trottinette') }}</h3>
                                                <span class="status-badge badge-light-muted text-xs">{{ trottinette.numeroSerie }}</span>
                                            </div>
                                            {# Metadata #}
                                            <div class="text-xs text-gray-600 space-y-0.5 mb-2">
                                                <div class="flex items-center gap-1.5">
                                                    <i class="fas fa-battery-three-quarters text-green-500 fa-fw"></i>
                                                    <span>{{ trottinette.batterie|default('N/A') }}%</span>
                                                    {% if trottinette.pointRelais %}
                                                        <span class="mx-1 text-gray-300">|</span>
                                                        <i class="fas fa-store text-teal-500 fa-fw"></i>
                                                        <span>{{ trottinette.pointRelais.nom|slice(0, 15) ~ (trottinette.pointRelais.nom|length > 15 ? '...' : '') }}</span>
                                                    {% endif %}
                                                </div>
                                                <div class="flex items-center gap-1.5">
                                                    <i class="fas fa-calendar-times text-red-500 fa-fw"></i>
                                                    <span>Fin estimée: {{ reservation.dateFin ? reservation.dateFin|date('d/m H:i') : 'Inconnue' }}</span>
                                                </div>
                                            </div>
                                            {# Action Button #}
                                            <a href="#" class="button button-secondary button-sm w-full disabled text-xs" title="Fonctionnalité à venir">
                                                <i class="fas fa-cog me-1"></i> Gérer / Terminer (Bientôt)
                                            </a>
                                        </div>
                                    </li>
                                {% endfor %}
                            </ul>
                        {% endif %}
                    </div>

                    {# Card Footer Links #}
                    <div class="px-5 py-3 border-t border-gray-200 bg-gray-50 text-center">
                        <a href="{{ path('client_map_display') }}" class="button button-outline-primary button-sm mr-2">Trouver une trottinette</a>
                        <a href="{{ path('reservation_index') }}" class="button button-outline-secondary button-sm">Historique</a>
                    </div>
                </section>

                {# ---- UPCOMING EVENTS CARD ---- #}
                <section class="bg-white rounded-lg shadow-md border border-gray-200 flex flex-col">
                    {# Card Header #}
                    <div class="px-5 py-3 border-b border-gray-200 bg-indigo-50 text-indigo-800 flex items-center gap-2">
                        <i class="fas fa-calendar-alt fa-lg"></i>
                        <h2 class="text-base font-semibold mb-0">Mes Événements à venir</h2>
                    </div>

                    {# Card Body (List or Message) #}
                    <div class="flex-grow">
                        {% if upcoming_events is empty %}
                            <div class="p-6 text-center text-gray-500 flex flex-col items-center justify-center h-full">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-gray-400 mb-3" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="1"> <path stroke-linecap="round" stroke-linejoin="round" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" /> </svg>
                                <p class="text-sm">Aucun événement à venir.</p>
                            </div>
                        {% else %}
                            <ul class="divide-y divide-gray-200">
                                {% for event_data in upcoming_events %}
                                    {% set event = event_data.entity %}
                                    <li class="p-4 flex gap-4 items-center hover:bg-gray-50 transition duration-150">
                                        {# Image Placeholder #}
                                        <img src="{{ asset('images/event-placeholder.jpg') }}" class="rounded w-20 h-16 object-cover flex-shrink-0 bg-gray-200" alt="{{ event.titre }}">

                                        {# Info Section #}
                                        <div class="flex-grow">
                                            <div class="flex justify-between items-start mb-1">
                                                <h3 class="text-sm font-semibold text-gray-800 leading-tight">{{ event.titre }}</h3>
                                                <span class="status-badge badge-light-muted text-xs">{{ event.dateDebut|date('d M') }}</span>
                                            </div>
                                            {# Metadata #}
                                            <div class="text-xs text-gray-600 space-y-0.5 mb-2">
                                                <div class="flex items-center gap-1.5">
                                                    <i class="fas fa-map-marker-alt text-red-500 fa-fw"></i>
                                                    <span>{{ event_data.location|default('Lieu à définir') }}</span>
                                                </div>
                                                <div class="flex items-center gap-1.5">
                                                    <i class="fas fa-clock text-gray-400 fa-fw"></i>
                                                    <span>{{ event.dateDebut|date('H:i') }} {% if event_data.duration %} ({{ event_data.duration }}) {% endif %}</span>
                                                </div>
                                            </div>

                                            {# Participation Status/Action #}
                                            {% if event.id in participatingEventIds %}
                                                <form action="{{ path('app_event_cancel_participation', {'id': event.id}) }}" method="POST" class="m-0 flex justify-between items-center">
                                                    <span class="status-badge badge-green text-xs"><i class="fas fa-check-circle me-1"></i>Inscrit</span>
                                                    <button type="submit" class="button button-outline-danger button-sm text-xs" onclick="return confirm('Annuler votre participation ?');">Annuler</button>
                                                </form>
                                            {% else %}
                                                {# Button to view details if not participating #}
                                                <a href="{{ path('public_event_show', {'id': event.id }) }}" class="button button-outline-info button-sm w-full text-xs">
                                                    <i class="fas fa-info-circle me-1"></i> Voir Détails
                                                </a>
                                            {% endif %}
                                        </div>
                                    </li>
                                {% endfor %}
                            </ul>
                        {% endif %}
                    </div>

                    {# Card Footer Link #}
                    <div class="px-5 py-3 border-t border-gray-200 bg-gray-50 text-center">
                        <a href="{{ path('client_event_index') }}" class="button button-outline-secondary button-sm">Voir tous les événements</a>
                    </div>
                </section>

            </div> {# End Main Grid #}

        </div> {# End container #}
    </div> {# End page-content wrapper #}
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/client/dashboard/qr_scan.html.twig -----
{# templates/client/dashboard/qr_scan.html.twig #}
{% extends 'base.html.twig' %}
{% block title %}Scanner un QR Code{% endblock %}
{% block body %}
    <h2>QR Scanner</h2>
    <div id="qr-reader" style="width:500px"></div>
    <script src="https://unpkg.com/html5-qrcode" type="text/javascript"></script>
    <script>
        const html5QrCode = new Html5Qrcode("qr-reader");
        html5QrCode.start(
            { facingMode: "environment" },
            { fps: 10, qrbox: 250 },
            qrCodeMessage => {
                fetch("{{ path('client_qr_scan') }}", {
                    method: 'POST',
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify({ code: qrCodeMessage })
                })
                    .then(res => res.json())
                    .then(data => alert(data.message));
                html5QrCode.stop();
            },
            errorMessage => console.warn(`QR error: ${errorMessage}`)
        );
    </script>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/client/dashboard/map.html.twig -----
{# templates/client/dashboard/map.html.twig #}
{% extends 'base.html.twig' %}
{% block title %}Carte des Trottinettes{% endblock %}
{% block head %}
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
{% endblock %}
{% block body %}
    <h2>Carte des Trottinettes Disponibles</h2>
    <div id="map" style="height:600px;"></div>
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>
        const map = L.map('map').setView([36.8065, 10.1815], 12);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; OpenStreetMap contributors'
        }).addTo(map);

        const trottinettes = {{ trottinettes|json_encode|raw }};
        trottinettes.forEach(t => {
            if (t.localisation) {
                const [lat, lng] = t.localisation.split(',').map(Number);
                if (!isNaN(lat) && !isNaN(lng)) {
                    L.marker([lat, lng]).addTo(map)
                        .bindPopup(`<strong>${t.modele}</strong><br>${t.numeroSerie}`);
                }
            }
        });
    </script>
{% endblock %}



----- /Users/mac/Downloads/my_project_troti-vf/templates/client/profile/edit.html.twig -----
{# templates/client/profile/edit.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Modifier Mon Profil{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# Ensure Tailwind base styles are loaded via base.html.twig #}
    <style>
        /* Reusable form input/select styles (adapt from previous) */
        .form-input, .form-select {
            appearance: none; display: block; width: 100%;
            padding: 0.5rem 0.75rem; font-size: 0.875rem; line-height: 1.5;
            color: #1f2937; background-color: #fff; background-clip: padding-box;
            border: 1px solid #d1d5db; border-radius: 0.375rem;
            transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        }
        .form-select {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
            background-position: right 0.5rem center; background-repeat: no-repeat;
            background-size: 1.5em 1.5em; padding-right: 2.5rem;
        }
        .form-input:focus, .form-select:focus {
            outline: none; border-color: #3b82f6;
            box-shadow: 0 0 0 1px #3b82f6; /* ring-1 ring-blue-500 */
        }
        /* Error state styling */
        .border-error { border-color: #ef4444 !important; /* red-500 */ }
        .ring-error { box-shadow: 0 0 0 1px #ef4444 !important; /* ring-red-500 */ }
        .form-error-message {
            display: block; /* Show when errors exist */
            margin-top: 0.25rem; /* mt-1 */
            font-size: 0.75rem; /* text-xs */
            color: #dc2626; /* red-600 */
        }

        /* Reusable Button Styles (adapt from previous) */
        .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.625rem 1.25rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; white-space: nowrap; }
        .button-primary { background-color: #3b82f6; color: white; border-color: #3b82f6; } .button-primary:hover { background-color: #2563eb; border-color: #1d4ed8;}
        .button-secondary { background-color: #e5e7eb; color: #374151; border-color: #d1d5db; } .button-secondary:hover { background-color: #d1d5db; border-color: #9ca3af;}

        /* Bootstrap Icons */

    </style>
{% endblock %}

{% block body %}
    <div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
        <div class="container mx-auto max-w-2xl"> {# Slightly narrower container for profile edit #}

            {# 1. Header #}
            <h1 class="text-2xl lg:text-3xl font-bold text-gray-900 mb-6">
                Modifier Mon Profil
            </h1>

            {# 2. Flash Messages #}
            {% include 'partials/_flash_messages.html.twig' ignore missing %}

            {# 3. Form Card #}
            <div class="bg-white rounded-lg shadow p-6 md:p-8 border border-gray-200">
                {# Use the action from the form object #}
                {{ form_start(profileForm, {'attr': {'novalidate': 'novalidate'}}) }}

                {# General Form Error Summary (Optional) #}
                {% if profileForm.vars.submitted and not profileForm.vars.valid and profileForm.vars.errors|length > 0 %}
                    <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-5" role="alert">
                        <strong class="font-bold">Veuillez corriger les erreurs :</strong>
                        <ul class="mt-2 list-disc list-inside text-sm">
                            {{ form_errors(profileForm) }}
                        </ul>
                    </div>
                {% endif %}

                {# Render form fields with Tailwind classes #}
                <div class="space-y-5">

                    {# Standard Fields #}
                    {% for field_name in ['nom', 'prenom', 'email', 'telephone'] %}
                        {% set field = attribute(profileForm, field_name) %}
                        <div>
                            {{ form_label(field, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                            {% set input_type = (field_name == 'email') ? 'email' : ((field_name == 'telephone') ? 'tel' : 'text') %}
                            {% set widget_attrs = {'class': 'form-input', 'type': input_type } %}
                            {# Optionally disable email editing #}
                            {# {% if field_name == 'email' %}{% set widget_attrs = widget_attrs|merge({'disabled': true, 'readonly': true, 'class': 'form-input bg-gray-100 cursor-not-allowed'}) %}{% endif %} #}
                            {% if profileForm.vars.submitted and not field.vars.valid %}
                                {% set widget_attrs = widget_attrs|merge({'class': 'form-input border-error focus:ring-error focus:border-error'}) %}
                            {% endif %}
                            {{ form_widget(field, {'attr': widget_attrs}) }}
                            {% if profileForm.vars.submitted and not field.vars.valid %}
                                <p class="form-error-message">{{ form_errors(field) }}</p>
                            {% endif %}
                        </div>
                    {% endfor %}

                    {# Optional Password Fields #}
                    {% if profileForm.plainPassword is defined %}
                        <div class="bg-blue-50 border-l-4 border-blue-400 p-3 my-5 text-sm text-blue-700">
                            Laissez les champs de mot de passe vides si vous ne souhaitez pas le modifier.
                        </div>
                        <div>
                            {{ form_label(profileForm.plainPassword.first, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                            {% set widget_attrs = {'class': 'form-input' } %}
                            {% if profileForm.vars.submitted and not profileForm.plainPassword.first.vars.valid %}
                                {% set widget_attrs = widget_attrs|merge({'class': 'form-input border-error focus:ring-error focus:border-error'}) %}
                            {% endif %}
                            {{ form_widget(profileForm.plainPassword.first, {'attr': widget_attrs, 'required': false}) }}
                            {% if profileForm.vars.submitted and not profileForm.plainPassword.first.vars.valid %}
                                <p class="form-error-message">{{ form_errors(profileForm.plainPassword.first) }}</p>
                            {% endif %}
                        </div>
                        <div>
                            {{ form_label(profileForm.plainPassword.second, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                            {% set widget_attrs = {'class': 'form-input' } %}
                            {% if profileForm.vars.submitted and not profileForm.plainPassword.second.vars.valid %}
                                {# Check overall plainPassword validity for second field error #}
                                {% set widget_attrs = widget_attrs|merge({'class': 'form-input border-error focus:ring-error focus:border-error'}) %}
                            {% endif %}
                            {{ form_widget(profileForm.plainPassword.second, {'attr': widget_attrs, 'required': false}) }}
                            {% if profileForm.vars.submitted and not profileForm.plainPassword.second.vars.valid %}
                                <p class="form-error-message">{{ form_errors(profileForm.plainPassword.second) }}</p>
                            {% endif %}
                            {# Display the parent repeated field error (like 'passwords must match') #}
                            {% if profileForm.vars.submitted and profileForm.plainPassword.vars.errors|length > 0 %}
                                <p class="form-error-message">{{ form_errors(profileForm.plainPassword) }}</p>
                            {% endif %}
                        </div>
                    {% endif %}

                </div>

                {# Form Actions/Buttons #}
                <div class="mt-8 pt-5 border-t border-gray-200 flex justify-end items-center gap-3">
                    <a href="{{ path('app_client_profile_view') }}" class="button button-secondary">
                        <i class="bi bi-x-lg me-1"></i> Annuler
                    </a>
                    <button type="submit" class="button button-primary">
                        <i class="bi bi-save-fill me-1"></i> Enregistrer
                    </button>
                </div>

                {{ form_end(profileForm) }}
            </div>

        </div> {# End Container #}
    </div> {# End Page Wrapper #}
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/client/profile/view.html.twig -----
{# templates/client/profile/view.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Mon Profil - TrottiCare{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# Ensure Tailwind is loaded via base.html.twig #}
    <style>
        /* Reusable Button Styles */
        .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.5rem 1rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; white-space: nowrap; }
        .button-sm { padding: 0.375rem 0.75rem; font-size: 0.75rem; }
        .button-primary { background-color: #3b82f6; color: white; border-color: #3b82f6; } .button-primary:hover { background-color: #2563eb; border-color: #1d4ed8;}
        .button-secondary { background-color: #e5e7eb; color: #374151; border-color: #d1d5db; } .button-secondary:hover { background-color: #d1d5db; border-color: #9ca3af;}
        .button-warning { background-color: #f59e0b; color: white; border-color: #f59e0b; } .button-warning:hover { background-color: #d97706; border-color: #b45309; }
        .button-outline-secondary { color: #6b7280; border-color: #d1d5db; background-color: transparent;} .button-outline-secondary:hover { background-color: #f3f4f6; }
        .button-outline-primary { color: #3b82f6; border-color: #3b82f6; background-color: transparent;} .button-outline-primary:hover { background-color: #eff6ff; }
        .button:disabled { opacity: 0.6; cursor: not-allowed; }

        /* FontAwesome Icons */

        /* Additional helper classes */
        .ms-2 { margin-left: 0.5rem; }
        .mb-1 { margin-bottom: 0.25rem; }
        .mt-3 { margin-top: 1rem; }
        .p-3 { padding: 0.75rem; }

        /* Webcam styles */
        #webcamFeed { background-color: #f3f4f6; /* gray-100 */ }
        #videoOverlay { background-color: rgba(0, 0, 0, 0.5); /* black opacity 50 */ }
        #videoOverlay .spinner-border { width: 3rem; height: 3rem; border-width: .3em; } /* Adjust spinner */
    </style>
{% endblock %}

{% block body %}
    <div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
        <div class="container mx-auto max-w-4xl">

            <h1 class="text-2xl lg:text-3xl font-bold text-gray-900 mb-6">Mon Profil</h1>

            {# Flash Messages #}
            {% include 'partials/_flash_messages.html.twig' ignore missing %}

            {# Standard profile info card - Tailwind styled #}
            <div class="bg-white rounded-lg shadow-md overflow-hidden border border-gray-200 mb-6">
                <div class="px-6 py-4 border-b border-gray-200 flex justify-between items-center">
                    <h2 class="text-lg font-medium text-gray-900 flex items-center">
                        <i class="bi bi-person-badge me-2"></i>Informations Personnelles
                    </h2>
                    <a href="{{ path('app_client_profile_edit') }}" class="button button-outline-primary button-sm">
                        <i class="bi bi-pencil-square me-1"></i> Modifier
                    </a>
                </div>
                <div class="p-6">
                    <dl class="grid grid-cols-1 md:grid-cols-3 gap-x-6 gap-y-4">
                        <div class="md:col-span-1">
                            <dt class="text-sm font-medium text-gray-500">Nom Complet</dt>
                            <dd class="mt-1 text-sm text-gray-900">{{ utilisateur.fullName }}</dd>
                        </div>
                        <div class="md:col-span-2">
                            <dt class="text-sm font-medium text-gray-500">Email</dt>
                            <dd class="mt-1 text-sm text-gray-900">{{ utilisateur.email }}</dd>
                        </div>
                        <div class="md:col-span-1">
                            <dt class="text-sm font-medium text-gray-500">Téléphone</dt>
                            <dd class="mt-1 text-sm text-gray-900">{{ utilisateur.telephone | default('Non renseigné') }}</dd>
                        </div>
                    </dl>
                </div>
            </div>

            {# --- Facial Recognition Setup Section - Tailwind styled --- #}
            <div class="bg-white rounded-lg shadow-md overflow-hidden border border-gray-200">
                <div class="px-6 py-4 border-b border-gray-200">
                    <h2 class="text-lg font-medium text-gray-900 flex items-center">
                        <i class="bi bi-camera-video-fill me-2"></i>Configuration Faciale
                    </h2>
                </div>
                <div class="p-6">
                    <div id="face-setup-area">
                        {# Status message based on whether embedding exists #}
                        {% if has_face_setup %}
                            <div id="face-configured-alert" class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative flex justify-between items-center" role="alert">
                                <span class="flex items-center"><i class="bi bi-check-circle-fill me-2"></i>Reconnaissance faciale configurée.</span>
                                <button id="recaptureFaceButton" class="button button-outline-secondary button-sm">
                                    <i class="bi bi-arrow-repeat me-1"></i>Reconfigurer
                                </button>
                            </div>
                        {% else %}
                            <div id="face-not-configured-alert" class="bg-yellow-100 border border-yellow-400 text-yellow-700 px-4 py-3 rounded relative flex justify-between items-center" role="alert">
                                <span class="flex items-center"><i class="bi bi-exclamation-triangle-fill me-2"></i>Non configurée.</span>
                                <button id="setupFaceButton" class="button button-warning button-sm text-white"> {# Added text-white #}
                                    <i class="bi bi-camera-fill me-1"></i> Configurer maintenant
                                </button>
                            </div>
                        {% endif %}

                        {# Capture UI: Hidden by default - Tailwind styled #}
                        <div id="face-capture-ui" style="display: none;" class="mt-4 border border-gray-300 p-4 rounded bg-gray-50">
                            <p class="text-center text-sm text-gray-600 mb-4">Placez votre visage clairement dans le cadre et cliquez sur "Capturer". Assurez un bon éclairage.</p>
                            <div class="flex justify-center mb-4">
                                {# Container for the video feed #}
                                <div class="relative inline-block w-[320px] h-[240px]"> {# Fixed size container #}
                                    <video id="webcamFeed" width="320" height="240" autoplay playsinline muted class="border border-gray-300 rounded shadow-sm bg-gray-200 block"></video>
                                    {# Overlay for loading/status #}
                                    <div id="videoOverlay" class="absolute inset-0 flex items-center justify-center bg-black bg-opacity-50 rounded" style="display: none; pointer-events: none;">
                                        {# Tailwind Spinner #}
                                        <svg class="animate-spin h-8 w-8 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                        </svg>
                                    </div>
                                </div>
                                {# Hidden canvas for capturing frames #}
                                <canvas id="captureCanvas" width="320" height="240" class="hidden"></canvas>
                            </div>
                            <div class="flex justify-center flex-wrap gap-2 mb-3">
                                <button id="startCaptureButton" class="button button-secondary button-sm">
                                    <i class="bi bi-camera-video-fill me-1"></i> Activer Webcam
                                </button>
                                <button id="captureFaceButton" class="button button-primary button-sm" disabled> {# Disabled initially #}
                                    <i class="bi bi-camera-fill me-1"></i> Capturer mon visage
                                </button>
                                <button id="cancelCaptureButton" class="button button-outline-secondary button-sm">
                                    <i class="bi bi-x-lg me-1"></i> Annuler
                                </button>
                            </div>
                            <div id="faceSetupStatus" class="mt-2 text-center text-sm text-gray-600"></div> {# Status messages appear here #}
                        </div>
                    </div>
                </div>
            </div>
            {# --- END Facial Recognition Setup Section --- #}

        </div> {# End Container #}
    </div> {# End Page Wrapper #}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    {# Make sure face-api.min.js is included #}
    {# --- JavaScript for Face Capture (No changes needed from previous version) --- #}
    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            // --- DOM Elements ---
            const webcamFeed = document.getElementById('webcamFeed');
            const captureCanvas = document.getElementById('captureCanvas');
            const startCaptureButton = document.getElementById('startCaptureButton');
            const captureButton = document.getElementById('captureFaceButton');
            const recaptureButton = document.getElementById('recaptureFaceButton');
            const setupFaceButton = document.getElementById('setupFaceButton'); // Button in the 'not configured' alert
            const cancelCaptureButton = document.getElementById('cancelCaptureButton');
            const statusDiv = document.getElementById('faceSetupStatus');
            const captureUI = document.getElementById('face-capture-ui');
            const videoOverlay = document.getElementById('videoOverlay');
            const faceConfiguredAlert = document.getElementById('face-configured-alert');
            const faceNotConfiguredAlert = document.getElementById('face-not-configured-alert');
            // Context retrieval moved inside capture function where needed

            let stream = null;
            let modelsLoaded = false;
            const MODEL_URL = '/models'; // Path where you placed the face-api models
            const setupUrl = "{{ path('app_client_profile_setup_face') }}"; // Use the correct route name

            // --- Load FaceAPI Models ---
            async function loadModels() {
                if (modelsLoaded) return true;
                statusDiv.textContent = 'Chargement des modèles IA...';
                statusDiv.className = 'mt-2 text-center text-sm text-blue-600'; // Use Tailwind color
                if(videoOverlay) videoOverlay.style.display = 'flex';
                if(startCaptureButton) startCaptureButton.disabled = true;
                if(captureButton) captureButton.disabled = true;

                try {
                    await Promise.all([
                        faceapi.nets.ssdMobilenetv1.loadFromUri(MODEL_URL),
                        faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),
                        faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL)
                    ]);
                    console.log("FaceAPI models loaded successfully for profile setup");
                    modelsLoaded = true;
                    statusDiv.textContent = 'Modèles chargés. Activez la webcam.';
                    statusDiv.className = 'mt-2 text-center text-sm text-gray-600'; // Tailwind color
                    if(startCaptureButton) startCaptureButton.disabled = false; // Enable webcam start button
                    return true;
                } catch (error) {
                    console.error("Error loading FaceAPI models:", error);
                    statusDiv.textContent = 'Erreur chargement modèles IA.';
                    statusDiv.className = 'mt-2 text-center text-sm text-red-600'; // Tailwind color
                    if(startCaptureButton) startCaptureButton.disabled = true;
                    if(captureButton) captureButton.disabled = true;
                    return false;
                } finally {
                    if(videoOverlay) videoOverlay.style.display = 'none';
                }
            }

            // --- Start Webcam ---
            async function startWebcam() {
                stopWebcam(); // Stop previous stream if any
                statusDiv.textContent = 'Activation webcam...';
                statusDiv.className = 'mt-2 text-center text-sm text-blue-600'; // Tailwind color
                if(videoOverlay) videoOverlay.style.display = 'flex';
                if(captureButton) captureButton.disabled = true; // Disable capture until ready
                if(startCaptureButton) startCaptureButton.disabled = true; // Disable start button while starting

                try {
                    if (!modelsLoaded) {
                        const loaded = await loadModels(); // Ensure models are loaded first
                        if (!loaded) return; // Stop if models failed to load
                    }

                    stream = await navigator.mediaDevices.getUserMedia({ video: { facingMode: 'user' }, audio: false });
                    if(webcamFeed) webcamFeed.srcObject = stream;
                    // Use a promise to wait for video playing
                    await new Promise((resolve) => {
                        if (webcamFeed) webcamFeed.onloadedmetadata = () => {
                            webcamFeed.play(); // Ensure video plays
                            resolve(true);
                        };
                    });
                    statusDiv.textContent = 'Webcam active. Centrez votre visage et capturez.';
                    statusDiv.className = 'mt-2 text-center text-sm text-gray-600'; // Tailwind color
                    if(videoOverlay) videoOverlay.style.display = 'none';
                    if(captureButton) captureButton.disabled = false; // Enable the actual capture button
                    if(startCaptureButton) startCaptureButton.textContent = 'Webcam Active'; // Change text
                    console.log("Webcam started for profile setup.");

                } catch (err) {
                    console.error("Webcam Error:", err);
                    let message = "Erreur webcam.";
                    if (err.name === "NotAllowedError") message = "Permission webcam refusée.";
                    else if (err.name === "NotFoundError") message = "Webcam non trouvée.";
                    statusDiv.textContent = message;
                    statusDiv.className = 'mt-2 text-center text-sm text-red-600'; // Tailwind color
                    if(videoOverlay) videoOverlay.style.display = 'none';
                    if(startCaptureButton) {
                        startCaptureButton.disabled = false; // Re-enable start button on error
                        startCaptureButton.textContent = 'Activer Webcam';
                    }
                    if(captureButton) captureButton.disabled = true;
                }
            }

            // --- Stop Webcam ---
            function stopWebcam() {
                if (stream) {
                    stream.getTracks().forEach(track => track.stop());
                    console.log("Webcam stopped for profile setup.");
                }
                stream = null;
                if(webcamFeed) webcamFeed.srcObject = null;
                if(startCaptureButton) {
                    startCaptureButton.disabled = false;
                    startCaptureButton.textContent = 'Activer Webcam';
                }
                if(captureButton) captureButton.disabled = true;
            }

            // --- Show/Hide Capture UI ---
            function showCaptureUI(show) {
                if (!captureUI) return;
                captureUI.style.display = show ? 'block' : 'none';
                if (show) {
                    loadModels(); // Start loading models immediately when shown
                } else {
                    stopWebcam();
                    statusDiv.textContent = '';
                    statusDiv.className = 'mt-2 text-center text-sm text-gray-600'; // Reset class
                }
                // Toggle visibility of the alert messages
                if(faceConfiguredAlert) faceConfiguredAlert.style.display = show ? 'none' : 'flex';
                if(faceNotConfiguredAlert) faceNotConfiguredAlert.style.display = show ? 'none' : 'flex';
            }

            // --- Capture Face and Send Data ---
            async function captureAndSendData() {
                if (!modelsLoaded) { statusDiv.textContent = 'Modèles non chargés.'; statusDiv.className = 'mt-2 text-center text-sm text-yellow-600'; return; }
                if (!stream || !webcamFeed || webcamFeed.readyState < 3) { statusDiv.textContent = 'Webcam non active.'; statusDiv.className = 'mt-2 text-center text-sm text-yellow-600'; return; }

                statusDiv.textContent = 'Détection du visage...';
                statusDiv.className = 'mt-2 text-center text-sm text-blue-600'; // Tailwind color
                if(captureButton) captureButton.disabled = true;
                if(cancelCaptureButton) cancelCaptureButton.disabled = true;
                if(videoOverlay) videoOverlay.style.display = 'flex';

                try {
                    const detection = await faceapi.detectSingleFace(webcamFeed)
                        .withFaceLandmarks()
                        .withFaceDescriptor();

                    if (detection) {
                        const descriptorString = Array.from(detection.descriptor).join(',');
                        statusDiv.textContent = "Visage détecté. Envoi des données...";
                        statusDiv.className = 'mt-2 text-center text-sm text-blue-600';

                        const response = await fetch(setupUrl, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/x-www-form-urlencoded',
                                'Accept': 'application/json',
                            },
                            body: `face_embedding_data=${encodeURIComponent(descriptorString)}`
                        });
                        const result = await response.json();

                        if (response.ok && result.success) {
                            statusDiv.textContent = result.message || 'Configuration réussie!';
                            statusDiv.className = 'mt-2 text-center text-sm p-2 rounded bg-green-100 text-green-700'; // Tailwind alert style
                            setTimeout(() => window.location.reload(), 2000);
                        } else {
                            statusDiv.textContent = `Erreur: ${result.message || 'Échec.'}`;
                            statusDiv.className = 'mt-2 text-center text-sm p-2 rounded bg-red-100 text-red-700'; // Tailwind alert style
                            if(captureButton) captureButton.disabled = false;
                            if(cancelCaptureButton) cancelCaptureButton.disabled = false;
                        }
                    } else {
                        statusDiv.textContent = 'Aucun visage détecté. Réessayez.';
                        statusDiv.className = 'mt-2 text-center text-sm text-yellow-600';
                        if(captureButton) captureButton.disabled = false;
                        if(cancelCaptureButton) cancelCaptureButton.disabled = false;
                    }
                } catch (error) {
                    console.error("Error during face detection/sending:", error);
                    statusDiv.textContent = 'Erreur technique lors du traitement.';
                    statusDiv.className = 'mt-2 text-center text-sm text-red-600';
                    if(captureButton) captureButton.disabled = false;
                    if(cancelCaptureButton) cancelCaptureButton.disabled = false;
                } finally {
                    if(videoOverlay) videoOverlay.style.display = 'none';
                }
            }

            // --- Event Listeners ---
            if (startCaptureButton) startCaptureButton.addEventListener('click', startWebcam);
            if (captureButton) captureButton.addEventListener('click', captureAndSendData);
            if (cancelCaptureButton) cancelCaptureButton.addEventListener('click', () => showCaptureUI(false));
            if (recaptureButton) recaptureButton.addEventListener('click', () => showCaptureUI(true));
            if (setupFaceButton) setupFaceButton.addEventListener('click', () => showCaptureUI(true));

            // --- Initial State ---
            // By default, hide the capture UI
            if(captureUI) captureUI.style.display = 'none';


            // --- Cleanup ---
            window.addEventListener('beforeunload', stopWebcam);
        });
    </script>
    {# --- END JavaScript for Face Capture --- #}
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/client/event/_delete_form.html.twig -----
<form method="post" action="{{ path('client_event_delete', {'id': event.id}) }}" onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer cet événement ?');">
    <input type="hidden" name="_token" value="{{ csrf_token('delete_event_' ~ event.id) }}">
    <button class="btn btn-danger">
        <i class="fas fa-trash-alt me-2"></i>Supprimer
    </button>
</form>


----- /Users/mac/Downloads/my_project_troti-vf/templates/client/event/_event_card.html.twig -----
{# templates/client/event/_event_card.html.twig #}
{# Expects 'event' (Event Entity) and 'user_participation_status' (ParticipationStatus Enum or null) #}
{# Also expects 'location' and 'duration' (strings or null) if calculated in controller #}

{# --- Use default values if variables are not passed (less ideal, better to ensure they are passed) --- #}
{% set event = event ?? null %}
{% set user_status = user_participation_status ?? null %} {# Renamed for clarity #}
{% set location_display = location ?? (event ? (event.state ? event.state.label : '-') : 'N/A') %}
{% set duration_display = duration ?? null %}

{# --- Calculate duration within the card if not passed --- #}
{% if event and not duration_display and event.dateDebut and event.dateFin %}
    {% set diff = event.dateFin|date('U') - event.dateDebut|date('U') %}
    {% set days  = (diff // 86400)|round(0, 'floor') %}
    {% set hours = ((diff % 86400) // 3600)|round(0, 'floor') %}
    {% set duration_display_parts = [] %}
    {% if days > 0 %}
        {% set duration_display_parts = duration_display_parts|merge([days ~ ' jour' ~ (days > 1 ? 's' : '')]) %}
    {% endif %}
    {% if hours > 0 %}
        {% set duration_display_parts = duration_display_parts|merge([hours ~ 'h']) %}
    {% endif %}
    {% set duration_display = duration_display_parts is not empty ? duration_display_parts|join(' ') : null %}
{% endif %}


{# --- Styles needed for this card --- #}
{% block stylesheets %}
    {# Only include if not already globally available in base.html.twig #}
    <style>
        /* Reusable Button Styles */
        .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.5rem 1rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; white-space: nowrap; }
        .button-sm { padding: 0.375rem 0.75rem; font-size: 0.75rem; }
        .button-primary { background-color: #3b82f6; color: white; border-color: #3b82f6; } .button-primary:hover { background-color: #2563eb; border-color: #1d4ed8;}
        .button-secondary { background-color: #e5e7eb; color: #374151; border-color: #d1d5db; } .button-secondary:hover { background-color: #d1d5db; border-color: #9ca3af;}
        .button-outline-danger { color: #dc2626; border-color: #ef4444; background-color: transparent;} .button-outline-danger:hover { background-color: #fee2e2; }
        .button-outline-secondary { color: #6b7280; border-color: #d1d5db; background-color: transparent;} .button-outline-secondary:hover { background-color: #f3f4f6; }

        /* Status Badge Styles */
        .status-badge { padding: 0.25em 0.6em; border-radius: 9999px; font-size: 0.7rem; font-weight: 500; text-transform: uppercase; letter-spacing: 0.05em; white-space: nowrap; line-height: 1; }
        .status-a_venir { background-color: #dbeafe; color: #1e40af; } /* blue */
        .status-en_cours { background-color: #dcfce7; color: #166534; } /* green */
        .status-termine { background-color: #f3f4f6; color: #374151; } /* gray */
        .status-annule { background-color: #fee2e2; color: #991b1b; } /* red */
        .badge-green { background-color: #dcfce7; color: #166534; } /* For 'Inscrit' */

        /* Ensure SVGs render correctly */
        svg { display: inline-block; vertical-align: middle; }
    </style>
{% endblock %}

{% if event %} {# Only render the card if event data is present #}
    <div class="event-card flex flex-col bg-white rounded-lg shadow-lg overflow-hidden transition-all duration-300 hover:shadow-xl hover:-translate-y-1 border border-gray-200">

        {# Card Header with Gradient and Title #}
        <div class="h-32 bg-gradient-to-br from-blue-500 to-indigo-600 flex items-center justify-center relative p-4">
            {# Optional overlay for better text contrast #}
            {# <div class="absolute inset-0 bg-black/20"></div> #}
            <h3 class="text-xl font-bold text-white text-center line-clamp-2 relative z-10">
                {{ event.titre }}
            </h3>
        </div>

        {# Card Body #}
        <div class="p-5 flex flex-col flex-grow"> {# Use flex-grow to push footer down #}

            {# Description (Truncated) #}
            <p class="text-sm text-gray-600 mb-4 line-clamp-3 leading-relaxed flex-grow"> {# Use flex-grow to take available space #}
                {{ event.description|striptags|default('Aucune description fournie.') }}
            </p>

            {# Metadata Section #}
            <div class="space-y-2 mb-5 text-xs text-gray-600">
                {# Date Début #}
                <div class="flex items-center gap-2">
                    <svg class="w-3.5 h-3.5 flex-shrink-0 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/></svg>
                    <span class="font-medium">{{ event.dateDebut|date('d M Y, H:i') }}</span>
                </div>

                {# Duration (if available) #}
                {% if duration_display %}
                    <div class="flex items-center gap-2">
                        <svg class="w-3.5 h-3.5 flex-shrink-0 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/></svg>
                        <span>Durée: {{ duration_display }}</span>
                    </div>
                {% endif %}

                {# Location #}
                <div class="flex items-center gap-2">
                    <svg class="w-3.5 h-3.5 flex-shrink-0 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.828 0l-4.243-4.243a8 8 0 1111.314 0z"/><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/></svg>
                    <span>{{ location_display }}</span>
                </div>

                {# Participants Count #}
                <div class="flex items-center gap-2">
                    <svg class="w-3.5 h-3.5 flex-shrink-0 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z"/></svg>
                    <span>{{ event.participations|length }} participant{{ event.participations|length > 1 ? 's' : '' }}</span>
                </div>
            </div>

            {# Footer Section - Aligned to bottom #}
            <div class="mt-auto pt-4 border-t border-gray-100 flex items-center justify-between gap-2">
                {# Status Badge #}
                <span class="status-badge status-{{ event.statut|lower }}">
                {% if event.statut == 'A_VENIR' %}À venir
                {% elseif event.statut == 'EN_COURS' %}En cours
                {% elseif event.statut == 'TERMINE' %}Terminé
                {% elseif event.statut == 'ANNULE' %}Annulé
                {% else %}{{ event.statut }}{% endif %}
            </span>

                {# Action Buttons #}
                <div class="flex gap-2 flex-shrink-0">
                    {# Details Button is always shown #}
                    {# Use appropriate route for client view #}
                    <a href="{{ path('client_event_show', {'id': event.id}) }}"
                       class="button button-secondary button-sm flex items-center gap-1 text-xs" title="Voir les détails">
                        {# Eye Icon SVG #}
                        <svg class="w-3.5 h-3.5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.478 0-8.268-2.943-9.542-7z"></path></svg>
                        Détails
                    </a>

                    {# Conditional Participation Buttons #}
                    {% if event.statut == 'A_VENIR' %}
                        {% if is_granted('IS_AUTHENTICATED_FULLY') %}
                            {# Check against the ParticipationStatus Enum #}
                            {% if user_status == constant('App\\Enum\\ParticipationStatus::INSCRIT') %}
                                {# --- Cancel Button --- #}
                                {# Use client route #}
                                <form action="{{ path('client_event_cancel_participation', {'id': event.id}) }}" method="post" class="inline-block">
                                    {# Consider adding CSRF token here for security #}
                                    {# <input type="hidden" name="_token" value="{{ csrf_token('cancel_' ~ app.user.id ~ '_' ~ event.id) }}"> #}
                                    <button type="submit"
                                            class="button button-outline-danger button-sm flex items-center gap-1 text-xs"
                                            onclick="return confirm('Annuler votre participation ?');"
                                            title="Se désinscrire">
                                        {# X Circle Icon SVG #}
                                        <svg class="w-3.5 h-3.5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
                                        <span>Annuler</span> {# Use span for potentially hiding text on small screens #}
                                    </button>
                                </form>
                            {% else %} {# Covers both NULL (not participated) and ANNULE status #}
                                {# --- Participate/Re-register Button --- #}
                                {# Use client route #}
                                <form action="{{ path('client_event_participate', {'id': event.id}) }}" method="post" class="inline-block">
                                    {# Consider adding CSRF token #}
                                    {# <input type="hidden" name="_token" value="{{ csrf_token('participate_' ~ event.id) }}"> #}
                                    <button type="submit"
                                            class="button button-primary button-sm flex items-center gap-1 text-xs"
                                            title="{{ user_status == constant('App\\Enum\\ParticipationStatus::ANNULE') ? 'Se réinscrire' : 'Participer' }}">
                                        {% if user_status == constant('App\\Enum\\ParticipationStatus::ANNULE') %}
                                            {# Refresh Icon SVG #}
                                            <svg class="w-3.5 h-3.5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m-15.357-2a8.001 8.001 0 0115.357-2m0 0H15"></path></svg>
                                            <span>Réinscrire</span>
                                        {% else %}
                                            {# User Plus Icon SVG #}
                                            <svg class="w-3.5 h-3.5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"></path></svg>
                                            <span>Participer</span>
                                        {% endif %}
                                    </button>
                                </form>
                            {% endif %}
                        {% else %}
                            {# --- Login Button --- #}
                            <a href="{{ path('app_login') }}" {# Or app_login_page #}
                               class="button button-secondary button-sm flex items-center gap-1 text-xs"
                               title="Connectez-vous pour participer">
                                {# Login Icon SVG #}
                                <svg class="w-3.5 h-3.5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1"></path></svg>
                                <span>Connexion</span>
                            </a>
                        {% endif %}
                    {% endif %} {# End check for event.statut == 'A_VENIR' #}
                </div> {# End Actions flex container #}
            </div> {# End Footer #}
        </div> {# End Card Body #}
    </div> {# End Card #}
{% endif %} {# End check if event exists #}


----- /Users/mac/Downloads/my_project_troti-vf/templates/client/event/edit.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Modifier l'événement{% endblock %}

{% block body %}
    <div class="container mt-4">
        <nav aria-label="breadcrumb" class="mb-4">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="{{ path('app_event_index') }}">Événements</a></li>
                <li class="breadcrumb-item active">Modifier l'événement</li>
            </ol>
        </nav>

        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-body p-4">
                        <h1 class="card-title display-5 mb-4"><i class="fas fa-edit me-3"></i>Modifier l'événement</h1>

                        {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate'}}) }}
                            <div class="row g-4">
                                <div class="col-12">
                                    <div class="form-floating">
                                        {{ form_widget(form.titre, {'attr': {'class': 'form-control', 'placeholder': 'Titre de l\'événement'}}) }}
                                        {{ form_label(form.titre) }}
                                        {{ form_errors(form.titre) }}
                                    </div>
                                </div>

                                <div class="col-12">
                                    <div class="form-floating">
                                        {{ form_widget(form.description, {'attr': {'class': 'form-control', 'placeholder': 'Description de l\'événement', 'style': 'height: 100px'}}) }}
                                        {{ form_label(form.description) }}
                                        {{ form_errors(form.description) }}
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-floating">
                                        {{ form_widget(form.dateDebut, {'attr': {'class': 'form-control', 'placeholder': 'Date de début'}}) }}
                                        {{ form_label(form.dateDebut) }}
                                        {{ form_errors(form.dateDebut) }}
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-floating">
                                        {{ form_widget(form.dateFin, {'attr': {'class': 'form-control', 'placeholder': 'Date de fin'}}) }}
                                        {{ form_label(form.dateFin) }}
                                        {{ form_errors(form.dateFin) }}
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        {{ form_widget(form.statut, {'attr': {'class': 'form-control', 'placeholder': 'statut'}}) }}
                                        {{ form_label(form.statut) }}
                                        {{ form_errors(form.statut) }}
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        {{ form_widget(form.state, {'attr': {'class': 'form-control', 'placeholder': 'State'}, 'choice_value': 'value', 'choice_label': 'value'}) }}
                                        {{ form_label(form.state) }}
                                        {{ form_errors(form.state) }}
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-floating">
                                        {{ form_widget(form.trottinetteMinAutonomie, {'attr': {'class': 'form-control', 'placeholder': 'Autonomie minimale de la trottinette'}}) }}
                                        {{ form_label(form.trottinetteMinAutonomie) }}
                                        {{ form_errors(form.trottinetteMinAutonomie) }}
                                    </div>
                                </div>

                                <div class="col-12 d-flex justify-content-between align-items-center mt-4">
                                    <a href="{{ path('app_admin_events') }}" class="btn btn-secondary btn-lg">
                                        <i class="fas fa-arrow-left me-2"></i>Retour à la liste
                                    </a>
                                    <button type="submit" class="btn btn-primary btn-lg">
                                        <i class="fas fa-save me-2"></i>Enregistrer
                                    </button>
                                </div>
                            </div>
                        {{ form_end(form) }}
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/client/event/new.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Créer un nouvel événement{% endblock %}

{% block body %}
    <div class="container mt-4">
        <nav aria-label="breadcrumb" class="mb-4">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="{{ path('app_event_index') }}">Événements</a></li>
                <li class="breadcrumb-item active">Créer un nouvel événement</li>
            </ol>
        </nav>

        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-body p-4">
                        <h1 class="card-title display-5 mb-4">
                            <i class="fas fa-plus-circle me-3 text-primary"></i>Créer un nouvel événement
                        </h1>

                        {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate'}}) }}
                            <div class="row g-4">
                                <div class="col-12">
                                    <div class="form-floating">
                                        {{ form_widget(form.titre, {'attr': {'class': 'form-control', 'placeholder': 'Titre de l\'événement'}}) }}
                                        {{ form_label(form.titre) }}
                                        {{ form_errors(form.titre) }}
                                    </div>
                                </div>

                                <div class="col-12">
                                    <div class="form-floating">
                                        {{ form_widget(form.description, {'attr': {'class': 'form-control', 'placeholder': 'Description de l\'événement', 'style': 'height: 100px'}}) }}
                                        {{ form_label(form.description) }}
                                        {{ form_errors(form.description) }}
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-floating">
                                        {{ form_widget(form.dateDebut, {'attr': {'class': 'form-control', 'placeholder': 'Date de début'}}) }}
                                        {{ form_label(form.dateDebut) }}
                                        {{ form_errors(form.dateDebut) }}
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-floating">
                                        {{ form_widget(form.dateFin, {'attr': {'class': 'form-control', 'placeholder': 'Date de fin'}}) }}
                                        {{ form_label(form.dateFin) }}
                                        {{ form_errors(form.dateFin) }}
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-floating">
                                        {{ form_widget(form.state, {'attr': {'class': 'form-control', 'placeholder': 'State'}}) }}
                                        {{ form_label(form.state) }}
                                        {{ form_errors(form.state) }}
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-floating">
                                        {{ form_widget(form.trottinetteMinAutonomie, {'attr': {'class': 'form-control', 'placeholder': 'Autonomie minimale de la trottinette'}}) }}
                                        {{ form_label(form.trottinetteMinAutonomie) }}
                                        {{ form_errors(form.trottinetteMinAutonomie) }}
                                    </div>
                                </div>

                                <div class="col-12 d-flex justify-content-between align-items-center mt-4">
                                    <a href="{{ path('app_admin_events') }}" class="btn btn-secondary btn-lg">
                                        <i class="fas fa-arrow-left me-2"></i>Retour à la liste
                                    </a>
                                    <button type="submit" class="btn btn-primary btn-lg">
                                        <i class="fas fa-plus me-2"></i>Créer l'événement
                                    </button>
                                </div>
                            </div>
                        {{ form_end(form) }}
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/client/event/index.html.twig -----
{% extends 'base.html.twig' %}

{% block title %}Événements - TrottiCare{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# Ensure Tailwind base styles are loaded via base.html.twig #}
    {# Add any page-specific styles or overrides here #}
    <style>
        /* Basic form input/select styles (reuse/adapt) */
        .form-input, .form-select {
            appearance: none; display: block; width: 100%;
            padding: 0.5rem 0.75rem; font-size: 0.875rem; line-height: 1.5;
            color: #1f2937; background-color: #fff; background-clip: padding-box;
            border: 1px solid #d1d5db; border-radius: 0.375rem;
            transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        }
        .form-select {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
            background-position: right 0.5rem center; background-repeat: no-repeat;
            background-size: 1.5em 1.5em; padding-right: 2.5rem;
        }
        .form-select-sm {
            padding-top: 0.375rem; padding-bottom: 0.375rem; font-size: 0.75rem;
        }
        .form-input:focus, .form-select:focus {
            outline: none; border-color: #3b82f6;
            box-shadow: 0 0 0 1px #3b82f6; /* ring-1 ring-blue-500 */
        }
        .search-input { padding-left: 2.5rem; }

        /* Button Styles */
        .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.5rem 1rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; white-space: nowrap; }
        .button-sm { padding: 0.375rem 0.75rem; font-size: 0.75rem; }
        .button-primary { background-color: #3b82f6; color: white; border-color: #3b82f6; } .button-primary:hover { background-color: #2563eb; border-color: #1d4ed8;}
        .button-secondary { background-color: #e5e7eb; color: #374151; border-color: #d1d5db; } .button-secondary:hover { background-color: #d1d5db; border-color: #9ca3af;}
        .button:disabled { opacity: 0.6; cursor: not-allowed; }

        /* KNP Paginator Styles (Tailwind Adaption) */
        .pagination { display: flex; justify-content: center; padding-left: 0; list-style: none; }
        .page-item { margin: 0 0.125rem; }
        .page-item.disabled .page-link, .page-item.disabled span { color: #6b7280; pointer-events: none; background-color: #fff; border-color: #e5e7eb; cursor: not-allowed;}
        .page-item.active .page-link, .page-item.active span { z-index: 10; color: #fff; background-color: #3b82f6; border-color: #3b82f6; }
        .page-link, .page-item span { position: relative; display: block; padding: 0.5rem 0.75rem; line-height: 1.25; color: #3b82f6; background-color: #fff; border: 1px solid #e5e7eb; border-radius: 0.375rem; transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out; }
        .page-link:hover { z-index: 5; color: #2563eb; text-decoration: none; background-color: #f9fafb; border-color: #d1d5db; }

        /* KNP Sortable Link Styles (not used on client page, but keep for consistency if needed elsewhere) */
        th a.sortable { color: #4b5563; text-decoration: none; display: inline-flex; align-items: center; gap: 0.25rem; white-space: nowrap; }
        th a.sortable:hover { color: #1f2937; }
        th a.sortable .fas { color: #9ca3af; font-size: 0.8em; }
        th a.sortable.asc .fa-sort-up, th a.sortable.desc .fa-sort-down { color: #3b82f6; }
        th a.sortable .fa-sort { color: #9ca3af; }

        /* FontAwesome (if used) */
        .fas { display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; -webkit-font-smoothing: antialiased; font-family: "Font Awesome 6 Free"; font-weight: 900; }
        .fa-search:before { content: "\f002"; }
        .fa-info-circle:before { content: "\f05a"; }
        .mr-2 { margin-right: 0.5rem; }
    </style>
{% endblock %}


{% block body %}
    <div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
        <div class="container mx-auto max-w-7xl">

            <h1 class="text-3xl font-bold text-gray-900 mb-6 text-center md:text-left">
                Découvrez nos Événements
            </h1>

            {% include 'partials/_flash_messages.html.twig' ignore missing %}

            {# Filter and Sort Controls Card #}
            <div class="mb-8 p-4 bg-white rounded-lg shadow-md border border-gray-200">
                <form method="get" action="{{ path('client_event_index') }}" class="filter-form grid gap-4 items-end">

                    {# Search Input #}
                    <div class="md:col-span-2 lg:col-span-2"> {# Adjust span based on final layout #}
                        <label for="search_id" class="block text-xs font-medium text-gray-600">Rechercher</label>
                        <div class="relative">
                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                <svg class="h-4 w-4 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"> <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" /> </svg>
                            </div>
                            <input type="search" id="search_id" name="search" class="form-input search-input w-full text-sm" placeholder="Titre, description, lieu..." value="{{ search_term|default('') }}">
                        </div>
                    </div>

                    {# Sort Field Dropdown #}
                    <div>
                        <label for="sort_field_id" class="block text-xs font-medium text-gray-600">Trier par</label>
                        <select name="sort" id="sort_field_id" class="form-select text-sm w-full" onchange="this.form.submit()">
                            {% for label, dql_path in allowed_sorts_map %}
                                {# VALUE is the DQL path, TEXT is the user-friendly label #}
                                <option value="{{ dql_path }}" {{ dql_path == current_sort_field ? 'selected' : '' }}>
                                    {{ label }}
                                </option>
                            {% endfor %}
                        </select>
                    </div>

                    {# Sort Direction Dropdown #}
                    <div>
                        <label for="sort_direction_id" class="block text-xs font-medium text-gray-600">Ordre</label>
                        <select name="direction" id="sort_direction_id" class="form-select text-sm w-full" onchange="this.form.submit()">
                            <option value="asc" {{ current_direction == 'asc' ? 'selected' : '' }}>Croissant</option>
                            <option value="desc" {{ current_direction == 'desc' ? 'selected' : '' }}>Décroissant</option>
                        </select>
                    </div>

                    {# Filter Buttons (Links) #}
                    <div class="flex flex-col items-start md:self-end">
                        <label class="block text-xs font-medium text-gray-600 mb-1">Filtrer Dates</label>
                        <div class="flex gap-2 flex-wrap w-full">
                            {% set filter_buttons = {'all':'Tous', 'upcoming':'À venir', 'past':'Passés'} %}
                            {% set current_filter_param = app.request.query.get('filter', 'all') %}
                            {% for key, label in filter_buttons %}
                                {# Merge ALL current query parameters EXCEPT page, and then add the new filter #}
                                <a href="{{ path('client_event_index', app.request.query.all|merge({'filter': key, 'page': 1})) }}"
                                   class="button button-sm {{ current_filter_param == key ? 'button-primary' : 'button-secondary' }} flex-grow sm:flex-grow-0">
                                    {{ label }}
                                </a>
                            {% endfor %}
                        </div>
                    </div>

                    {# Hidden inputs to preserve state when changing sort/direction via form submit #}
                    <input type="hidden" name="filter" value="{{ current_filter|default('all') }}">
                    <input type="hidden" name="limit" value="{{ currentLimit|default(12) }}"> {# Keep current limit #}

                </form>
            </div>


            {# Results Count #}
            {% if pagination is defined and pagination.getTotalItemCount > 0 %}
                <div class="text-sm text-gray-600 mb-4">
                    {% set totalDbItems = pagination.getTotalItemCount|default(0) %}
                    Environ {{ totalDbItems }} événement{{ totalDbItems > 1 ? 's correspondent' : ' correspond' }} aux critères de base.
                    {# Removed note about PHP filtering accuracy as it's not used here #}
                </div>
            {% endif %}

            {# Event Grid #}
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 events-grid">
                {# Check the PREPARED data array 'events_data' #}
                {% if events_data is not empty %}
                    {% for event_data in events_data %}
                        {% include 'event/_event_card.html.twig' with {
                            'event_data': event_data
                        } %}
                    {% endfor %}
                {% else %}
                    {# No results message #}
                    <div class="col-span-full text-center py-16 px-6 text-gray-500 bg-white rounded-lg shadow-md border border-gray-200">
                        <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                        </svg>
                        <h3 class="mt-2 text-sm font-medium text-gray-900">Aucun événement trouvé</h3>
                        <p class="mt-1 text-sm text-gray-500">Essayez d'ajuster vos filtres ou revenez plus tard.</p>
                        {# Check form filter values or request params #}
                        {% set is_filtered = app.request.query.get('search') is not empty
                            or app.request.query.get('filter', 'all') != 'all'
                            or app.request.query.get('sort', 'dateDebut') != 'dateDebut'
                            or app.request.query.get('direction', 'desc') != 'desc'
                        %}
                        {% if is_filtered %}
                            <div class="mt-6">
                                <a href="{{ path('client_event_index') }}" class="button button-sm button-secondary">
                                    Réinitialiser les filtres et tris
                                </a>
                            </div>
                        {% endif %}
                    </div>
                {% endif %}
            </div>

            {# Pagination Controls Container #}
            {% if pagination is defined and pagination.getTotalItemCount > 0 %}
                <div class="pagination-container mt-8">
                    <div> {# Links div #}
                        {% if pagination.pageCount > 1 %}
                            {{ knp_pagination_render(pagination) }} {# Uses configured Tailwind template #}
                        {% endif %}
                    </div>
                    <div class="pagination-controls"> {# Summary & Limit div #}
                        <span> {# Item count text #}
                            {% set totalItems = pagination.getTotalItemCount|default(0) %}
                            {% if totalItems > 0 %}
                                {% set firstItem = (pagination.getCurrentPageNumber() - 1) * pagination.getItemNumberPerPage() + 1 %}
                                {# Use the count of items prepared for the view for 'lastItem' #}
                                {% set lastItem = firstItem + events_data|length - 1 %}
                                Affichage de {{ firstItem }} à {{ lastItem }} sur {{ totalItems }}
                            {% endif %}
                     </span>
                        <div class="inline-flex items-center"> {# Limit Selector #}
                            <label for="itemsPerPageSelect" class="whitespace-nowrap">par page:</label>
                            <select id="itemsPerPageSelect" class="form-select limit-select">
                                {% for limitOption in allowedLimits %}
                                    <option value="{{ limitOption }}" {{ limitOption == currentLimit ? 'selected' : '' }}>
                                        {{ limitOption }}
                                    </option>
                                {% endfor %}
                            </select>
                        </div>
                    </div>
                </div>
                {# Removed note about pagination accuracy as PHP filter isn't used #}
            {% endif %}


        </div> {# End Container #}
    </div> {# End Page Wrapper #}
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    {# --- JavaScript for Limit Selector --- #}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const selectElement = document.getElementById('itemsPerPageSelect');
            if (selectElement) {
                selectElement.addEventListener('change', function() {
                    const newLimit = this.value;
                    const currentUrl = new URL(window.location.href);
                    const params = currentUrl.searchParams;
                    params.set('limit', newLimit);
                    params.set('page', "1"); // <-- CORRECTED: Use string '1'
                    currentUrl.search = params.toString();
                    window.location.href = currentUrl.toString();
                });
            }
            // Optional: JS to submit filter form on select change
            // document.querySelectorAll('.filter-form .form-select').forEach(select => {
            //     select.addEventListener('change', () => {
            //         select.closest('form').submit();
            //     });
            // });
        });
    </script>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/client/event/_form.html.twig -----
// ...existing code...
{{ form_row(form.gouvernorat, {
    'label': 'Gouvernorat',
    'attr': {'class': 'form-select'}
}) }}
// ...existing code...



----- /Users/mac/Downloads/my_project_troti-vf/templates/client/event/show.html.twig -----
{# templates/client/event/show.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}{{ event.titre }} - Détails Événement{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# Ensure Tailwind base styles are loaded via base.html.twig #}
    {# Add Bootstrap Icons CSS if not loaded globally #}
     <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <style>
        /* Reusable Button Styles */
        .button { display: inline-flex; align-items: center; justify-content: center; padding: 0.5rem 1rem; border-radius: 0.375rem; font-weight: 500; text-align: center; cursor: pointer; transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out; border: 1px solid transparent; line-height: 1.25; font-size: 0.875rem; white-space: nowrap; }
        .button-sm { padding: 0.375rem 0.75rem; font-size: 0.75rem; }
        .button-lg { padding: 0.75rem 1.5rem; font-size: 1rem; }
        .button-primary { background-color: #3b82f6; color: white; border-color: #3b82f6; } .button-primary:hover { background-color: #2563eb; border-color: #1d4ed8;}
        .button-secondary { background-color: #e5e7eb; color: #374151; border-color: #d1d5db; } .button-secondary:hover { background-color: #d1d5db; border-color: #9ca3af;}
        .button-outline-secondary { color: #6b7280; border-color: #d1d5db; background-color: transparent;} .button-outline-secondary:hover { background-color: #f3f4f6; }
        .button-outline-danger { color: #dc2626; border-color: #ef4444; background-color: transparent;} .button-outline-danger:hover { background-color: #fee2e2; }
        .button-success { background-color: #10b981; color: white; border-color: #10b981; } .button-success:hover { background-color: #059669; border-color: #047857; }
        .button:disabled { opacity: 0.6; cursor: not-allowed; }

        /* Reusable Status Badge Styles */
        .status-badge { padding: 0.35em 0.8em; border-radius: 9999px; font-size: 0.75rem; font-weight: 500; line-height: 1; text-transform: uppercase; white-space: nowrap; }
        .status-a_venir { background-color: #dbeafe; color: #1e40af; } /* blue */
        .status-en_cours { background-color: #dcfce7; color: #166534; } /* green */
        .status-termine { background-color: #f3f4f6; color: #374151; } /* gray */
        .status-annule { background-color: #fee2e2; color: #991b1b; } /* red */
        .badge-green { background-color: #dcfce7; color: #166534; } /* For 'Inscrit' confirmation */

        /* Ensure Bootstrap Icons Font is loaded if using classes below */
        /* .bi { ... } */ /* Basic setup if needed */
        .me-1 { margin-right: 0.25rem; }
        .me-2 { margin-right: 0.5rem; }
        .me-3 { margin-right: 0.75rem; }
        .ms-1 { margin-left: 0.25rem; }
        .ms-2 { margin-left: 0.5rem; }
    </style>
{% endblock %}

{% block body %}
    <div class="min-h-screen bg-gray-100 p-4 md:p-6 lg:p-8">
        <div class="container mx-auto max-w-6xl">

            {# 1. Breadcrumb & Back Link #}
            <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-6 gap-3">
                <nav aria-label="Breadcrumb">
                    <ol class="inline-flex items-center space-x-1 md:space-x-2 rtl:space-x-reverse text-sm">
                        <li class="inline-flex items-center">
                            <a href="{{ path('client_event_index') }}" class="inline-flex items-center font-medium text-gray-700 hover:text-blue-600">
                                {# Home Icon SVG #}
                                <svg class="w-3 h-3 me-2.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20"><path d="m19.707 9.293-2-2-7-7a1 1 0 0 0-1.414 0l-7 7-2 2a1 1 0 0 0 1.414 1.414L2 10.414V18a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1h3a2 2 0 0 0 2-2v-7.586l.293.293a1 1 0 0 0 1.414-1.414Z"/></svg>
                                Événements
                            </a>
                        </li>
                        <li aria-current="page">
                            <div class="flex items-center">
                                {# Chevron Right SVG #}
                                <svg class="rtl:rotate-180 w-3 h-3 text-gray-400 mx-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/></svg>
                                <span class="ms-1 font-medium text-gray-500 md:ms-2 truncate" title="{{ event.titre }}">{{ event.titre|slice(0, 40) ~ (event.titre|length > 40 ? '...' : '') }}</span>
                            </div>
                        </li>
                    </ol>
                </nav>
                <a href="{{ path('client_event_index') }}" class="button button-sm button-outline-secondary mt-2 md:mt-0">
                    {# Bootstrap Icon Arrow Left #}
                    <i class="bi bi-arrow-left me-1"></i>Retour à la liste
                </a>
            </div>

            {# Flash Messages #}
            {% include 'partials/_flash_messages.html.twig' ignore missing with { domain: 'participation' } %}

            {# 2. Main Content Grid #}
            <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 lg:gap-8">

                {# Left Column: Event Details #}
                <div class="lg:col-span-2">
                    <div class="bg-white rounded-lg shadow-md overflow-hidden border border-gray-200">
                        <div class="p-6 md:p-8">
                            {# Event Title & Status #}
                            <div class="flex flex-col sm:flex-row sm:items-center justify-between gap-3 mb-5">
                                <h1 class="text-2xl md:text-3xl font-bold text-gray-900 leading-tight">{{ event.titre }}</h1>
                                {# Event Status Badge #}
                                <span class="status-badge status-{{ event.statut|lower }} shrink-0">
                                 {% if event.statut == 'A_VENIR' %}À venir
                                 {% elseif event.statut == 'EN_COURS' %}En cours
                                 {% elseif event.statut == 'TERMINE' %}Terminé
                                 {% elseif event.statut == 'ANNULE' %}Annulé
                                 {% else %}{{ event.statut|default('') }}{% endif %}
                            </span>
                            </div>

                            {# Event Metadata - Refined Layout #}
                            <div class="mb-6 border-t border-b border-gray-200 py-4">
                                <dl class="grid grid-cols-1 sm:grid-cols-2 gap-x-6 gap-y-4">
                                    {# Start Date #}
                                    <div class="flex items-center">
                                        <i class="bi bi-calendar-event text-gray-500 text-xl me-3 w-6 text-center shrink-0"></i>
                                        <div>
                                            <dt class="text-xs font-semibold text-gray-500 uppercase tracking-wider">Début</dt>
                                            <dd class="text-sm text-gray-800 font-medium">{{ event.dateDebut ? event.dateDebut|date('d M Y \\à H:i') : 'Non définie' }}</dd>
                                        </div>
                                    </div>
                                    {# End Date #}
                                    <div class="flex items-center">
                                        <i class="bi bi-calendar-check text-gray-500 text-xl me-3 w-6 text-center shrink-0"></i>
                                        <div>
                                            <dt class="text-xs font-semibold text-gray-500 uppercase tracking-wider">Fin</dt>
                                            <dd class="text-sm text-gray-800 font-medium">{{ event.dateFin ? event.dateFin|date('d M Y \\à H:i') : 'Non définie' }}</dd>
                                        </div>
                                    </div>
                                    {# Location #}
                                    <div class="flex items-center">
                                        <i class="bi bi-geo-alt-fill text-gray-500 text-xl me-3 w-6 text-center shrink-0"></i>
                                        <div>
                                            <dt class="text-xs font-semibold text-gray-500 uppercase tracking-wider">Lieu</dt>
                                            <dd class="text-sm text-gray-800 font-medium">{{ event.state ? event.state.label : 'Non défini' }}</dd>
                                        </div>
                                    </div>
                                    {# Min Autonomy #}
                                    <div class="flex items-center">
                                        <i class="bi bi-battery-charging text-gray-500 text-xl me-3 w-6 text-center shrink-0"></i>
                                        <div>
                                            <dt class="text-xs font-semibold text-gray-500 uppercase tracking-wider">Autonomie Min.</dt>
                                            <dd class="text-sm text-gray-800 font-medium">
                                                {% if event.trottinetteMinAutonomie is not null and event.trottinetteMinAutonomie > 0 %}
                                                    {{ event.trottinetteMinAutonomie }} km
                                                {% else %}
                                                    Aucune
                                                {% endif %}
                                            </dd>
                                        </div>
                                    </div>
                                    {# Participants Count - Direct count #}
                                    <div class="flex items-center">
                                        <i class="bi bi-people-fill text-gray-500 text-xl me-3 w-6 text-center shrink-0"></i>
                                        <div>
                                            <dt class="text-xs font-semibold text-gray-500 uppercase tracking-wider">Participants</dt>
                                            {# Link to participant list IF it's public or user has rights #}
                                            <dd class="text-sm text-gray-800 font-medium">
                                                {# <a href="{{ path('client_event_participants', {'id': event.id}) }}" class="hover:underline"> #}
                                                {{ event.participations.count }} inscrit(s)
                                                {# </a> #}
                                            </dd>
                                        </div>
                                    </div>
                                </dl>
                            </div>

                            {# Event Description #}
                            <div class="prose prose-sm max-w-none text-gray-700">
                                <h3 class="text-lg font-semibold text-gray-800 mb-2">Description</h3>
                                <p class="leading-relaxed">{{ event.description|nl2br|default('Aucune description fournie.') }}</p>
                            </div>
                        </div>
                    </div>
                </div> {# End Left Column #}

                {# Right Column: Participation Actions & Sidebar Info #}
                <div class="lg:col-span-1 space-y-6">
                    {# Participation Action Card #}
                    <div class="bg-white rounded-lg shadow-md p-6 border border-gray-200 sticky top-6"> {# Sticky sidebar #}
                        <h3 class="text-lg font-semibold text-gray-800 mb-4 border-b pb-2">Participer à l'Événement</h3>

                        {# Alert Messages specific to participation #}
                        {# Reuse flash message partial or custom styled alerts #}
                        {% include 'partials/_flash_messages.html.twig' ignore missing with { domain: 'participation' } %}

                        {# Participation Logic #}
                        {% if event.statut == 'A_VENIR' %}

                            {# Event is upcoming #}
                            {% if is_granted('IS_AUTHENTICATED_FULLY') %}

                                {# --- User is Logged In --- #}
                                {% if user_participation_status == constant('App\\Enum\\ParticipationStatus::INSCRIT') %}

                                    {# --- Already Inscribed --- #}
                                    <div class="text-center border border-green-200 bg-green-50 p-4 rounded-md space-y-3">
                                        <p class="text-sm font-medium text-green-800 flex items-center justify-center">
                                            <i class="bi bi-check-circle me-2 text-lg"></i> Vous êtes inscrit !
                                        </p>
                                        {# Download Ticket Button - ADDED HERE #}
                                        <a href="{{ path('public_event_download_ticket', {'id': event.id}) }}"
                                           target="_blank" {# Open PDF in new tab #}
                                           class="button button-info w-full button-sm"> {# Use info color or primary #}
                                            <i class="bi bi-download me-1"></i> Télécharger le Billet (PDF)
                                        </a>
                                        {# Cancel Button #}
                                        <form action="{{ path('client_event_cancel_participation', {'id': event.id}) }}" method="post" onsubmit="return confirm('Annuler votre participation ?');">
                                            {# <input type="hidden" name="_token" value="{{ csrf_token('cancel_' ~ event.id ~ app.user.id) }}"> #}
                                            <button type="submit" class="button button-outline-danger w-full button-sm">
                                                <i class="bi bi-x-circle me-1"></i> Annuler ma participation
                                            </button>
                                        </form>
                                    </div>
                                {% else %}
                                    {# --- Not Inscribed (or Cancelled) --- #}
                                    <form action="{{ path('client_event_participate', {'id': event.id}) }}" method="post">
                                        {# <input type="hidden" name="_token" value="{{ csrf_token('participate_' ~ event.id) }}"> #}
                                        <button type="submit" class="button button-primary w-full button-lg">
                                            {% if user_participation and user_participation.statut == constant('App\\Enum\\ParticipationStatus::ANNULE') %}
                                                <i class="bi bi-arrow-clockwise me-1"></i> Me Réinscrire
                                            {% else %}
                                                <i class="bi bi-check-circle me-1"></i> Participer Maintenant
                                            {% endif %}
                                        </button>
                                    </form>
                                    {% if user_participation and user_participation.statut == constant('App\\Enum\\ParticipationStatus::ANNULE') %}
                                        <p class="text-xs text-center text-gray-500 mt-2 italic">Vous aviez précédemment annulé votre inscription.</p>
                                    {% endif %}
                                {% endif %}

                            {% else %}
                                {# --- User Not Logged In --- #}
                                <button class="button button-primary w-full button-lg" disabled>
                                    Participer Maintenant
                                </button>
                                <p class="text-center text-sm text-gray-500 mt-3">
                                    <a href="{{ path('app_login_page') }}" class="text-blue-600 hover:underline font-medium">Connectez-vous</a> ou <a href="{{ path('app_register') }}" class="text-blue-600 hover:underline font-medium">inscrivez-vous</a> pour participer.
                                </p>
                            {% endif %} {# End logged-in check #}

                        {% else %}
                            {# --- Event Not Upcoming --- #}
                            <button class="button button-secondary w-full button-lg" disabled>
                                {% if event.statut == 'EN_COURS' %} <i class="bi bi-info-circle me-1"></i> Événement en cours {% endif %}
                                {% if event.statut == 'TERMINE' %} <i class="bi bi-info-circle me-1"></i> Événement terminé {% endif %}
                                {% if event.statut == 'ANNULE' %} <i class="bi bi-exclamation-circle me-1"></i> Événement annulé {% endif %}
                            </button>
                            <p class="text-center text-sm text-gray-500 mt-3">
                                {% if event.statut == 'EN_COURS' %}Les inscriptions sont maintenant fermées.
                                {% elseif event.statut == 'TERMINE' %}Cet événement est malheureusement terminé.
                                {% elseif event.statut == 'ANNULE' %}Cet événement a été annulé par l'organisateur.
                                {% else %}La participation n'est pas disponible. {% endif %}
                            </p>

                            {# --- Allow download even if event is past/in progress IF user WAS inscribed --- #}
                            {% if is_granted('IS_AUTHENTICATED_FULLY') and user_participation and user_participation.statut == constant('App\\Enum\\ParticipationStatus::INSCRIT') and event.statut != 'ANNULE' %}
                                <div class="mt-4 text-center">
                                    <a href="{{ path('public_event_download_ticket', {'id': event.id}) }}"
                                       target="_blank"
                                       class="button button-info button-sm w-full">
                                        <i class="bi bi-download me-1"></i> Télécharger le Billet (PDF)
                                    </a>
                                    <p class="text-xs text-gray-500 mt-1 italic">(Votre billet reste disponible)</p>
                                </div>
                            {% endif %}
                            {# --- End download check for past/in progress --- #}

                        {% endif %} {# End event status check #}


                    </div> {# End Participation Action Card #}

                    {# Removed Admin Actions card as this is client view #}

                </div> {# End Right Column #}
            </div> {# End Main Grid #}

        </div> {# End Container #}
    </div> {# End Page Wrapper #}
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/client/event/participation_confirmation.html.twig -----
{# templates/client/event/participation_confirmation.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Inscription Confirmée - {{ event.titre }}{% endblock %}

{% block body %}
    <div class="min-h-screen bg-gray-100 p-4 md:p-8">
        <div class="container mx-auto max-w-3xl bg-white rounded-lg shadow-xl p-6 md:p-10 border border-gray-200 text-center">

            {# Success Message #}
            <div class="mb-8">
                {% include 'partials/_flash_messages.html.twig' %} {# Display flash messages from participate action #}
                <h1 class="text-3xl font-bold text-green-600 mb-2">
                    <i class="bi bi-check2-circle me-2"></i> Inscription Réussie !
                </h1>
                <p class="text-lg text-gray-700">Vous êtes bien inscrit(e) à l'événement :</p>
                <p class="text-xl font-semibold text-blue-700 mt-1">{{ event.titre }}</p>
            </div>

            {# QR Code Section #}
            <div class="mb-8 border-t border-b border-gray-200 py-6">
                <h2 class="text-xl font-semibold text-gray-800 mb-3">Votre QR Code d'Accès</h2>
                <p class="text-sm text-gray-600 mb-4">Scannez ce code pour afficher les détails de votre inscription et de l'événement.</p>
                {% if qrCodeDataUri %}
                    <div class="flex justify-center">
                        <img src="{{ qrCodeDataUri|raw }}" alt="QR Code Participation" class="border p-1 bg-white shadow-sm">
                    </div>
                {% else %}
                    <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
                        <strong class="font-bold">Erreur:</strong>
                        <span class="block sm:inline"> Impossible de générer le QR code.</span>
                    </div>
                {% endif %}
            </div>

            {# Event Details Summary #}
            <div class="mb-8 text-left">
                <h3 class="text-lg font-semibold text-gray-700 mb-3"><i class="bi bi-info-circle me-2"></i>Rappel des Informations</h3>
                <dl class="text-sm space-y-2">
                    <div class="flex">
                        <dt class="w-24 font-medium text-gray-500 shrink-0">Date:</dt>
                        <dd class="text-gray-800">{{ event.dateDebut|date('d/m/Y H:i') }} - {{ event.dateFin|date('H:i') }}</dd>
                    </div>
                    <div class="flex">
                        <dt class="w-24 font-medium text-gray-500 shrink-0">Lieu:</dt>
                        <dd class="text-gray-800">{{ event.state.label }}</dd>
                    </div>
                    <div class="flex">
                        <dt class="w-24 font-medium text-gray-500 shrink-0">N° Billet:</dt> {# Use participation ID #}
                        <dd class="text-gray-800 font-mono">EVT-{{ event.id }}-{{ participation.id }}</dd>
                    </div>
                </dl>
            </div>

            {# Action Buttons #}
            <div class="flex flex-col sm:flex-row justify-center items-center gap-3">
                <a href="{{ path('public_event_download_ticket', {'id': event.id}) }}" target="_blank" class="button button-primary">
                    <i class="bi bi-download me-1"></i> Télécharger le Billet PDF {# Link to existing PDF download #}
                </a>
                <a href="{{ path('client_event_show', {'id': event.id}) }}" class="button button-outline-secondary">
                    <i class="bi bi-calendar-event me-1"></i> Voir l'Événement
                </a>
                <a href="{{ path('client_event_index') }}" class="button button-outline-secondary">
                    <i class="bi bi-list-ul me-1"></i> Tous les événements
                </a>
            </div>

        </div>
    </div>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/client/event/participants.html.twig -----
{% extends 'base.html.twig' %} {# Or your admin base template if different #}

{% block title %}Participants - {{ event.titre }}{% endblock %}

{% block body %}
    <div class="container mt-4">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h1 class="h3">Participants pour : <span class="fw-normal">{{ event.titre }}</span></h1>
            {# Adjust the back link if needed based on where admins/partners view events #}
            <a href="{{ path(app.user and is_granted('ROLE_ADMIN') ? 'app_admin_events' : 'app_admin_events') }}" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left"></i> Retour aux événements
            </a>
        </div>

        <div class="card shadow-sm">
            <div class="card-header d-flex justify-content-between align-items-center">
                <span><i class="bi bi-people-fill me-2"></i>Liste des Participants</span>
                <span class="badge bg-primary rounded-pill">{{ participants|length }}</span>
            </div>
            <div class="card-body p-0"> {# Remove padding for full-width table #}
                {% if participants is not empty %}
                    <div class="table-responsive"> {# Add responsiveness #}
                        <table class="table table-striped table-hover mb-0"> {# Remove bottom margin #}
                            <thead class="table-light">
                            <tr>
                                <th scope="col">Nom Complet</th>
                                <th scope="col">Email</th>
                                <th scope="col">Téléphone</th>
                                <th scope="col">Date d'Inscription</th>
                                <th scope="col">Statut</th> {# Added Status Column #}
                            </tr>
                            </thead>
                            <tbody>
                            {# Use a more descriptive loop variable name like 'participation' #}
                            {% for participation in participants %}
                                <tr>
                                    <td>
                                        {# Access the user THROUGH the participation object #}
                                        {# Use null-safe operator (?.) in case utilisateur is null #}
                                        {# Or use an if check #}
                                        {% if participation.utilisateur %}
                                            {{ participation.utilisateur.fullName }} {# Use the helper method #}
                                            {# Or: {{ participation.utilisateur.prenom }} {{ participation.utilisateur.nom }} #}
                                        {% else %}
                                            <span class="text-muted fst-italic">Utilisateur Supprimé</span>
                                        {% endif %}
                                    </td>
                                    <td>
                                        {# Access the user's email #}
                                        {{ participation.utilisateur.email ?? '-' }} {# Null coalescing operator #}
                                    </td>
                                    <td>
                                        {# Access the user's telephone #}
                                        {{ participation.utilisateur.telephone ?? '-' }}
                                    </td>
                                    <td>
                                        {{ participation.dateInscription ? participation.dateInscription|date('d/m/Y H:i') : 'N/A' }}
                                    </td>
                                    <td>
                                        {# Display participation status #}
                                        {% if participation.statut == constant('App\\Enum\\ParticipationStatus::INSCRIT') %} {# <--- CORRECTED HERE #}
                                            <span class="badge bg-success">{{ participation.statut.value|replace({'_': ' '})|capitalize }}</span>
                                        {% elseif participation.statut == constant('App\\Enum\\ParticipationStatus::ANNULE') %} {# <--- CORRECTED HERE #}
                                            <span class="badge bg-danger">{{ participation.statut.value|replace({'_': ' '})|capitalize }}</span>
                                        {% else %}
                                            <span class="badge bg-secondary">{{ participation.statut ? participation.statut.value|replace({'_': ' '})|capitalize : 'Inconnu' }}</span>
                                        {% endif %}
                                    </td>
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>
                    </div>
                {% else %}
                    <div class="card-body"> {# Add padding back if table is empty #}
                        <p class="text-center text-muted mb-0">Aucun participant inscrit pour cet événement.</p>
                    </div>
                {% endif %}
            </div>
            {# Optional: Add Export to PDF/CSV button here later #}
            {# <div class="card-footer text-end">
             <a href="#" class="btn btn-sm btn-primary disabled">Exporter PDF</a>
         </div> #}
        </div>
    </div>
{% endblock %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/partials/_flash_messages.html.twig -----
{# templates/partials/_flash_messages.html.twig #}
{% for label, messages in app.flashes %}
    {% for message in messages %}
        <div class="alert alert-{{ label }} alert-dismissible fade show" role="alert">
            {# Add appropriate icons based on label #}
            {% if label == 'success' %}
                <i class="bi bi-check-circle-fill me-2"></i>
            {% elseif label == 'danger' or label == 'error' %}
                <i class="bi bi-exclamation-triangle-fill me-2"></i>
            {% elseif label == 'warning' %}
                <i class="bi bi-exclamation-triangle-fill me-2"></i>
            {% elseif label == 'info' %}
                <i class="bi bi-info-circle-fill me-2"></i>
            {% endif %}

            {{ message|raw }} {# Use raw filter if messages might contain HTML #}

            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    {% endfor %}
{% endfor %}


----- /Users/mac/Downloads/my_project_troti-vf/templates/partials/_nav.html.twig -----
{# templates/partials/_nav.html.twig #}
<nav class="navbar navbar-expand-lg navbar-glass fixed-top py-3" style="font-size: 15px">

    <div class="container" >
        <a class="navbar-brand" href="{{ path('app_home') }}">
            <span class="brand-highlight">Trotti</span>Care
        </a>

        <button class="navbar-toggler border-0" type="button"
                data-bs-toggle="collapse"
                data-bs-target="#mainNav"
                aria-controls="mainNav"
                aria-expanded="false"
                aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="mainNav">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                {% if is_granted('IS_AUTHENTICATED_REMEMBERED') %}
                    <li class="nav-item">
                        <a class="nav-link {{ app.request.get('_route') starts with 'point_relais' ? 'active' : '' }}"
                           href="{{ path('point_relais_index') }}">
                            Points Relais
                        </a>
                    </li>
                {% endif %}

                {% if is_granted('ROLE_USER') %}
                    <li class="nav-item">
                        <a class="nav-link {{ app.request.get('_route') starts with 'dashboard' ? 'active' : '' }}"
                           href="/client/dashboard">
                            Home
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ app.request.get('_route') starts with 'reservation_' ? 'active' : '' }}"
                           href="{{ path('reservation_index') }}">
                            Mes Réservations
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ app.request.get('_route') starts with 'reclamation_' ? 'active' : '' }}"
                           href="{{ path('reclamation_index') }}">
                            Mes Réclamations
                        </a>
                    </li>

                {% endif %}

                {% if is_granted('ROLE_PARTENAIRE') %}
                    {# Partner‐specific links here… #}
                {% endif %}

                {% if is_granted('ROLE_ADMIN') %}
                    <li class="nav-item">
                        <a class="nav-link {{ app.request.get('_route') starts with 'admin_utilisateur' ? 'active' : '' }}"
                           href="{{ path('admin_utilisateur_index') }}">
                            Utilisateurs
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ app.request.get('_route') starts with 'app_event' ? 'active' : '' }}"
                           href="{{ path('app_event_index') }}">
                            Événements
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ app.request.get('_route') starts with 'app_trottinette' ? 'active' : '' }}"
                           href="{{ path('app_trottinette_index') }}">
                            Trottinettes
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ app.request.get('_route') starts with 'admin_' ? 'active' : '' }}"
                           href="{{ path('reservation_index') }}">
                            Réservations
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ app.request.get('_route') starts with 'admin_reclamation' ? 'active' : '' }}"
                           href="{{ path('reclamation_index') }}">
                            Réclamations
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ app.request.get('_route') starts with 'app_admin_events' ? 'active' : '' }}"
                           href="{{ path('app_admin_events') }}">
                            Gestion Événements
                        </a>
                    </li>
                {% endif %}
            </ul>

            <ul class="navbar-nav ms-auto">
                {% if app.user %}
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle d-flex align-items-center gap-2"
                           href="#"
                           role="button"
                           data-bs-toggle="dropdown"
                           aria-expanded="false">
                            <i class="bi bi-person-circle fs-5"></i>
                            {{ app.user.prenom ?: app.user.userIdentifier }}
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end">
                            {% if is_granted('ROLE_ADMIN') %}
                                <li><a class="dropdown-item" href="{{ path('app_admin_dashboard') }}" style="color: white">Tableau de Bord Admin</a></li>
                            {% endif %}
                            {% if is_granted('ROLE_PARTENAIRE') %}
                                <li><a class="dropdown-item" href="{{ path('app_partenaire_dashboard') }}" style="color: white">Tableau de Bord Partenaire</a></li>
                                <li><hr class="dropdown-divider"></li>
                            {% endif %}
                            <li><a class="dropdown-item" href="{{ path('app_client_profile_view') }}" style="color: white">Profil</a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item" href="{{ path('app_logout') }}" style="color: white">Déconnexion</a></li>
                        </ul>
                    </li>
                {% else %}
                    <li class="nav-item">
                        <a class="nav-link" href="{{ path('app_login') }}">Connexion</a>
                    </li>
                {% endif %}
            </ul>
        </div>
    </div>
</nav>


